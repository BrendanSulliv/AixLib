#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
  100000                   # StopTime     Time at which integration stops
       1                   # Increment    Communication step size, if > 0
       0                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-004   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(563,81)
system.p_ambient
system.T_ambient
system.g
system.allowFlowReversal
system.energyDynamics
system.massDynamics
system.substanceDynamics
system.traceDynamics
system.momentumDynamics
system.m_flow_start
system.p_start
system.T_start
system.use_eps_Re
system.m_flow_nominal
system.eps_m_flow
system.dp_small
system.m_flow_small
activeWall.system.p_ambient
activeWall.system.T_ambient
activeWall.system.g
activeWall.system.allowFlowReversal
activeWall.system.energyDynamics
activeWall.system.massDynamics
activeWall.system.substanceDynamics
activeWall.system.traceDynamics
activeWall.system.momentumDynamics
activeWall.system.m_flow_start
activeWall.system.p_start
activeWall.system.T_start
activeWall.system.use_eps_Re
activeWall.system.m_flow_nominal
activeWall.system.eps_m_flow
activeWall.system.dp_small
activeWall.system.m_flow_small
activeWall.outside
activeWall.WallType.n
activeWall.WallType.d[1]
activeWall.WallType.d[2]
activeWall.WallType.d[3]
activeWall.WallType.d[4]
activeWall.WallType.rho[1]
activeWall.WallType.rho[2]
activeWall.WallType.rho[3]
activeWall.WallType.rho[4]
activeWall.WallType.lambda[1]
activeWall.WallType.lambda[2]
activeWall.WallType.lambda[3]
activeWall.WallType.lambda[4]
activeWall.WallType.c[1]
activeWall.WallType.c[2]
activeWall.WallType.c[3]
activeWall.WallType.c[4]
activeWall.WallType.eps
activeWall.wall_length
activeWall.wall_height
activeWall.solar_absorptance
activeWall.Model
activeWall.alpha_custom
activeWall.surfaceType.D
activeWall.surfaceType.E
activeWall.surfaceType.F
activeWall.ISOrientation
activeWall.withWindow
activeWall.WindowType.Uw
activeWall.WindowType.g
activeWall.WindowType.Emissivity
activeWall.WindowType.frameFraction
activeWall.windowarea
activeWall.withSunblind
activeWall.Blinding
activeWall.Limit
activeWall.withDoor
activeWall.U_door
activeWall.eps_door
activeWall.door_height
activeWall.door_width
activeWall.clearance
activeWall.withActiveLayer
activeWall.connActiveLayer[1]
activeWall.connActiveLayer[2]
activeWall.pipe_diameter
activeWall.pipe_thermal_resistance
activeWall.T0
activeWall.Wall.h
activeWall.Wall.l
activeWall.Wall.clearance
activeWall.Wall.wallType.n
activeWall.Wall.wallType.d[1]
activeWall.Wall.wallType.d[2]
activeWall.Wall.wallType.d[3]
activeWall.Wall.wallType.d[4]
activeWall.Wall.wallType.rho[1]
activeWall.Wall.wallType.rho[2]
activeWall.Wall.wallType.rho[3]
activeWall.Wall.wallType.rho[4]
activeWall.Wall.wallType.lambda[1]
activeWall.Wall.wallType.lambda[2]
activeWall.Wall.wallType.lambda[3]
activeWall.Wall.wallType.lambda[4]
activeWall.Wall.wallType.c[1]
activeWall.Wall.wallType.c[2]
activeWall.Wall.wallType.c[3]
activeWall.Wall.wallType.c[4]
activeWall.Wall.wallType.eps
activeWall.Wall.withConvection
activeWall.Wall.surfaceOrientation
activeWall.Wall.withRadExchange
activeWall.Wall.withActiveLayer
activeWall.Wall.connActiveLayer[1]
activeWall.Wall.connActiveLayer[2]
activeWall.Wall.T0
activeWall.Wall.HeatConv1.dT
activeWall.Wall.HeatConv1.port_b.T
activeWall.Wall.HeatConv1.calcMethod
activeWall.Wall.HeatConv1.alpha_custom
activeWall.Wall.HeatConv1.surfaceOrientation
activeWall.Wall.HeatConv1.A
activeWall.Wall.HeatConv1.alpha
activeWall.Wall.HeatConv1.posDiff
activeWall.Wall.Star.Q_flow
activeWall.Wall.twoStar_RadEx.Therm.Q_flow
activeWall.Wall.twoStar_RadEx.Star.Q_flow
activeWall.Wall.twoStar_RadEx.A
activeWall.Wall.twoStar_RadEx.eps
activeWall.Wall.port_a.T
activeWall.Wall.A
activeWall.Wall.portActiveLayer_a.T
activeWall.Wall.portActiveLayer_a.Q_flow
activeWall.Wall.portActiveLayer_b.Q_flow
activeWall.port_outside.T
activeWall.port_outside.Q_flow
activeWall.heatStarToComb.thermStarComb.Star.Q_flow
activeWall.heatStarToComb.star.Q_flow
activeWall.thermStarComb_inside.Therm.Q_flow
activeWall.thermStarComb_inside.Star.T
activeWall.thermStarComb_inside.Star.Q_flow
activeWall.port_b1.m_flow
activeWall.port_b1.der(m_flow)
activeWall.port_b1.h_outflow
activeWall.port_a1.h_outflow
activeWall.pipe.allowFlowReversal
activeWall.pipe.port_a_exposesState
activeWall.pipe.port_b_exposesState
activeWall.pipe.showDesignFlowDirection
activeWall.pipe.nParallel
activeWall.pipe.length
activeWall.pipe.isCircular
activeWall.pipe.diameter
activeWall.pipe.crossArea
activeWall.pipe.perimeter
activeWall.pipe.roughness
activeWall.pipe.V
activeWall.pipe.height_ab
activeWall.pipe.n
activeWall.pipe.fluidVolumes[1]
activeWall.pipe.fluidVolumes[2]
activeWall.pipe.energyDynamics
activeWall.pipe.massDynamics
activeWall.pipe.substanceDynamics
activeWall.pipe.traceDynamics
activeWall.pipe.p_a_start
activeWall.pipe.p_b_start
activeWall.pipe.ps_start[1]
activeWall.pipe.ps_start[2]
activeWall.pipe.use_T_start
activeWall.pipe.T_start
activeWall.pipe.h_start
activeWall.pipe.X_start[1]
activeWall.pipe.Us[1]
activeWall.pipe.Us[2]
activeWall.pipe.der(Us[1])
activeWall.pipe.der(Us[2])
activeWall.pipe.ms[1]
activeWall.pipe.ms[2]
activeWall.pipe.der(ms[1])
activeWall.pipe.der(ms[2])
activeWall.pipe.mb_flows[1]
activeWall.pipe.mb_flows[2]
activeWall.pipe.Hb_flows[1]
activeWall.pipe.Hb_flows[2]
activeWall.pipe.Qb_flows[1]
activeWall.pipe.Qb_flows[2]
activeWall.pipe.Wb_flows[1]
activeWall.pipe.Wb_flows[2]
activeWall.pipe.initialize_p
activeWall.pipe.lengths[1]
activeWall.pipe.lengths[2]
activeWall.pipe.crossAreas[1]
activeWall.pipe.crossAreas[2]
activeWall.pipe.dimensions[1]
activeWall.pipe.dimensions[2]
activeWall.pipe.roughnesses[1]
activeWall.pipe.roughnesses[2]
activeWall.pipe.dheights[1]
activeWall.pipe.dheights[2]
activeWall.pipe.momentumDynamics
activeWall.pipe.m_flow_start
activeWall.pipe.nNodes
activeWall.pipe.modelStructure
activeWall.pipe.useLumpedPressure
activeWall.pipe.nFM
activeWall.pipe.nFMDistributed
activeWall.pipe.nFMLumped
activeWall.pipe.iLumped
activeWall.pipe.useInnerPortProperties
activeWall.pipe.state_a.T
activeWall.pipe.state_b.T
activeWall.pipe.flowModel.from_dp
activeWall.pipe.flowModel.n
activeWall.pipe.flowModel.nParallel
activeWall.pipe.flowModel.dheights[1]
activeWall.pipe.flowModel.g
activeWall.pipe.flowModel.allowFlowReversal
activeWall.pipe.flowModel.momentumDynamics
activeWall.pipe.flowModel.m_flow_start
activeWall.pipe.flowModel.p_a_start
activeWall.pipe.flowModel.p_b_start
activeWall.pipe.flowModel.m
activeWall.pipe.flowModel.pathLengths[1]
activeWall.pipe.flowModel.Is[1]
activeWall.pipe.flowModel.Ib_flows[1]
activeWall.pipe.flowModel.Fs_p[1]
activeWall.pipe.flowModel.der(Fs_p[1])
activeWall.pipe.flowModel.useUpstreamScheme
activeWall.pipe.flowModel.use_Ib_flows
activeWall.pipe.flowModel.rhos[1]
activeWall.pipe.flowModel.rhos[2]
activeWall.pipe.flowModel.rhos_act[1]
activeWall.pipe.flowModel.mus[1]
activeWall.pipe.flowModel.mus[2]
activeWall.pipe.flowModel.mus_act[1]
activeWall.pipe.flowModel.dps_fg[1]
activeWall.pipe.flowModel.der(dps_fg[1])
activeWall.pipe.flowModel.Re_turbulent
activeWall.pipe.flowModel.show_Res
activeWall.pipe.flowModel.use_rho_nominal
activeWall.pipe.flowModel.rho_nominal
activeWall.pipe.flowModel.use_mu_nominal
activeWall.pipe.flowModel.mu_nominal
activeWall.pipe.flowModel.pathLengths_internal[1]
activeWall.pipe.flowModel.Res_turbulent_internal[1]
activeWall.pipe.flowModel.dp_nominal
activeWall.pipe.flowModel.m_flow_nominal
activeWall.pipe.flowModel.m_flow_small
activeWall.pipe.flowModel.dp_small
activeWall.pipe.flowModel.constantPressureLossCoefficient
activeWall.pipe.flowModel.continuousFlowReversal
activeWall.pipe.flowModel.diameters[1]
activeWall.pipe.flowModel.dp_fric_nominal
activeWall.pipe.H_flows[1]
activeWall.pipe.H_flows[2]
activeWall.pipe.H_flows[3]
activeWall.pipe.vs[1]
activeWall.pipe.vs[2]
activeWall.pipe.pathLengths[1]
activeWall.pipe.dheightsFM[1]
activeWall.pipe.use_HeatTransfer
activeWall.pipe.heatTransfer.n
activeWall.pipe.heatTransfer.surfaceAreas[1]
activeWall.pipe.heatTransfer.surfaceAreas[2]
activeWall.pipe.heatTransfer.use_k
activeWall.pipe.heatTransfer.k
activeWall.pipe.heatTransfer.T_ambient
activeWall.pipe.heatTransfer.nParallel
activeWall.pipe.heatTransfer.lengths[1]
activeWall.pipe.heatTransfer.lengths[2]
activeWall.pipe.dxs[1]
activeWall.pipe.dxs[2]
activeWall.thermalResistor.Q_flow
activeWall.thermalResistor.dT
activeWall.thermalResistor.R
thermStar_Demux.thermStarComb.Star.Q_flow
thermStar_Demux.star.Q_flow
airload.rho
airload.c
airload.V
airload.T
airload.der(T)
airload.m
tempOutside.port.T
tempOutside.T
realExpression.y
pump.allowFlowReversal
pump.port_a.p
pump.port_b.h_outflow
pump.dp_start
pump.m_flow_start
pump.m_flow_small
pump.show_T
pump.show_V_flow
pump.dp
pump.V_flow
pump.der(V_flow)
pump.port_a_T
pump.port_b_T
_GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default[1]
pump.MinMaxCharacteristics.minMaxHead[1, 1]
pump.MinMaxCharacteristics.minMaxHead[1, 2]
pump.MinMaxCharacteristics.minMaxHead[1, 3]
pump.MinMaxCharacteristics.minMaxHead[2, 1]
pump.MinMaxCharacteristics.minMaxHead[2, 2]
pump.MinMaxCharacteristics.minMaxHead[2, 3]
pump.MinMaxCharacteristics.minMaxHead[3, 1]
pump.MinMaxCharacteristics.minMaxHead[3, 2]
pump.MinMaxCharacteristics.minMaxHead[3, 3]
pump.MinMaxCharacteristics.minMaxHead[4, 1]
pump.MinMaxCharacteristics.minMaxHead[4, 2]
pump.MinMaxCharacteristics.minMaxHead[4, 3]
pump.MinMaxCharacteristics.minMaxHead[5, 1]
pump.MinMaxCharacteristics.minMaxHead[5, 2]
pump.MinMaxCharacteristics.minMaxHead[5, 3]
pump.MinMaxCharacteristics.minMaxHead[6, 1]
pump.MinMaxCharacteristics.minMaxHead[6, 2]
pump.MinMaxCharacteristics.minMaxHead[6, 3]
pump.MinMaxCharacteristics.minMaxHead[7, 1]
pump.MinMaxCharacteristics.minMaxHead[7, 2]
pump.MinMaxCharacteristics.minMaxHead[7, 3]
pump.MinMaxCharacteristics.minMaxHead[8, 1]
pump.MinMaxCharacteristics.minMaxHead[8, 2]
pump.MinMaxCharacteristics.minMaxHead[8, 3]
pump.MinMaxCharacteristics.minMaxHead[9, 1]
pump.MinMaxCharacteristics.minMaxHead[9, 2]
pump.MinMaxCharacteristics.minMaxHead[9, 3]
pump.MinMaxCharacteristics.minMaxHead[10, 1]
pump.MinMaxCharacteristics.minMaxHead[10, 2]
pump.MinMaxCharacteristics.minMaxHead[10, 3]
pump.ControlStrategy
pump.Head_max
pump.V_flow_max
pump.Head
pump.der(Head)
pump.table_minMaxCharacteristics.nout
pump.table_minMaxCharacteristics.u
pump.table_minMaxCharacteristics.der(u)
pump.table_minMaxCharacteristics.y[2]
pump.table_minMaxCharacteristics.tableOnFile
pump.table_minMaxCharacteristics.table[1, 1]
pump.table_minMaxCharacteristics.table[1, 2]
pump.table_minMaxCharacteristics.table[1, 3]
pump.table_minMaxCharacteristics.table[2, 1]
pump.table_minMaxCharacteristics.table[2, 2]
pump.table_minMaxCharacteristics.table[2, 3]
pump.table_minMaxCharacteristics.table[3, 1]
pump.table_minMaxCharacteristics.table[3, 2]
pump.table_minMaxCharacteristics.table[3, 3]
pump.table_minMaxCharacteristics.table[4, 1]
pump.table_minMaxCharacteristics.table[4, 2]
pump.table_minMaxCharacteristics.table[4, 3]
pump.table_minMaxCharacteristics.table[5, 1]
pump.table_minMaxCharacteristics.table[5, 2]
pump.table_minMaxCharacteristics.table[5, 3]
pump.table_minMaxCharacteristics.table[6, 1]
pump.table_minMaxCharacteristics.table[6, 2]
pump.table_minMaxCharacteristics.table[6, 3]
pump.table_minMaxCharacteristics.table[7, 1]
pump.table_minMaxCharacteristics.table[7, 2]
pump.table_minMaxCharacteristics.table[7, 3]
pump.table_minMaxCharacteristics.table[8, 1]
pump.table_minMaxCharacteristics.table[8, 2]
pump.table_minMaxCharacteristics.table[8, 3]
pump.table_minMaxCharacteristics.table[9, 1]
pump.table_minMaxCharacteristics.table[9, 2]
pump.table_minMaxCharacteristics.table[9, 3]
pump.table_minMaxCharacteristics.table[10, 1]
pump.table_minMaxCharacteristics.table[10, 2]
pump.table_minMaxCharacteristics.table[10, 3]
pump.table_minMaxCharacteristics.verboseRead
pump.table_minMaxCharacteristics.columns[1]
pump.table_minMaxCharacteristics.columns[2]
pump.table_minMaxCharacteristics.smoothness
pump.table_minMaxCharacteristics.tableID.id
pump.table_minMaxCharacteristics.tableOnFileRead
pump.IsNight
boundary.nPorts
boundary.medium.p
boundary.medium.h
boundary.medium.d
boundary.medium.T
boundary.medium.X[1]
boundary.medium.u
boundary.medium.R
boundary.medium.MM
boundary.medium.state.p
boundary.medium.state.T
boundary.medium.preferredMediumStates
boundary.medium.standardOrderComponents
boundary.medium.T_degC
boundary.medium.p_bar
boundary.ports[1].p
boundary.ports[1].h_outflow
boundary.flowDirection
boundary.use_p_in
boundary.use_T_in
boundary.use_X_in
boundary.use_C_in
boundary.p
boundary.T
boundary.X[1]
boundary.T_in
boundary.p_in_internal
boundary.T_in_internal
boundary.X_in_internal[1]
realExpression1.y
boundary1.nPorts
boundary1.medium.p
boundary1.medium.d
boundary1.medium.X[1]
boundary1.medium.u
boundary1.medium.R
boundary1.medium.MM
boundary1.medium.state.p
boundary1.medium.preferredMediumStates
boundary1.medium.standardOrderComponents
boundary1.medium.T_degC
boundary1.medium.p_bar
boundary1.ports[1].p
boundary1.ports[1].h_outflow
boundary1.flowDirection
boundary1.use_p_in
boundary1.use_T_in
boundary1.use_X_in
boundary1.use_C_in
boundary1.p
boundary1.T
boundary1.X[1]
boundary1.p_in_internal
boundary1.T_in_internal
boundary1.X_in_internal[1]
pipe.allowFlowReversal
pipe.port_a.h_outflow
pipe.port_b.p
pipe.port_b.h_outflow
pipe.port_a_exposesState
pipe.port_b_exposesState
pipe.showDesignFlowDirection
pipe.nParallel
pipe.length
pipe.isCircular
pipe.diameter
pipe.crossArea
pipe.perimeter
pipe.roughness
pipe.V
pipe.height_ab
pipe.p_a_start
pipe.p_b_start
pipe.m_flow_start
pipe.flowModel.from_dp
pipe.flowModel.n
pipe.flowModel.states[1].T
pipe.flowModel.states[2].p
pipe.flowModel.states[2].T
pipe.flowModel.vs[1]
pipe.flowModel.vs[2]
pipe.flowModel.nParallel
pipe.flowModel.dimensions[1]
pipe.flowModel.dimensions[2]
pipe.flowModel.g
pipe.flowModel.allowFlowReversal
pipe.flowModel.momentumDynamics
pipe.flowModel.m_flow_start
pipe.flowModel.p_a_start
pipe.flowModel.p_b_start
pipe.flowModel.m
pipe.flowModel.Is[1]
pipe.flowModel.Ib_flows[1]
pipe.flowModel.Fs_p[1]
pipe.flowModel.der(Fs_p[1])
pipe.flowModel.useUpstreamScheme
pipe.flowModel.use_Ib_flows
pipe.flowModel.rhos[1]
pipe.flowModel.rhos[2]
pipe.flowModel.rhos_act[1]
pipe.flowModel.mus[1]
pipe.flowModel.mus[2]
pipe.flowModel.mus_act[1]
pipe.flowModel.dps_fg[1]
pipe.flowModel.der(dps_fg[1])
pipe.flowModel.Re_turbulent
pipe.flowModel.show_Res
pipe.flowModel.use_rho_nominal
pipe.flowModel.rho_nominal
pipe.flowModel.use_mu_nominal
pipe.flowModel.mu_nominal
pipe.flowModel.Res_turbulent_internal[1]
pipe.flowModel.dp_nominal
pipe.flowModel.m_flow_nominal
pipe.flowModel.m_flow_small
pipe.flowModel.dp_small
pipe.flowModel.constantPressureLossCoefficient
pipe.flowModel.continuousFlowReversal
pipe.flowModel.diameters[1]
pipe.flowModel.dp_fric_nominal
temperature.port.m_flow
temperature.port.h_outflow
_GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default_Unique19[1]
booleanExpression.y
temperature1.port.m_flow
temperature1.port.h_outflow
temperature1.T
activeWall.Wall.HeatCondb[1].Q_flow
activeWall.Wall.HeatCondb[1].dT
activeWall.Wall.HeatCondb[1].port_b.T
activeWall.Wall.HeatCondb[1].G
activeWall.Wall.HeatCondb[2].dT
activeWall.Wall.HeatCondb[2].G
activeWall.Wall.HeatCondb[3].Q_flow
activeWall.Wall.HeatCondb[3].dT
activeWall.Wall.HeatCondb[3].port_b.T
activeWall.Wall.HeatCondb[3].G
activeWall.Wall.HeatCondb[4].dT
activeWall.Wall.HeatCondb[4].G
activeWall.Wall.HeatConda[1].dT
activeWall.Wall.HeatConda[1].port_a.T
activeWall.Wall.HeatConda[1].G
activeWall.Wall.HeatConda[2].dT
activeWall.Wall.HeatConda[2].G
activeWall.Wall.HeatConda[3].dT
activeWall.Wall.HeatConda[3].G
activeWall.Wall.HeatConda[4].dT
activeWall.Wall.HeatConda[4].G
activeWall.Wall.Load[1].C
activeWall.Wall.Load[1].T
activeWall.Wall.Load[1].der(T)
activeWall.Wall.Load[1].port.Q_flow
activeWall.Wall.Load[2].C
activeWall.Wall.Load[2].T
activeWall.Wall.Load[2].der(T)
activeWall.Wall.Load[2].port.Q_flow
activeWall.Wall.Load[3].C
activeWall.Wall.Load[3].T
activeWall.Wall.Load[3].der(T)
activeWall.Wall.Load[3].port.Q_flow
activeWall.Wall.Load[4].C
activeWall.Wall.Load[4].T
activeWall.Wall.Load[4].der(T)
activeWall.Wall.Load[4].port.Q_flow
activeWall.pipe.mediums[1].p
activeWall.pipe.mediums[1].der(p)
activeWall.pipe.mediums[1].d
activeWall.pipe.mediums[1].T
activeWall.pipe.mediums[1].der(T)
activeWall.pipe.mediums[1].X[1]
activeWall.pipe.mediums[1].u
activeWall.pipe.mediums[1].der(u)
activeWall.pipe.mediums[1].R
activeWall.pipe.mediums[1].MM
activeWall.pipe.mediums[1].preferredMediumStates
activeWall.pipe.mediums[1].standardOrderComponents
activeWall.pipe.mediums[1].T_degC
activeWall.pipe.mediums[1].p_bar
activeWall.pipe.mediums[2].p
activeWall.pipe.mediums[2].der(p)
activeWall.pipe.mediums[2].d
activeWall.pipe.mediums[2].X[1]
activeWall.pipe.mediums[2].u
activeWall.pipe.mediums[2].der(u)
activeWall.pipe.mediums[2].R
activeWall.pipe.mediums[2].MM
activeWall.pipe.mediums[2].preferredMediumStates
activeWall.pipe.mediums[2].standardOrderComponents
activeWall.pipe.mediums[2].T_degC
activeWall.pipe.mediums[2].p_bar

double initialValue(563,6)
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+100
  1   280   # system.p_ambient
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # system.T_ambient
 -1 9.8066499999999994E+000       0                       0                
  1   280   # system.g
  0       1                       0                       0                
  6   257   # system.allowFlowReversal
  0       1                       1                       4                
  6   258   # system.energyDynamics
  0       1                       1                       4                
  6   258   # system.massDynamics
  0       1                       1                       4                
  6   258   # system.substanceDynamics
  0       1                       1                       4                
  6   258   # system.traceDynamics
  0       4                       1                       4                
  6   258   # system.momentumDynamics
  0       0                       0                       0                
  6   256   # system.m_flow_start
  0       0                       0                 1.0000000000000000E+100
  6   256   # system.p_start
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # system.T_start
  0       0                       0                       0                
  6   257   # system.use_eps_Re
  0       0                       0                       0                
  6   256   # system.m_flow_nominal
 -1 1.0000000000000000E-004       0                 1.0000000000000000E+100
  1   280   # system.eps_m_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # system.dp_small
 -1 1.0000000000000000E-002       0                 1.0000000000000000E+100
  1   280   # system.m_flow_small
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+100
  1   280   # activeWall.system.p_ambient
  0 2.9314999999999998E+002       0                 1.0000000000000000E+100
  6   256   # activeWall.system.T_ambient
 -1 9.8066499999999994E+000       0                       0                
  1   280   # activeWall.system.g
  0       1                       0                       0                
  6   257   # activeWall.system.allowFlowReversal
  0       1                       1                       4                
  6   258   # activeWall.system.energyDynamics
  0       1                       1                       4                
  6   258   # activeWall.system.massDynamics
  0       1                       1                       4                
  6   258   # activeWall.system.substanceDynamics
  0       1                       1                       4                
  6   258   # activeWall.system.traceDynamics
  0       4                       1                       4                
  6   258   # activeWall.system.momentumDynamics
  0       0                       0                       0                
  6   256   # activeWall.system.m_flow_start
  0       0                       0                 1.0000000000000000E+100
  6   256   # activeWall.system.p_start
  0 2.9314999999999998E+002       0                 1.0000000000000000E+100
  6   256   # activeWall.system.T_start
  0       0                       0                       0                
  6   257   # activeWall.system.use_eps_Re
  0       0                       0                       0                
  6   256   # activeWall.system.m_flow_nominal
 -1 1.0000000000000000E-004       0                 1.0000000000000000E+100
  1   280   # activeWall.system.eps_m_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # activeWall.system.dp_small
 -1 1.0000000000000000E-002       0                 1.0000000000000000E+100
  1   280   # activeWall.system.m_flow_small
  0       0                       0                       0                
  6   257   # activeWall.outside
  0       4                       1                 1.0000000000000000E+100
  6   258   # activeWall.WallType.n
 -1 5.0000000000000003E-002       0                       0                
  1   280   # activeWall.WallType.d[1]
 -1 1.0000000000000001E-001       0                       0                
  1   280   # activeWall.WallType.d[2]
 -1 2.3999999999999999E-001       0                       0                
  1   280   # activeWall.WallType.d[3]
 -1 1.4999999999999999E-002       0                       0                
  1   280   # activeWall.WallType.d[4]
 -1    1800                       0                 1.0000000000000000E+100
  1   280   # activeWall.WallType.rho[1]
 -1     120                       0                 1.0000000000000000E+100
  1   280   # activeWall.WallType.rho[2]
 -1    1000                       0                 1.0000000000000000E+100
  1   280   # activeWall.WallType.rho[3]
 -1    1200                       0                 1.0000000000000000E+100
  1   280   # activeWall.WallType.rho[4]
 -1       1                       0                       0                
  1   280   # activeWall.WallType.lambda[1]
 -1 3.5000000000000003E-002       0                       0                
  1   280   # activeWall.WallType.lambda[2]
 -1 5.0000000000000000E-001       0                       0                
  1   280   # activeWall.WallType.lambda[3]
 -1 5.1000000000000001E-001       0                       0                
  1   280   # activeWall.WallType.lambda[4]
 -1    1000                       0                       0                
  1   280   # activeWall.WallType.c[1]
 -1    1030                       0                       0                
  1   280   # activeWall.WallType.c[2]
 -1    1000                       0                       0                
  1   280   # activeWall.WallType.c[3]
 -1    1000                       0                       0                
  1   280   # activeWall.WallType.c[4]
 -1 9.4999999999999996E-001       0                       0                
  1   280   # activeWall.WallType.eps
  0      10                       0                       0                
  6   256   # activeWall.wall_length
  0       3                       0                 1.0000000000000000E+100
  6   256   # activeWall.wall_height
 -1 2.5000000000000000E-001       0                       0                
  1   280   # activeWall.solar_absorptance
  0       1                       0                       0                
  6   258   # activeWall.Model
 -1      25                       0                       0                
  1   280   # activeWall.alpha_custom
 -1 1.2490000000000000E+001       0                       0                
  1   280   # activeWall.surfaceType.D
 -1 4.0650000000000004E+000       0                       0                
  1   280   # activeWall.surfaceType.E
 -1 2.8000000000000001E-002       0                       0                
  1   280   # activeWall.surfaceType.F
 -1       1                       0                       0                
  1   282   # activeWall.ISOrientation
  0       0                       0                       0                
  6   257   # activeWall.withWindow
 -1 1.3000000000000000E+000       0                       0                
  1   280   # activeWall.WindowType.Uw
 -1 5.9999999999999998E-001       0                       0                
  1   280   # activeWall.WindowType.g
 -1 9.0000000000000002E-001       0                       0                
  1   280   # activeWall.WindowType.Emissivity
 -1 2.0000000000000001E-001       0                       0                
  1   280   # activeWall.WindowType.frameFraction
 -1       2                       0                       0                
  1   280   # activeWall.windowarea
  0       0                       0                       0                
  6   257   # activeWall.withSunblind
 -1       0                       0                       0                
  1   280   # activeWall.Blinding
 -1     180                       0                       0                
  1   280   # activeWall.Limit
  0       0                       0                       0                
  6   257   # activeWall.withDoor
 -1 1.8000000000000000E+000       0                       0                
  1   280   # activeWall.U_door
 -1 9.0000000000000002E-001       0                       0                
  1   280   # activeWall.eps_door
 -1       2                       0                       0                
  1   280   # activeWall.door_height
 -1       1                       0                       0                
  1   280   # activeWall.door_width
  0       0                       0                       0                
  6   256   # activeWall.clearance
  0       1                       0                       0                
  6   257   # activeWall.withActiveLayer
 -1       3                       0                       0                
  1   282   # activeWall.connActiveLayer[1]
 -1       4                       0                       0                
  1   282   # activeWall.connActiveLayer[2]
 -1 2.0000000000000000E-002       0                       0                
  1   280   # activeWall.pipe_diameter
 -1       0                       0                       0                
  1   280   # activeWall.pipe_thermal_resistance
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # activeWall.T0
  0       3                       0                 1.0000000000000000E+100
  6   256   # activeWall.Wall.h
  0      10                       0                       0                
  6   256   # activeWall.Wall.l
  0       0                       0                       0                
  6   256   # activeWall.Wall.clearance
  0       4                       1                 1.0000000000000000E+100
  6   258   # activeWall.Wall.wallType.n
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.d[1]
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.d[2]
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.d[3]
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.d[4]
  0       0                       0                 1.0000000000000000E+100
  6   256   # activeWall.Wall.wallType.rho[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # activeWall.Wall.wallType.rho[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # activeWall.Wall.wallType.rho[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # activeWall.Wall.wallType.rho[4]
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.lambda[1]
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.lambda[2]
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.lambda[3]
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.lambda[4]
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.c[1]
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.c[2]
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.c[3]
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.c[4]
  0       0                       0                       0                
  6   256   # activeWall.Wall.wallType.eps
 -1       1                       0                       0                
  1   281   # activeWall.Wall.withConvection
  0       1                       0                       0                
  6   258   # activeWall.Wall.surfaceOrientation
 -1       1                       0                       0                
  1   281   # activeWall.Wall.withRadExchange
  0       1                       0                       0                
  6   257   # activeWall.Wall.withActiveLayer
  0       2                       0                       0                
  6   258   # activeWall.Wall.connActiveLayer[1]
 -1       3                       0                       0                
  1   282   # activeWall.Wall.connActiveLayer[2]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # activeWall.Wall.T0
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatConv1.dT
  0       0                       0                 1.0000000000000000E+100
  6   260   # activeWall.Wall.HeatConv1.port_b.T
  0       1                       0                       0                
  6   258   # activeWall.Wall.HeatConv1.calcMethod
 -1 2.5000000000000000E+000       0                       0                
  1   280   # activeWall.Wall.HeatConv1.alpha_custom
  0       1                       0                       0                
  6   258   # activeWall.Wall.HeatConv1.surfaceOrientation
  0      30                       0                       0                
  6   256   # activeWall.Wall.HeatConv1.A
  0 2.5000000000000000E+000       0                       0                
  6   256   # activeWall.Wall.HeatConv1.alpha
  0       0                       0                       0                
  6  1280   # activeWall.Wall.HeatConv1.posDiff
  0       0                       0                       0                
  6   388   # activeWall.Wall.Star.Q_flow
  0       0                       0                       0                
  6   388   # activeWall.Wall.twoStar_RadEx.Therm.Q_flow
  0       0                       0                       0                
  6   388   # activeWall.Wall.twoStar_RadEx.Star.Q_flow
  0      30                       0                       0                
  6   256   # activeWall.Wall.twoStar_RadEx.A
  0       0                       0                       0                
  6   256   # activeWall.Wall.twoStar_RadEx.eps
  0     250                       0                 1.0000000000000000E+100
  6   260   # activeWall.Wall.port_a.T
  0      30                       0                       0                
  6  1280   # activeWall.Wall.A
  0       0                       0                 1.0000000000000000E+100
  6   260   # activeWall.Wall.portActiveLayer_a.T
  0       0                       0                       0                
  6   388   # activeWall.Wall.portActiveLayer_a.Q_flow
  0       0                       0                       0                
  6   388   # activeWall.Wall.portActiveLayer_b.Q_flow
  0     250                       0                 1.0000000000000000E+100
  6   260   # activeWall.port_outside.T
  0       0                       0                       0                
  6   388   # activeWall.port_outside.Q_flow
  0       0                       0                       0                
  6   388   # activeWall.heatStarToComb.thermStarComb.Star.Q_flow
  0       0                       0                       0                
  6   388   # activeWall.heatStarToComb.star.Q_flow
  0       0                       0                       0                
  6   388   # activeWall.thermStarComb_inside.Therm.Q_flow
  0       0                       0                 1.0000000000000000E+100
  6   260   # activeWall.thermStarComb_inside.Star.T
  0       0                       0                       0                
  6   388   # activeWall.thermStarComb_inside.Star.Q_flow
  0       0                 -100000                  100000                
  6   388   # activeWall.port_b1.m_flow
  0       0                       0                       0                
  6   260   # activeWall.port_b1.der(m_flow)
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # activeWall.port_b1.h_outflow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # activeWall.port_a1.h_outflow
  0       1                       0                       0                
  6   257   # activeWall.pipe.allowFlowReversal
  0       1                       0                       0                
  6  1281   # activeWall.pipe.port_a_exposesState
  0       1                       0                       0                
  6  1281   # activeWall.pipe.port_b_exposesState
 -1       1                       0                       0                
  1  1305   # activeWall.pipe.showDesignFlowDirection
 -1       1                       1                 1.0000000000000000E+100
  1   280   # activeWall.pipe.nParallel
  0     174                       0                       0                
  6   256   # activeWall.pipe.length
  0       1                       0                       0                
  6   257   # activeWall.pipe.isCircular
  0       0                       0                 1.0000000000000000E+100
  6   256   # activeWall.pipe.diameter
  0       0                       0                       0                
  6   256   # activeWall.pipe.crossArea
  0       0                       0                       0                
  6   256   # activeWall.pipe.perimeter
 -1 2.5000000000000001E-005       0                 1.0000000000000000E+100
  1   280   # activeWall.pipe.roughness
  0       0                       0                       0                
  6   256   # activeWall.pipe.V
  0       0                       0                       0                
  6   256   # activeWall.pipe.height_ab
  0       2                       0                       0                
  6   258   # activeWall.pipe.n
  0       0                       0                       0                
  6   256   # activeWall.pipe.fluidVolumes[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.fluidVolumes[2]
  0       1                       1                       4                
  6   258   # activeWall.pipe.energyDynamics
  0       1                       1                       4                
  6   258   # activeWall.pipe.massDynamics
  0       1                       1                       4                
  6   258   # activeWall.pipe.substanceDynamics
  0       1                       1                       4                
  6   258   # activeWall.pipe.traceDynamics
  0  100000                       0                 1.0000000000000000E+008
  6   256   # activeWall.pipe.p_a_start
  0  100000                       0                 1.0000000000000000E+008
  6   256   # activeWall.pipe.p_b_start
  0  100000                       0                 1.0000000000000000E+008
  6   256   # activeWall.pipe.ps_start[1]
  0  100000                       0                 1.0000000000000000E+008
  6   256   # activeWall.pipe.ps_start[2]
  0       1                       0                       0                
  6   257   # activeWall.pipe.use_T_start
  0 2.8814999999999998E+002       1                   10000                
  6   256   # activeWall.pipe.T_start
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # activeWall.pipe.h_start
 -1       1                       0                       1                
  1   280   # activeWall.pipe.X_start[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.Us[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.Us[2]
  0       0                       0                       0                
  6   256   # activeWall.pipe.der(Us[1])
  0       0                       0                       0                
  6   256   # activeWall.pipe.der(Us[2])
  0       0                       0                 1.0000000000000000E+100
  6   256   # activeWall.pipe.ms[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # activeWall.pipe.ms[2]
  0       0                       0                       0                
  6   256   # activeWall.pipe.der(ms[1])
  0       0                       0                       0                
  6   256   # activeWall.pipe.der(ms[2])
  0       0                 -100000                  100000                
  6   256   # activeWall.pipe.mb_flows[1]
  0       0                 -100000                  100000                
  6   256   # activeWall.pipe.mb_flows[2]
  0       0                       0                       0                
  6   256   # activeWall.pipe.Hb_flows[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.Hb_flows[2]
  0       0                       0                       0                
  6   256   # activeWall.pipe.Qb_flows[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.Qb_flows[2]
  0       0                       0                       0                
  6   256   # activeWall.pipe.Wb_flows[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.Wb_flows[2]
 -1       0                       0                       0                
  1  1305   # activeWall.pipe.initialize_p
  0      87                       0                       0                
  6   256   # activeWall.pipe.lengths[1]
  0      87                       0                       0                
  6   256   # activeWall.pipe.lengths[2]
  0       0                       0                       0                
  6   256   # activeWall.pipe.crossAreas[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.crossAreas[2]
  0       0                       0                       0                
  6   256   # activeWall.pipe.dimensions[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.dimensions[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # activeWall.pipe.roughnesses[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # activeWall.pipe.roughnesses[2]
  0       0                       0                       0                
  6   256   # activeWall.pipe.dheights[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.dheights[2]
  0       4                       1                       4                
  6   258   # activeWall.pipe.momentumDynamics
  0       0                 -100000                  100000                
  6   256   # activeWall.pipe.m_flow_start
  0       2                       1                 1.0000000000000000E+100
  6   258   # activeWall.pipe.nNodes
  0       1                       1                       4                
  6   258   # activeWall.pipe.modelStructure
  0       0                       0                       0                
  6   257   # activeWall.pipe.useLumpedPressure
  0       1                       0                       0                
  6   258   # activeWall.pipe.nFM
  0       1                       0                       0                
  6   258   # activeWall.pipe.nFMDistributed
  0       1                       0                       0                
  6   258   # activeWall.pipe.nFMLumped
  0       2                       0                       0                
  6   258   # activeWall.pipe.iLumped
  0       0                       0                       0                
  6   257   # activeWall.pipe.useInnerPortProperties
  0     350                       1                   10000                
  6   256   # activeWall.pipe.state_a.T
  0 2.8814999999999998E+002       1                   10000                
  6   256   # activeWall.pipe.state_b.T
  0       1                       0                       0                
  6   257   # activeWall.pipe.flowModel.from_dp
  0       2                       0                       0                
  6   258   # activeWall.pipe.flowModel.n
  0       0                       0                       0                
  6   256   # activeWall.pipe.flowModel.nParallel
  0       0                       0                       0                
  6   256   # activeWall.pipe.flowModel.dheights[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.flowModel.g
  0       1                       0                       0                
  6   257   # activeWall.pipe.flowModel.allowFlowReversal
  0       4                       1                       4                
  6   258   # activeWall.pipe.flowModel.momentumDynamics
  0       0                 -100000                  100000                
  6   256   # activeWall.pipe.flowModel.m_flow_start
  0  100000                       0                 1.0000000000000000E+008
  6   256   # activeWall.pipe.flowModel.p_a_start
  0  100000                       0                 1.0000000000000000E+008
  6   256   # activeWall.pipe.flowModel.p_b_start
  0       1                       0                       0                
  6   258   # activeWall.pipe.flowModel.m
  0     174                       0                       0                
  6   256   # activeWall.pipe.flowModel.pathLengths[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.flowModel.Is[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.flowModel.Ib_flows[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.flowModel.Fs_p[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.flowModel.der(Fs_p[1])
  0       1                       0                       0                
  6   257   # activeWall.pipe.flowModel.useUpstreamScheme
  0       0                       0                       0                
  6   257   # activeWall.pipe.flowModel.use_Ib_flows
  0 9.9558600000000001E+002       0                  100000                
  6   256   # activeWall.pipe.flowModel.rhos[1]
  0 9.9558600000000001E+002       0                  100000                
  6   256   # activeWall.pipe.flowModel.rhos[2]
  0 9.9558600000000001E+002       0                  100000                
  6   256   # activeWall.pipe.flowModel.rhos_act[1]
  0 1.0000000000000000E-003       0                 1.0000000000000000E+008
  6   256   # activeWall.pipe.flowModel.mus[1]
  0 1.0000000000000000E-003       0                 1.0000000000000000E+008
  6   256   # activeWall.pipe.flowModel.mus[2]
  0 1.0000000000000000E-003       0                 1.0000000000000000E+008
  6   256   # activeWall.pipe.flowModel.mus_act[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.flowModel.dps_fg[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.flowModel.der(dps_fg[1])
  0    4000                       0                       0                
  6   256   # activeWall.pipe.flowModel.Re_turbulent
  0       0                       0                       0                
  6   257   # activeWall.pipe.flowModel.show_Res
  0       0                       0                       0                
  6  1281   # activeWall.pipe.flowModel.use_rho_nominal
 -1 9.9558600000000001E+002       0                 1.0000000000000000E+100
  1  1304   # activeWall.pipe.flowModel.rho_nominal
  0       0                       0                       0                
  6  1281   # activeWall.pipe.flowModel.use_mu_nominal
 -1 1.0000000000000000E-003       0                 1.0000000000000000E+100
  1  1304   # activeWall.pipe.flowModel.mu_nominal
  0     174                       0                       0                
  6   256   # activeWall.pipe.flowModel.pathLengths_internal[1]
  0    4000                       0                       0                
  6   256   # activeWall.pipe.flowModel.Res_turbulent_internal[1]
  0       1                       0                 1.0000000000000000E+100
  6   256   # activeWall.pipe.flowModel.dp_nominal
  0       0                       0                       0                
  6   256   # activeWall.pipe.flowModel.m_flow_nominal
  0       0                       0                       0                
  6   256   # activeWall.pipe.flowModel.m_flow_small
  0       1                       0                 1.0000000000000000E+100
  6  1280   # activeWall.pipe.flowModel.dp_small
  0       0                       0                       0                
  6  1281   # activeWall.pipe.flowModel.constantPressureLossCoefficient
  0       0                       0                       0                
  6  1281   # activeWall.pipe.flowModel.continuousFlowReversal
  0       0                       0                       0                
  6  1280   # activeWall.pipe.flowModel.diameters[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # activeWall.pipe.flowModel.dp_fric_nominal
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # activeWall.pipe.H_flows[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # activeWall.pipe.H_flows[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # activeWall.pipe.H_flows[3]
  0       0                       0                       0                
  6   256   # activeWall.pipe.vs[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.vs[2]
  0     174                       0                       0                
  6  1280   # activeWall.pipe.pathLengths[1]
  0       0                       0                       0                
  6  1280   # activeWall.pipe.dheightsFM[1]
  0       1                       0                       0                
  6   257   # activeWall.pipe.use_HeatTransfer
  0       2                       0                       0                
  6   258   # activeWall.pipe.heatTransfer.n
  0       0                       0                       0                
  6   256   # activeWall.pipe.heatTransfer.surfaceAreas[1]
  0       0                       0                       0                
  6   256   # activeWall.pipe.heatTransfer.surfaceAreas[2]
  0       1                       0                       0                
  6   257   # activeWall.pipe.heatTransfer.use_k
  0       0                       0                       0                
  6   256   # activeWall.pipe.heatTransfer.k
  0 2.9314999999999998E+002       0                 1.0000000000000000E+100
  6   256   # activeWall.pipe.heatTransfer.T_ambient
  0       0                       0                       0                
  6   256   # activeWall.pipe.heatTransfer.nParallel
  0      87                       0                       0                
  6   256   # activeWall.pipe.heatTransfer.lengths[1]
  0      87                       0                       0                
  6   256   # activeWall.pipe.heatTransfer.lengths[2]
  0 5.0000000000000000E-001       0                       0                
  6   256   # activeWall.pipe.dxs[1]
  0 5.0000000000000000E-001       0                       0                
  6   256   # activeWall.pipe.dxs[2]
  0       0                       0                       0                
  6   256   # activeWall.thermalResistor.Q_flow
  0       0                       0                       0                
  6   256   # activeWall.thermalResistor.dT
  0       0                       0                       0                
  6   256   # activeWall.thermalResistor.R
  0       0                       0                       0                
  6   388   # thermStar_Demux.thermStarComb.Star.Q_flow
  0       0                       0                       0                
  6   388   # thermStar_Demux.star.Q_flow
 -1 1.1899999999999999E+000       0                 1.0000000000000000E+100
  1   280   # airload.rho
 -1    1007                       0                       0                
  1   280   # airload.c
 -1      10                       0                       0                
  1   280   # airload.V
 -1     290                 2.7814999999999998E+002 3.2314999999999998E+002
  2   280   # airload.T
  0       0                       0                       0                
  3   256   # airload.der(T)
  0       0                       0                 1.0000000000000000E+100
  6  1280   # airload.m
  0     250                       0                 1.0000000000000000E+100
  6   260   # tempOutside.port.T
  0     250                       0                       0                
  6   256   # tempOutside.T
  0     250                       0                       0                
  6   256   # realExpression.y
  0       1                       0                       0                
  6   257   # pump.allowFlowReversal
  0   10000                       0                 1.0000000000000000E+008
  6   260   # pump.port_a.p
  0 3.2154040000000008E+005 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pump.port_b.h_outflow
 -1       0                       0                       0                
  1   280   # pump.dp_start
 -1       0                 -100000                  100000                
  1   280   # pump.m_flow_start
 -1 1.0000000000000000E-002 -100000                  100000                
  1   280   # pump.m_flow_small
  0       1                       0                       0                
  6   257   # pump.show_T
  0       1                       0                       0                
  6   257   # pump.show_V_flow
  0       0                       0                       0                
  6   256   # pump.dp
  0       0                       0                       0                
  6   256   # pump.V_flow
  0       0                       0                       0                
  6   256   # pump.der(V_flow)
  0 2.8814999999999998E+002       1                   10000                
  6   256   # pump.port_a_T
  0 2.8814999999999998E+002       1                   10000                
  6   256   # pump.port_b_T
  0       1                       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default[1]
 -1       0                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[1, 1]
 -1 5.9999999999999998E-001       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[1, 2]
 -1       5                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[1, 3]
 -1 5.0000000000000000E-001       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[2, 1]
 -1 4.0000000000000002E-001       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[2, 2]
 -1 4.5000000000000000E+000       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[2, 3]
 -1 7.5000000000000000E-001       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[3, 1]
 -1 2.9999999999999999E-001       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[3, 2]
 -1       4                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[3, 3]
 -1 1.3000000000000000E+000       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[4, 1]
 -1       0                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[4, 2]
 -1       3                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[4, 3]
 -1 1.5000000000000000E+000       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[5, 1]
 -1       0                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[5, 2]
 -1 2.5000000000000000E+000       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[5, 3]
 -1 2.5000000000000000E+000       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[6, 1]
 -1       0                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[6, 2]
 -1 1.5000000000000000E+000       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[6, 3]
 -1       3                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[7, 1]
 -1       0                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[7, 2]
 -1       1                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[7, 3]
 -1 3.5000000000000000E+000       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[8, 1]
 -1       0                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[8, 2]
 -1 5.0000000000000000E-001       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[8, 3]
 -1       4                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[9, 1]
 -1       0                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[9, 2]
 -1       0                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[9, 3]
 -1 4.5000000000000000E+000       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[10, 1]
 -1       0                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[10, 2]
 -1       0                       0                       0                
  1   280   # pump.MinMaxCharacteristics.minMaxHead[10, 3]
  0       1                       0                       0                
  6   258   # pump.ControlStrategy
 -1       3                       0                 1.0000000000000000E+100
  1   280   # pump.Head_max
 -1       2                       0                       0                
  1   280   # pump.V_flow_max
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump.Head
  0       0                       0                       0                
  6   256   # pump.der(Head)
  0       2                       0                       0                
  6   258   # pump.table_minMaxCharacteristics.nout
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.u
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.der(u)
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.y[2]
  0       0                       0                       0                
  6   257   # pump.table_minMaxCharacteristics.tableOnFile
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[1, 1]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[1, 2]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[1, 3]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[2, 1]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[2, 2]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[2, 3]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[3, 1]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[3, 2]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[3, 3]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[4, 1]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[4, 2]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[4, 3]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[5, 1]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[5, 2]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[5, 3]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[6, 1]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[6, 2]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[6, 3]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[7, 1]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[7, 2]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[7, 3]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[8, 1]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[8, 2]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[8, 3]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[9, 1]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[9, 2]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[9, 3]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[10, 1]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[10, 2]
  0       0                       0                       0                
  6   256   # pump.table_minMaxCharacteristics.table[10, 3]
 -1       1                       0                       0                
  1   281   # pump.table_minMaxCharacteristics.verboseRead
 -1       2                       0                       0                
  1   282   # pump.table_minMaxCharacteristics.columns[1]
 -1       3                       0                       0                
  1   282   # pump.table_minMaxCharacteristics.columns[2]
  0       1                       1                       5                
  6   258   # pump.table_minMaxCharacteristics.smoothness
  0       0                       0                       0                
  6  1282   # pump.table_minMaxCharacteristics.tableID.id
  0       0                       0                       0                
  6  1280   # pump.table_minMaxCharacteristics.tableOnFileRead
  0       1                       0                       0                
  6   257   # pump.IsNight
  0       1                       0                       0                
  6   258   # boundary.nPorts
  0   10000                       0                 1.0000000000000000E+100
  6   256   # boundary.medium.p
  0 3.2154040000000008E+005       0                       0                
  6   256   # boundary.medium.h
  0 9.9558600000000001E+002       0                  100000                
  6   256   # boundary.medium.d
  0     350                       1                   10000                
  6   256   # boundary.medium.T
  0       1                       0                       1                
  6   256   # boundary.medium.X[1]
  0 3.2154040000000008E+005 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # boundary.medium.u
  0       0                       0                 1.0000000000000000E+007
  6   256   # boundary.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # boundary.medium.MM
  0   10000                       0                 1.0000000000000000E+008
  6   256   # boundary.medium.state.p
  0     350                       1                   10000                
  6   256   # boundary.medium.state.T
  0       0                       0                       0                
  6   257   # boundary.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # boundary.medium.standardOrderComponents
  0 7.6850000000000023E+001       0                       0                
  6   256   # boundary.medium.T_degC
  0 1.0000000000000001E-001       0                       0                
  6   256   # boundary.medium.p_bar
  0   10000                       0                 1.0000000000000000E+008
  6   260   # boundary.ports[1].p
  0 3.2154040000000008E+005 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # boundary.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # boundary.flowDirection
  0       0                       0                       0                
  6   769   # boundary.use_p_in
  0       1                       0                       0                
  6   769   # boundary.use_T_in
  0       0                       0                       0                
  6   769   # boundary.use_X_in
  0       0                       0                       0                
  6   769   # boundary.use_C_in
  0   10000                       0                 1.0000000000000000E+008
  6   256   # boundary.p
  0 2.9314999999999998E+002       1                   10000                
  6   256   # boundary.T
  0       1                       0                       1                
  6   256   # boundary.X[1]
  0     350                       0                       0                
  6   256   # boundary.T_in
  0   10000                       0                       0                
  6  1280   # boundary.p_in_internal
  0     350                       1                   10000                
  6  1280   # boundary.T_in_internal
  0       1                       0                       0                
  6  1280   # boundary.X_in_internal[1]
  0     350                       0                       0                
  6   256   # realExpression1.y
  0       1                       0                       0                
  6   258   # boundary1.nPorts
  0   10000                       0                 1.0000000000000000E+100
  6   256   # boundary1.medium.p
  0 9.9558600000000001E+002       0                  100000                
  6   256   # boundary1.medium.d
  0       1                       0                       1                
  6   256   # boundary1.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # boundary1.medium.u
  0       0                       0                 1.0000000000000000E+007
  6   256   # boundary1.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # boundary1.medium.MM
  0   10000                       0                 1.0000000000000000E+008
  6   256   # boundary1.medium.state.p
  0       0                       0                       0                
  6   257   # boundary1.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # boundary1.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # boundary1.medium.T_degC
  0 1.0000000000000001E-001       0                       0                
  6   256   # boundary1.medium.p_bar
  0   10000                       0                 1.0000000000000000E+008
  6   260   # boundary1.ports[1].p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # boundary1.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # boundary1.flowDirection
  0       0                       0                       0                
  6   769   # boundary1.use_p_in
  0       1                       0                       0                
  6   769   # boundary1.use_T_in
  0       0                       0                       0                
  6   769   # boundary1.use_X_in
  0       0                       0                       0                
  6   769   # boundary1.use_C_in
  0   10000                       0                 1.0000000000000000E+008
  6   256   # boundary1.p
  0 5.7314999999999998E+002       1                   10000                
  6   256   # boundary1.T
  0       1                       0                       1                
  6   256   # boundary1.X[1]
  0   10000                       0                       0                
  6  1280   # boundary1.p_in_internal
  0 2.8814999999999998E+002       1                   10000                
  6  1280   # boundary1.T_in_internal
  0       1                       0                       0                
  6  1280   # boundary1.X_in_internal[1]
  0       1                       0                       0                
  6   257   # pipe.allowFlowReversal
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pipe.port_a.h_outflow
  0   10000                       0                 1.0000000000000000E+008
  6   260   # pipe.port_b.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pipe.port_b.h_outflow
 -1       0                       0                       0                
  1  1305   # pipe.port_a_exposesState
 -1       0                       0                       0                
  1  1305   # pipe.port_b_exposesState
 -1       1                       0                       0                
  1  1305   # pipe.showDesignFlowDirection
 -1       1                       1                 1.0000000000000000E+100
  1   280   # pipe.nParallel
 -1       1                       0                       0                
  1   280   # pipe.length
  0       1                       0                       0                
  6   257   # pipe.isCircular
 -1 5.0000000000000000E-001       0                 1.0000000000000000E+100
  1   280   # pipe.diameter
  0       0                       0                       0                
  6   256   # pipe.crossArea
  0       0                       0                       0                
  6   256   # pipe.perimeter
 -1 2.5000000000000001E-005       0                 1.0000000000000000E+100
  1   280   # pipe.roughness
  0       0                       0                       0                
  6   256   # pipe.V
 -1       0                       0                       0                
  1   280   # pipe.height_ab
  0  100000                       0                 1.0000000000000000E+008
  6   256   # pipe.p_a_start
  0  100000                       0                 1.0000000000000000E+008
  6   256   # pipe.p_b_start
  0       0                 -100000                  100000                
  6   256   # pipe.m_flow_start
  0       1                       0                       0                
  6   257   # pipe.flowModel.from_dp
  0       2                       0                       0                
  6   258   # pipe.flowModel.n
  0 2.8814999999999998E+002       1                   10000                
  6   256   # pipe.flowModel.states[1].T
  0   10000                       0                 1.0000000000000000E+008
  6   256   # pipe.flowModel.states[2].p
  0 2.8814999999999998E+002       1                   10000                
  6   256   # pipe.flowModel.states[2].T
  0       0                       0                       0                
  6   256   # pipe.flowModel.vs[1]
  0       0                       0                       0                
  6   256   # pipe.flowModel.vs[2]
  0       0                       0                       0                
  6   256   # pipe.flowModel.nParallel
  0       0                       0                       0                
  6   256   # pipe.flowModel.dimensions[1]
  0       0                       0                       0                
  6   256   # pipe.flowModel.dimensions[2]
  0       0                       0                       0                
  6   256   # pipe.flowModel.g
  0       1                       0                       0                
  6   257   # pipe.flowModel.allowFlowReversal
  0       4                       1                       4                
  6   258   # pipe.flowModel.momentumDynamics
  0       0                 -100000                  100000                
  6   256   # pipe.flowModel.m_flow_start
  0  100000                       0                 1.0000000000000000E+008
  6   256   # pipe.flowModel.p_a_start
  0  100000                       0                 1.0000000000000000E+008
  6   256   # pipe.flowModel.p_b_start
  0       1                       0                       0                
  6   258   # pipe.flowModel.m
  0       0                       0                       0                
  6   256   # pipe.flowModel.Is[1]
  0       0                       0                       0                
  6   256   # pipe.flowModel.Ib_flows[1]
  0       0                       0                       0                
  6   256   # pipe.flowModel.Fs_p[1]
  0       0                       0                       0                
  6   256   # pipe.flowModel.der(Fs_p[1])
  0       1                       0                       0                
  6   257   # pipe.flowModel.useUpstreamScheme
  0       0                       0                       0                
  6   257   # pipe.flowModel.use_Ib_flows
  0 9.9558600000000001E+002       0                  100000                
  6   256   # pipe.flowModel.rhos[1]
  0 9.9558600000000001E+002       0                  100000                
  6   256   # pipe.flowModel.rhos[2]
  0 9.9558600000000001E+002       0                  100000                
  6   256   # pipe.flowModel.rhos_act[1]
  0 1.0000000000000000E-003       0                 1.0000000000000000E+008
  6   256   # pipe.flowModel.mus[1]
  0 1.0000000000000000E-003       0                 1.0000000000000000E+008
  6   256   # pipe.flowModel.mus[2]
  0 1.0000000000000000E-003       0                 1.0000000000000000E+008
  6   256   # pipe.flowModel.mus_act[1]
  0       0                       0                       0                
  6   256   # pipe.flowModel.dps_fg[1]
  0       0                       0                       0                
  6   256   # pipe.flowModel.der(dps_fg[1])
  0    4000                       0                       0                
  6   256   # pipe.flowModel.Re_turbulent
  0       0                       0                       0                
  6   257   # pipe.flowModel.show_Res
  0       0                       0                       0                
  6  1281   # pipe.flowModel.use_rho_nominal
 -1 9.9558600000000001E+002       0                 1.0000000000000000E+100
  1  1304   # pipe.flowModel.rho_nominal
  0       0                       0                       0                
  6  1281   # pipe.flowModel.use_mu_nominal
 -1 1.0000000000000000E-003       0                 1.0000000000000000E+100
  1  1304   # pipe.flowModel.mu_nominal
  0    4000                       0                       0                
  6   256   # pipe.flowModel.Res_turbulent_internal[1]
  0       1                       0                 1.0000000000000000E+100
  6   256   # pipe.flowModel.dp_nominal
  0       0                       0                       0                
  6   256   # pipe.flowModel.m_flow_nominal
  0       0                       0                       0                
  6   256   # pipe.flowModel.m_flow_small
  0       1                       0                 1.0000000000000000E+100
  6  1280   # pipe.flowModel.dp_small
  0       0                       0                       0                
  6  1281   # pipe.flowModel.constantPressureLossCoefficient
  0       0                       0                       0                
  6  1281   # pipe.flowModel.continuousFlowReversal
  0       0                       0                       0                
  6  1280   # pipe.flowModel.diameters[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pipe.flowModel.dp_fric_nominal
  0       0                       0                  100000                
  6   388   # temperature.port.m_flow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # temperature.port.h_outflow
  0       1                       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default_Unique19[1]
  0       1                       0                       0                
  6   257   # booleanExpression.y
  0       0                       0                  100000                
  6   388   # temperature1.port.m_flow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # temperature1.port.h_outflow
  0       0                       0                 1.0000000000000000E+100
  6   256   # temperature1.T
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatCondb[1].Q_flow
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatCondb[1].dT
  0       0                       0                 1.0000000000000000E+100
  6   260   # activeWall.Wall.HeatCondb[1].port_b.T
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatCondb[1].G
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatCondb[2].dT
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatCondb[2].G
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatCondb[3].Q_flow
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatCondb[3].dT
  0       0                       0                 1.0000000000000000E+100
  6   260   # activeWall.Wall.HeatCondb[3].port_b.T
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatCondb[3].G
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatCondb[4].dT
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatCondb[4].G
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatConda[1].dT
  0     250                       0                 1.0000000000000000E+100
  6   260   # activeWall.Wall.HeatConda[1].port_a.T
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatConda[1].G
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatConda[2].dT
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatConda[2].G
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatConda[3].dT
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatConda[3].G
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatConda[4].dT
  0       0                       0                       0                
  6   256   # activeWall.Wall.HeatConda[4].G
  0       0                       0                       0                
  6   256   # activeWall.Wall.Load[1].C
 -1       0                       0                 1.0000000000000000E+100
  2   272   # activeWall.Wall.Load[1].T
  0       0                       0                       0                
  3   256   # activeWall.Wall.Load[1].der(T)
  0       0                       0                       0                
  6   388   # activeWall.Wall.Load[1].port.Q_flow
  0       0                       0                       0                
  6   256   # activeWall.Wall.Load[2].C
 -1       0                       0                 1.0000000000000000E+100
  2   272   # activeWall.Wall.Load[2].T
  0       0                       0                       0                
  3   256   # activeWall.Wall.Load[2].der(T)
  0       0                       0                       0                
  6   388   # activeWall.Wall.Load[2].port.Q_flow
  0       0                       0                       0                
  6   256   # activeWall.Wall.Load[3].C
 -1       0                       0                 1.0000000000000000E+100
  2   272   # activeWall.Wall.Load[3].T
  0       0                       0                       0                
  3   256   # activeWall.Wall.Load[3].der(T)
  0       0                       0                       0                
  6   388   # activeWall.Wall.Load[3].port.Q_flow
  0       0                       0                       0                
  6   256   # activeWall.Wall.Load[4].C
 -1       0                       0                 1.0000000000000000E+100
  2   272   # activeWall.Wall.Load[4].T
  0       0                       0                       0                
  3   256   # activeWall.Wall.Load[4].der(T)
  0       0                       0                       0                
  6   388   # activeWall.Wall.Load[4].port.Q_flow
  0       0                       0                 1.0000000000000000E+008
  6   256   # activeWall.pipe.mediums[1].p
  0       0                       0                       0                
  6   256   # activeWall.pipe.mediums[1].der(p)
  0 9.9558600000000001E+002       0                  100000                
  6   256   # activeWall.pipe.mediums[1].d
 -1     300                       1                   10000                
  2   272   # activeWall.pipe.mediums[1].T
  0       0                       0                       0                
  3   256   # activeWall.pipe.mediums[1].der(T)
  0       1                       0                       1                
  6   256   # activeWall.pipe.mediums[1].X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # activeWall.pipe.mediums[1].u
  0       0                       0                       0                
  6   256   # activeWall.pipe.mediums[1].der(u)
  0       0                       0                 1.0000000000000000E+007
  6   256   # activeWall.pipe.mediums[1].R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # activeWall.pipe.mediums[1].MM
  0       1                       0                       0                
  6   257   # activeWall.pipe.mediums[1].preferredMediumStates
  0       1                       0                       0                
  6   257   # activeWall.pipe.mediums[1].standardOrderComponents
  0       0                       0                       0                
  6   256   # activeWall.pipe.mediums[1].T_degC
  0       0                       0                       0                
  6   256   # activeWall.pipe.mediums[1].p_bar
  0       0                       0                 1.0000000000000000E+008
  6   256   # activeWall.pipe.mediums[2].p
  0       0                       0                       0                
  6   256   # activeWall.pipe.mediums[2].der(p)
  0 9.9558600000000001E+002       0                  100000                
  6   256   # activeWall.pipe.mediums[2].d
  0       1                       0                       1                
  6   256   # activeWall.pipe.mediums[2].X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # activeWall.pipe.mediums[2].u
  0       0                       0                       0                
  6   256   # activeWall.pipe.mediums[2].der(u)
  0       0                       0                 1.0000000000000000E+007
  6   256   # activeWall.pipe.mediums[2].R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # activeWall.pipe.mediums[2].MM
  0       1                       0                       0                
  6   257   # activeWall.pipe.mediums[2].preferredMediumStates
  0       1                       0                       0                
  6   257   # activeWall.pipe.mediums[2].standardOrderComponents
  0       0                       0                       0                
  6   256   # activeWall.pipe.mediums[2].T_degC
  0       0                       0                       0                
  6   256   # activeWall.pipe.mediums[2].p_bar


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(563,114)
Default ambient pressure [Pa|bar]
Default ambient temperature [K|degC]
Constant gravity acceleration [m/s2]
= false to restrict to design flow direction (port_a -> port_b) [:#(type=Boolean)]
Default formulation of energy balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of mass balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of substance balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of trace substance balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of momentum balances, if options available [:#(type=Modelica.Fluid.Types.Dynamics)]
Default start value for mass flow rates [kg/s]
Default start value for pressures [Pa|bar]
Default start value for temperatures [K|degC]
= true to determine turbulent region automatically using Reynolds number [:#(type=Boolean)]
Default nominal mass flow rate [kg/s]
Regularization of zero flow for |m_flow| < eps_m_flow*m_flow_nominal [1]
Default small pressure drop for regularization of laminar and zero flow [Pa|bar]
Default small mass flow rate for regularization of laminar and zero flow [kg/s]
Default ambient pressure [Pa|bar]
Default ambient temperature [K|degC]
Constant gravity acceleration [m/s2]
= false to restrict to design flow direction (port_a -> port_b) [:#(type=Boolean)]
Default formulation of energy balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of mass balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of substance balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of trace substance balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of momentum balances, if options available [:#(type=Modelica.Fluid.Types.Dynamics)]
Default start value for mass flow rates [kg/s]
Default start value for pressures [Pa|bar]
Default start value for temperatures [K|degC]
= true to determine turbulent region automatically using Reynolds number [:#(type=Boolean)]
Default nominal mass flow rate [kg/s]
Regularization of zero flow for |m_flow| < eps_m_flow*m_flow_nominal [1]
Default small pressure drop for regularization of laminar and zero flow [Pa|bar]
Default small mass flow rate for regularization of laminar and zero flow [kg/s]
Choose if the wall is an outside or an inside wall [:#(type=Boolean)]
Number of wall layers [:#(type=Integer)]
Thickness of wall layers [m]
Thickness of wall layers [m]
Thickness of wall layers [m]
Thickness of wall layers [m]
Density of wall layers [kg/m3|g/cm3]
Density of wall layers [kg/m3|g/cm3]
Density of wall layers [kg/m3|g/cm3]
Density of wall layers [kg/m3|g/cm3]
Thermal conductivity of wall layers [W/(m.K)]
Thermal conductivity of wall layers [W/(m.K)]
Thermal conductivity of wall layers [W/(m.K)]
Thermal conductivity of wall layers [W/(m.K)]
Specific heat capacity of wall layers [J/(kg.K)]
Specific heat capacity of wall layers [J/(kg.K)]
Specific heat capacity of wall layers [J/(kg.K)]
Specific heat capacity of wall layers [J/(kg.K)]
Emissivity of inner wall surface [1]
Length of wall [m]
Height of wall [m]
Solar absorptance coefficient of outside wall surface
Choose the model for calculation of heat convection at outside surface [:#(type=Integer)]
Custom alpha for convection (just for manual selection, not recommended) [W/(m2.K)]



Inside surface orientation [:#(type=Integer)]
Choose if the wall has got a window (only outside walls) [:#(type=Boolean)]
Thermal transmission coefficient of whole window: glass + frame [W/(m2.K)]
coefficient of solar energy transmission
Material emissivity [1]
frame fraction from total fenestration area
Area of window [m2]
enable support of sunblinding? [:#(type=Boolean)]
blinding factor <=1
minimum specific total solar radiation in W/m2 for blinding becoming active
Choose if the wall has got a door [:#(type=Boolean)]
Thermal transmission coefficient of door [W/(m2.K)]
Solar emissivity of door material [1]
[m]
[m]
Wall clearance [m2]
With an active layer [:#(type=Boolean)]
Active layer to come between layers [:#(type=Integer)]
Active layer to come between layers [:#(type=Integer)]
[m]
[K/W]
Initial temperature [K|degC]
Height [m]
Length [m]
Area of clearance [m2]
Number of wall layers [:#(type=Integer)]
Thickness of wall layers [m]
Thickness of wall layers [m]
Thickness of wall layers [m]
Thickness of wall layers [m]
Density of wall layers [kg/m3|g/cm3]
Density of wall layers [kg/m3|g/cm3]
Density of wall layers [kg/m3|g/cm3]
Density of wall layers [kg/m3|g/cm3]
Thermal conductivity of wall layers [W/(m.K)]
Thermal conductivity of wall layers [W/(m.K)]
Thermal conductivity of wall layers [W/(m.K)]
Thermal conductivity of wall layers [W/(m.K)]
Specific heat capacity of wall layers [J/(kg.K)]
Specific heat capacity of wall layers [J/(kg.K)]
Specific heat capacity of wall layers [J/(kg.K)]
Specific heat capacity of wall layers [J/(kg.K)]
Emissivity of inner wall surface [1]
With convection model on side of port b [:#(type=Boolean)]
Surface orientation [:#(type=Integer)]
With radiation model on side of port b [:#(type=Boolean)]
With an active layer [:#(type=Boolean)]
Active layer to come between layers [:#(type=Integer)]
Active layer to come between layers [:#(type=Integer)]
Initial temperature [K|degC]
port_a.T - port_b.T [K,]
Port temperature [K|degC]
Calculation Method [:#(type=Integer)]
Constant heat transfer coefficient [W/(m2.K)]
Surface orientation [:#(type=Integer)]
Area of surface [m2]
variable heat transfer coefficient [W/(m2.K)]
Positive temperature difference [degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Area of radiation exchange [m2]
Emissivity [1]
Port temperature [K|degC]
[m2]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass flow rate from the connection point into the component [kg/s]
der(Mass flow rate from the connection point into the component) [kg/s2]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Number of identical parallel pipes [1]
Length [m]
= true if cross sectional area is circular [:#(type=Boolean)]
Diameter of circular pipe [m]
Inner cross section area [m2]
Inner perimeter [m]
Average height of surface asperities (default: smooth steel pipe) [m]
volume size [m3]
Height(port_b) - Height(port_a) [m]
Number of discrete volumes [:#(type=Integer)]
Discretized volume, determine in inheriting class [m3]
Discretized volume, determine in inheriting class [m3]
Formulation of energy balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of substance balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of trace substance balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure at port a [Pa|bar]
Start value of pressure at port b [Pa|bar]
Start value of pressure [Pa|bar]
Start value of pressure [Pa|bar]
Use T_start if true, otherwise h_start [:#(type=Boolean)]
Start value of temperature [K|degC]
Start value of specific enthalpy [J/kg]
Start value of mass fractions m_i/m [kg/kg]
Internal energy of fluid [J]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
der(Internal energy of fluid) [W]
Fluid mass [kg]
Fluid mass [kg]
der(Fluid mass) [kg/s]
der(Fluid mass) [kg/s]
Mass flow rate, source or sink [kg/s]
Mass flow rate, source or sink [kg/s]
Enthalpy flow rate, source or sink [W]
Enthalpy flow rate, source or sink [W]
Heat flow rate, source or sink [W]
Heat flow rate, source or sink [W]
Mechanical power, p*der(V) etc. [W]
Mechanical power, p*der(V) etc. [W]
= true to set up initial equations for pressure [:#(type=Boolean)]
lengths of flow segments [m]
lengths of flow segments [m]
cross flow areas of flow segments [m2]
cross flow areas of flow segments [m2]
hydraulic diameters of flow segments [m]
hydraulic diameters of flow segments [m]
Average heights of surface asperities [m]
Average heights of surface asperities [m]
Differences in heights of flow segments [m]
Differences in heights of flow segments [m]
Formulation of momentum balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value for mass flow rate [kg/s]
Number of discrete flow volumes [:#(type=Integer)]
Determines whether flow or volume models are present at the ports [:#(type=Modelica.Fluid.Types.ModelStructure)]
=true to lump pressure states together [:#(type=Boolean)]
number of flow models in flowModel [:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
Index of control volume with representative state if useLumpedPressure [:#(type=Integer)]
=true to take port properties for flow models from internal control volumes [:#(type=Boolean)]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
= true, use m_flow = f(dp), otherwise dp = f(m_flow) [:#(type=Boolean)]
Number of discrete flow volumes [:#(type=Integer)]
number of identical parallel flow devices [1]
Height(states[2:n]) - Height(states[1:n-1]) [m]
Constant gravity acceleration [m/s2]
= true to allow flow reversal, false restricts to design direction (states[1] -> states[n+1]) [:#(type=Boolean)]
Formulation of momentum balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of mass flow rates [kg/s]
Start value for p[1] at design inflow [Pa|bar]
Start value for p[n+1] at design outflow [Pa|bar]
Number of flow segments [:#(type=Integer)]
Lengths along flow path [m]
Momenta of flow segments [kg.m/s]
Flow of momentum across boundaries [N]
Pressure forces [N]
der(Pressure forces) [N/s]
= false to average upstream and downstream properties across flow segments [:#(type=Boolean)]
= true to consider differences in flow of momentum through boundaries [:#(type=Boolean)]
[kg/m3|g/cm3]
[kg/m3|g/cm3]
Actual density per segment [kg/m3|g/cm3]
[Pa.s]
[Pa.s]
Actual viscosity per segment [Pa.s]
pressure drop between states [Pa|bar]
der(pressure drop between states) [Pa/s]
Start of turbulent regime, depending on type of flow device [1]
= true, if Reynolds numbers are included for plotting [:#(type=Boolean)]
= true, if rho_nominal is used, otherwise computed from medium [:#(type=Boolean)]
Nominal density (e.g., rho_liquidWater = 995, rho_air = 1.2) [kg/m3|g/cm3]
= true, if mu_nominal is used, otherwise computed from medium [:#(type=Boolean)]
Nominal dynamic viscosity (e.g., mu_liquidWater = 1e-3, mu_air = 1.8e-5) [Pa.s]
pathLengths used internally; to be defined by extending class [m]
Re_turbulent used internally; to be defined by extending class [1]
Nominal pressure loss (only for nominal models) [Pa|bar]
Nominal mass flow rate [kg/s]
Within regularization if |m_flows| < m_flow_small (may be wider for large discontinuities in static head) [kg/s]
Within regularization if |dp| < dp_small (may be wider for large discontinuities in static head) [Pa|bar]
= true if the pressure loss does not depend on fluid states [:#(type=Boolean)]
= true if the pressure loss is continuous around zero flow [:#(type=Boolean)]
mean diameters between segments [m]
pressure loss for nominal conditions [Pa|bar]
Enthalpy flow rates of fluid across segment boundaries [W]
Enthalpy flow rates of fluid across segment boundaries [W]
Enthalpy flow rates of fluid across segment boundaries [W]
mean velocities in flow segments [m/s]
mean velocities in flow segments [m/s]
Lengths along flow path [m]
Differences in heights between flow segments [m]
= true to use the HeatTransfer model [:#(type=Boolean)]
Number of heat transfer segments [:#(type=Integer)]
Heat transfer areas [m2]
Heat transfer areas [m2]
= true to use k value for thermal isolation [:#(type=Boolean)]
Heat transfer coefficient to ambient [W/(m2.K)]
Ambient temperature [K|degC]
number of identical parallel flow devices [1]
Lengths along flow path [m]
Lengths along flow path [m]
[1]
[1]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal resistance of material [K/W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Density of air [kg/m3|g/cm3]
Specific heat capacity of air [J/(kg.K)]
Volume of the room [m3]
Temperature of airload [K|degC]
der(Temperature of airload) [K/s]
[kg]
Port temperature [K|degC]
[K]
Value of Real output [K]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Guess value of dp = port_a.p - port_b.p [Pa|Pa]
Guess value of m_flow = port_a.m_flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if temperatures at port_a and port_b are computed [:#(type=Boolean)]
= true, if volume flow rate at inflowing port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b (= port_a.p - port_b.p) [Pa|Pa]
Volume flow rate at inflowing port (positive when flow from port_a to port_b) [m3/s]
der(Volume flow rate at inflowing port (positive when flow from port_a to port_b)) [m3/s2]
Temperature close to port_a, if show_T = true [K|degC]
Temperature close to port_b, if show_T = true [K|degC]
Default value for mass fractions of medium (for initialization) [kg/kg]
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
V_flow | min Head | max Head
Control Strategy [:#(type=Integer)]
Set head for the control strategy [m]
Vmax in m3/h for the control strategy
Pumping head [m]
der(Pumping head) [m/s]
Number of outputs [:#(type=Integer)]
Connector of Real input signal
der(Connector of Real input signal)
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
[:#(type=Integer)]
= 1, if table was successfully read from file
[:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Absolute pressure of medium [Pa|bar]
Specific enthalpy of medium [J/kg]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the pressure from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Prescribed boundary temperature [K]
Needed to connect to conditional connector [Pa]
Needed to connect to conditional connector [K]
Needed to connect to conditional connector [1]
Value of Real output [K]
Number of ports [:#(type=Integer)]
Absolute pressure of medium [Pa|bar]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Absolute pressure of medium [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the pressure from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [Pa]
Needed to connect to conditional connector [K]
Needed to connect to conditional connector [1]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Number of identical parallel pipes [1]
Length [m]
= true if cross sectional area is circular [:#(type=Boolean)]
Diameter of circular pipe [m]
Inner cross section area [m2]
Inner perimeter [m]
Average height of surface asperities (default: smooth steel pipe) [m]
volume size [m3]
Height(port_b) - Height(port_a) [m]
Start value of pressure at port a [Pa|bar]
Start value of pressure at port b [Pa|bar]
Start value for mass flow rate [kg/s]
= true, use m_flow = f(dp), otherwise dp = f(m_flow) [:#(type=Boolean)]
Number of discrete flow volumes [:#(type=Integer)]
Temperature of medium [K|degC]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mean velocities of fluid flow [m/s]
Mean velocities of fluid flow [m/s]
number of identical parallel flow devices [1]
Characteristic dimensions for fluid flow (diameters for pipe flow) [m]
Characteristic dimensions for fluid flow (diameters for pipe flow) [m]
Constant gravity acceleration [m/s2]
= true to allow flow reversal, false restricts to design direction (states[1] -> states[n+1]) [:#(type=Boolean)]
Formulation of momentum balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of mass flow rates [kg/s]
Start value for p[1] at design inflow [Pa|bar]
Start value for p[n+1] at design outflow [Pa|bar]
Number of flow segments [:#(type=Integer)]
Momenta of flow segments [kg.m/s]
Flow of momentum across boundaries [N]
Pressure forces [N]
der(Pressure forces) [N/s]
= false to average upstream and downstream properties across flow segments [:#(type=Boolean)]
= true to consider differences in flow of momentum through boundaries [:#(type=Boolean)]
[kg/m3|g/cm3]
[kg/m3|g/cm3]
Actual density per segment [kg/m3|g/cm3]
[Pa.s]
[Pa.s]
Actual viscosity per segment [Pa.s]
pressure drop between states [Pa|bar]
der(pressure drop between states) [Pa/s]
Start of turbulent regime, depending on type of flow device [1]
= true, if Reynolds numbers are included for plotting [:#(type=Boolean)]
= true, if rho_nominal is used, otherwise computed from medium [:#(type=Boolean)]
Nominal density (e.g., rho_liquidWater = 995, rho_air = 1.2) [kg/m3|g/cm3]
= true, if mu_nominal is used, otherwise computed from medium [:#(type=Boolean)]
Nominal dynamic viscosity (e.g., mu_liquidWater = 1e-3, mu_air = 1.8e-5) [Pa.s]
Re_turbulent used internally; to be defined by extending class [1]
Nominal pressure loss (only for nominal models) [Pa|bar]
Nominal mass flow rate [kg/s]
Within regularization if |m_flows| < m_flow_small (may be wider for large discontinuities in static head) [kg/s]
Within regularization if |dp| < dp_small (may be wider for large discontinuities in static head) [Pa|bar]
= true if the pressure loss does not depend on fluid states [:#(type=Boolean)]
= true if the pressure loss is continuous around zero flow [:#(type=Boolean)]
mean diameters between segments [m]
pressure loss for nominal conditions [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Default value for mass fractions of medium (for initialization) [kg/kg]
Value of Boolean output [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Temperature in port medium [K|degC]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Port temperature [K|degC]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Port temperature [K|degC]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Port temperature [K|degC]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Absolute pressure of medium [Pa|bar]
der(Absolute pressure of medium) [Pa/s]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
der(Temperature of medium) [K/s]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
der(Specific internal energy of medium) [m2/s3]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Absolute pressure of medium [Pa|bar]
der(Absolute pressure of medium) [Pa/s]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
der(Specific internal energy of medium) [m2/s3]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]

