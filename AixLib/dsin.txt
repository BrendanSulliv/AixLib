#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
    7200                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-004   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(1292,80)
heatPumpDetailed.HPctrlType
heatPumpDetailed.capCalcType
heatPumpDetailed.dp_conNominal
heatPumpDetailed.dp_evaNominal
heatPumpDetailed.volume_eva
heatPumpDetailed.volume_con
heatPumpDetailed.dataTable.tableQdot_con[1, 1]
heatPumpDetailed.dataTable.tableQdot_con[1, 2]
heatPumpDetailed.dataTable.tableQdot_con[1, 3]
heatPumpDetailed.dataTable.tableQdot_con[1, 4]
heatPumpDetailed.dataTable.tableQdot_con[1, 5]
heatPumpDetailed.dataTable.tableQdot_con[1, 6]
heatPumpDetailed.dataTable.tableQdot_con[1, 7]
heatPumpDetailed.dataTable.tableQdot_con[2, 1]
heatPumpDetailed.dataTable.tableQdot_con[2, 2]
heatPumpDetailed.dataTable.tableQdot_con[2, 3]
heatPumpDetailed.dataTable.tableQdot_con[2, 4]
heatPumpDetailed.dataTable.tableQdot_con[2, 5]
heatPumpDetailed.dataTable.tableQdot_con[2, 6]
heatPumpDetailed.dataTable.tableQdot_con[2, 7]
heatPumpDetailed.dataTable.tableQdot_con[3, 1]
heatPumpDetailed.dataTable.tableQdot_con[3, 2]
heatPumpDetailed.dataTable.tableQdot_con[3, 3]
heatPumpDetailed.dataTable.tableQdot_con[3, 4]
heatPumpDetailed.dataTable.tableQdot_con[3, 5]
heatPumpDetailed.dataTable.tableQdot_con[3, 6]
heatPumpDetailed.dataTable.tableQdot_con[3, 7]
heatPumpDetailed.dataTable.tableQdot_con[4, 1]
heatPumpDetailed.dataTable.tableQdot_con[4, 2]
heatPumpDetailed.dataTable.tableQdot_con[4, 3]
heatPumpDetailed.dataTable.tableQdot_con[4, 4]
heatPumpDetailed.dataTable.tableQdot_con[4, 5]
heatPumpDetailed.dataTable.tableQdot_con[4, 6]
heatPumpDetailed.dataTable.tableQdot_con[4, 7]
heatPumpDetailed.dataTable.tableP_ele[1, 1]
heatPumpDetailed.dataTable.tableP_ele[1, 2]
heatPumpDetailed.dataTable.tableP_ele[1, 3]
heatPumpDetailed.dataTable.tableP_ele[1, 4]
heatPumpDetailed.dataTable.tableP_ele[1, 5]
heatPumpDetailed.dataTable.tableP_ele[1, 6]
heatPumpDetailed.dataTable.tableP_ele[1, 7]
heatPumpDetailed.dataTable.tableP_ele[2, 1]
heatPumpDetailed.dataTable.tableP_ele[2, 2]
heatPumpDetailed.dataTable.tableP_ele[2, 3]
heatPumpDetailed.dataTable.tableP_ele[2, 4]
heatPumpDetailed.dataTable.tableP_ele[2, 5]
heatPumpDetailed.dataTable.tableP_ele[2, 6]
heatPumpDetailed.dataTable.tableP_ele[2, 7]
heatPumpDetailed.dataTable.tableP_ele[3, 1]
heatPumpDetailed.dataTable.tableP_ele[3, 2]
heatPumpDetailed.dataTable.tableP_ele[3, 3]
heatPumpDetailed.dataTable.tableP_ele[3, 4]
heatPumpDetailed.dataTable.tableP_ele[3, 5]
heatPumpDetailed.dataTable.tableP_ele[3, 6]
heatPumpDetailed.dataTable.tableP_ele[3, 7]
heatPumpDetailed.dataTable.tableP_ele[4, 1]
heatPumpDetailed.dataTable.tableP_ele[4, 2]
heatPumpDetailed.dataTable.tableP_ele[4, 3]
heatPumpDetailed.dataTable.tableP_ele[4, 4]
heatPumpDetailed.dataTable.tableP_ele[4, 5]
heatPumpDetailed.dataTable.tableP_ele[4, 6]
heatPumpDetailed.dataTable.tableP_ele[4, 7]
heatPumpDetailed.dataTable.mFlow_conNom
heatPumpDetailed.dataTable.mFlow_evaNom
heatPumpDetailed.T_startEva
heatPumpDetailed.T_startCon
heatPumpDetailed.N_max
heatPumpDetailed.N_min
heatPumpDetailed.N_nom
heatPumpDetailed.P_eleOutput
heatPumpDetailed.CoP_output
heatPumpDetailed.PT1_cycle
heatPumpDetailed.timeConstantCycle
heatPumpDetailed.eta_ele
heatPumpDetailed.factorScale
heatPumpDetailed.P_eleAdd
heatPumpDetailed.CorrFlowCo
heatPumpDetailed.mFlow_conNominal
heatPumpDetailed.CorrFlowEv
heatPumpDetailed.mFlow_evaNominal
heatPumpDetailed.port_evaOut.m_flow
heatPumpDetailed.port_evaOut.h_outflow
heatPumpDetailed.T_evaIn.allowFlowReversal
heatPumpDetailed.T_evaIn.m_flow_nominal
heatPumpDetailed.T_evaIn.m_flow_small
_GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default[1]
heatPumpDetailed.T_evaIn.tau
heatPumpDetailed.T_evaIn.initType
heatPumpDetailed.T_evaIn.k
heatPumpDetailed.T_evaIn.dynamic
heatPumpDetailed.T_evaIn.mNor_flow
heatPumpDetailed.T_evaIn.tauInv
heatPumpDetailed.T_evaIn.T
heatPumpDetailed.T_evaIn.der(T)
heatPumpDetailed.T_evaIn.T_start
heatPumpDetailed.T_evaIn.transferHeat
heatPumpDetailed.T_evaIn.TAmb
heatPumpDetailed.T_evaIn.tauHeaTra
heatPumpDetailed.T_evaIn.tauHeaTraInv
heatPumpDetailed.T_evaIn.TMed
heatPumpDetailed.T_evaIn.T_a_inflow
heatPumpDetailed.T_evaIn.T_b_inflow
heatPumpDetailed.T_conIn.allowFlowReversal
heatPumpDetailed.T_conIn.m_flow_nominal
heatPumpDetailed.T_conIn.m_flow_small
heatPumpDetailed.T_conIn.tau
heatPumpDetailed.T_conIn.initType
heatPumpDetailed.T_conIn.k
heatPumpDetailed.T_conIn.dynamic
heatPumpDetailed.T_conIn.mNor_flow
heatPumpDetailed.T_conIn.tauInv
heatPumpDetailed.T_conIn.T
heatPumpDetailed.T_conIn.der(T)
heatPumpDetailed.T_conIn.T_start
heatPumpDetailed.T_conIn.transferHeat
heatPumpDetailed.T_conIn.TAmb
heatPumpDetailed.T_conIn.tauHeaTra
heatPumpDetailed.T_conIn.tauHeaTraInv
heatPumpDetailed.T_conIn.TMed
heatPumpDetailed.T_conIn.T_a_inflow
heatPumpDetailed.T_conIn.T_b_inflow
heatPumpDetailed.port_conIn.m_flow
heatPumpDetailed.port_conIn.h_outflow
heatPumpDetailed.T_conOut.allowFlowReversal
heatPumpDetailed.T_conOut.m_flow_nominal
heatPumpDetailed.T_conOut.m_flow_small
heatPumpDetailed.T_conOut.tau
heatPumpDetailed.T_conOut.initType
heatPumpDetailed.T_conOut.k
heatPumpDetailed.T_conOut.dynamic
heatPumpDetailed.T_conOut.mNor_flow
heatPumpDetailed.T_conOut.tauInv
heatPumpDetailed.T_conOut.T
heatPumpDetailed.T_conOut.der(T)
heatPumpDetailed.T_conOut.T_start
heatPumpDetailed.T_conOut.transferHeat
heatPumpDetailed.T_conOut.TAmb
heatPumpDetailed.T_conOut.tauHeaTra
heatPumpDetailed.T_conOut.tauHeaTraInv
heatPumpDetailed.T_conOut.TMed
heatPumpDetailed.T_conOut.T_a_inflow
heatPumpDetailed.T_conOut.T_b_inflow
heatPumpDetailed.T_evaOut.allowFlowReversal
heatPumpDetailed.T_evaOut.m_flow_nominal
heatPumpDetailed.T_evaOut.m_flow_small
heatPumpDetailed.T_evaOut.tau
heatPumpDetailed.T_evaOut.initType
heatPumpDetailed.T_evaOut.k
heatPumpDetailed.T_evaOut.dynamic
heatPumpDetailed.T_evaOut.mNor_flow
heatPumpDetailed.T_evaOut.tauInv
heatPumpDetailed.T_evaOut.T
heatPumpDetailed.T_evaOut.der(T)
heatPumpDetailed.T_evaOut.T_start
heatPumpDetailed.T_evaOut.transferHeat
heatPumpDetailed.T_evaOut.TAmb
heatPumpDetailed.T_evaOut.tauHeaTra
heatPumpDetailed.T_evaOut.tauHeaTraInv
heatPumpDetailed.T_evaOut.TMed
heatPumpDetailed.T_evaOut.T_a_inflow
heatPumpDetailed.T_evaOut.T_b_inflow
heatPumpDetailed.mFlow_con.allowFlowReversal
heatPumpDetailed.mFlow_con.m_flow_nominal
heatPumpDetailed.mFlow_con.m_flow_small
_GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default_Unique7[1]
heatPumpDetailed.heatFlowRate_con.T_ref
heatPumpDetailed.heatFlowRate_con.alpha
heatPumpDetailed.heatFlowRate_con.Q_flow
heatPumpDetailed.heatFlowRate_con.port.T
heatPumpDetailed.heatFlowRate_con.port.Q_flow
heatPumpDetailed.heatFlowRate_eva.T_ref
heatPumpDetailed.heatFlowRate_eva.alpha
heatPumpDetailed.heatFlowRate_eva.Q_flow
heatPumpDetailed.heatFlowRate_eva.port.T
heatPumpDetailed.heatFlowRate_eva.port.Q_flow
heatPumpDetailed.smoothness
heatPumpDetailed.mFlow_eva.allowFlowReversal
heatPumpDetailed.mFlow_eva.m_flow_nominal
heatPumpDetailed.mFlow_eva.m_flow_small
heatPumpDetailed.cycle.HPctrlType
heatPumpDetailed.cycle.capCalcType
heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 1]
heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 2]
heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 3]
heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 4]
heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 5]
heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 6]
heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 7]
heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 1]
heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 2]
heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 3]
heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 4]
heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 5]
heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 6]
heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 7]
heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 1]
heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 2]
heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 3]
heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 4]
heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 5]
heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 6]
heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 7]
heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 1]
heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 2]
heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 3]
heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 4]
heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 5]
heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 6]
heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 7]
heatPumpDetailed.cycle.dataTable.tableP_ele[1, 1]
heatPumpDetailed.cycle.dataTable.tableP_ele[1, 2]
heatPumpDetailed.cycle.dataTable.tableP_ele[1, 3]
heatPumpDetailed.cycle.dataTable.tableP_ele[1, 4]
heatPumpDetailed.cycle.dataTable.tableP_ele[1, 5]
heatPumpDetailed.cycle.dataTable.tableP_ele[1, 6]
heatPumpDetailed.cycle.dataTable.tableP_ele[1, 7]
heatPumpDetailed.cycle.dataTable.tableP_ele[2, 1]
heatPumpDetailed.cycle.dataTable.tableP_ele[2, 2]
heatPumpDetailed.cycle.dataTable.tableP_ele[2, 3]
heatPumpDetailed.cycle.dataTable.tableP_ele[2, 4]
heatPumpDetailed.cycle.dataTable.tableP_ele[2, 5]
heatPumpDetailed.cycle.dataTable.tableP_ele[2, 6]
heatPumpDetailed.cycle.dataTable.tableP_ele[2, 7]
heatPumpDetailed.cycle.dataTable.tableP_ele[3, 1]
heatPumpDetailed.cycle.dataTable.tableP_ele[3, 2]
heatPumpDetailed.cycle.dataTable.tableP_ele[3, 3]
heatPumpDetailed.cycle.dataTable.tableP_ele[3, 4]
heatPumpDetailed.cycle.dataTable.tableP_ele[3, 5]
heatPumpDetailed.cycle.dataTable.tableP_ele[3, 6]
heatPumpDetailed.cycle.dataTable.tableP_ele[3, 7]
heatPumpDetailed.cycle.dataTable.tableP_ele[4, 1]
heatPumpDetailed.cycle.dataTable.tableP_ele[4, 2]
heatPumpDetailed.cycle.dataTable.tableP_ele[4, 3]
heatPumpDetailed.cycle.dataTable.tableP_ele[4, 4]
heatPumpDetailed.cycle.dataTable.tableP_ele[4, 5]
heatPumpDetailed.cycle.dataTable.tableP_ele[4, 6]
heatPumpDetailed.cycle.dataTable.tableP_ele[4, 7]
heatPumpDetailed.cycle.dataTable.mFlow_conNom
heatPumpDetailed.cycle.dataTable.mFlow_evaNom
heatPumpDetailed.cycle.tableQdot_con[1, 1]
heatPumpDetailed.cycle.tableQdot_con[1, 2]
heatPumpDetailed.cycle.tableQdot_con[1, 3]
heatPumpDetailed.cycle.tableQdot_con[1, 4]
heatPumpDetailed.cycle.tableQdot_con[1, 5]
heatPumpDetailed.cycle.tableQdot_con[1, 6]
heatPumpDetailed.cycle.tableQdot_con[1, 7]
heatPumpDetailed.cycle.tableQdot_con[2, 1]
heatPumpDetailed.cycle.tableQdot_con[2, 2]
heatPumpDetailed.cycle.tableQdot_con[2, 3]
heatPumpDetailed.cycle.tableQdot_con[2, 4]
heatPumpDetailed.cycle.tableQdot_con[2, 5]
heatPumpDetailed.cycle.tableQdot_con[2, 6]
heatPumpDetailed.cycle.tableQdot_con[2, 7]
heatPumpDetailed.cycle.tableQdot_con[3, 1]
heatPumpDetailed.cycle.tableQdot_con[3, 2]
heatPumpDetailed.cycle.tableQdot_con[3, 3]
heatPumpDetailed.cycle.tableQdot_con[3, 4]
heatPumpDetailed.cycle.tableQdot_con[3, 5]
heatPumpDetailed.cycle.tableQdot_con[3, 6]
heatPumpDetailed.cycle.tableQdot_con[3, 7]
heatPumpDetailed.cycle.tableQdot_con[4, 1]
heatPumpDetailed.cycle.tableQdot_con[4, 2]
heatPumpDetailed.cycle.tableQdot_con[4, 3]
heatPumpDetailed.cycle.tableQdot_con[4, 4]
heatPumpDetailed.cycle.tableQdot_con[4, 5]
heatPumpDetailed.cycle.tableQdot_con[4, 6]
heatPumpDetailed.cycle.tableQdot_con[4, 7]
heatPumpDetailed.cycle.tableP_ele[1, 1]
heatPumpDetailed.cycle.tableP_ele[1, 2]
heatPumpDetailed.cycle.tableP_ele[1, 3]
heatPumpDetailed.cycle.tableP_ele[1, 4]
heatPumpDetailed.cycle.tableP_ele[1, 5]
heatPumpDetailed.cycle.tableP_ele[1, 6]
heatPumpDetailed.cycle.tableP_ele[1, 7]
heatPumpDetailed.cycle.tableP_ele[2, 1]
heatPumpDetailed.cycle.tableP_ele[2, 2]
heatPumpDetailed.cycle.tableP_ele[2, 3]
heatPumpDetailed.cycle.tableP_ele[2, 4]
heatPumpDetailed.cycle.tableP_ele[2, 5]
heatPumpDetailed.cycle.tableP_ele[2, 6]
heatPumpDetailed.cycle.tableP_ele[2, 7]
heatPumpDetailed.cycle.tableP_ele[3, 1]
heatPumpDetailed.cycle.tableP_ele[3, 2]
heatPumpDetailed.cycle.tableP_ele[3, 3]
heatPumpDetailed.cycle.tableP_ele[3, 4]
heatPumpDetailed.cycle.tableP_ele[3, 5]
heatPumpDetailed.cycle.tableP_ele[3, 6]
heatPumpDetailed.cycle.tableP_ele[3, 7]
heatPumpDetailed.cycle.tableP_ele[4, 1]
heatPumpDetailed.cycle.tableP_ele[4, 2]
heatPumpDetailed.cycle.tableP_ele[4, 3]
heatPumpDetailed.cycle.tableP_ele[4, 4]
heatPumpDetailed.cycle.tableP_ele[4, 5]
heatPumpDetailed.cycle.tableP_ele[4, 6]
heatPumpDetailed.cycle.tableP_ele[4, 7]
heatPumpDetailed.cycle.T_conMax
heatPumpDetailed.cycle.N_max
heatPumpDetailed.cycle.N_min
heatPumpDetailed.cycle.N_nom
heatPumpDetailed.cycle.PT1_cycle
heatPumpDetailed.cycle.timeConstantCycle
heatPumpDetailed.cycle.eta_ele
heatPumpDetailed.cycle.factorScale
heatPumpDetailed.cycle.P_eleAdd
heatPumpDetailed.cycle.CorrFlowCo
heatPumpDetailed.cycle.mFlow_conNominal
heatPumpDetailed.cycle.CorrFlowEv
heatPumpDetailed.cycle.mFlow_evaNominal
heatPumpDetailed.cycle.P_ele
heatPumpDetailed.cycle.P_eleChar
heatPumpDetailed.cycle.Qdot_eva
heatPumpDetailed.cycle.Qdot_conChar
heatPumpDetailed.cycle.CoP
heatPumpDetailed.cycle.CoP_corr
heatPumpDetailed.cycle.N
heatPumpDetailed.cycle.factorCoP_icing
heatPumpDetailed.cycle.Char[1]
heatPumpDetailed.cycle.Char[2]
heatPumpDetailed.cycle.P_eleOut
heatPumpDetailed.cycle.firstOrder_inInternal
heatPumpDetailed.cycle.Qdot_conTableInternal
heatPumpDetailed.cycle.P_eleTableInternal
heatPumpDetailed.cycle.mFlow_conNom
heatPumpDetailed.cycle.mFlow_evaNom
heatPumpDetailed.cycle.firstOrder.k
heatPumpDetailed.cycle.firstOrder.T
heatPumpDetailed.cycle.firstOrder.initType
heatPumpDetailed.cycle.firstOrder.y_start
heatPumpDetailed.cycle.firstOrder.y
heatPumpDetailed.cycle.firstOrder.der(y)
heatPumpDetailed.cycle.t_Ev_in.y
heatPumpDetailed.cycle.t_Co_out.y
heatPumpDetailed.cycle.dummyZero.y
heatPumpDetailed.cycle.smoothness
heatPumpDetailed.cycle.realP_eleAdd.amplitude
heatPumpDetailed.cycle.realP_eleAdd.rising
heatPumpDetailed.cycle.realP_eleAdd.falling
heatPumpDetailed.cycle.realP_eleAdd.offset
heatPumpDetailed.cycle.realP_eleAdd.u
heatPumpDetailed.cycle.realP_eleAdd.y
heatPumpDetailed.cycle.realP_eleAdd.endValue
heatPumpDetailed.cycle.realP_eleAdd.rate
heatPumpDetailed.cycle.realP_eleAdd.T
heatPumpDetailed.cycle.greaterZero.threshold
heatPumpDetailed.cycle.add.k1
heatPumpDetailed.cycle.add.k2
heatPumpDetailed.cycle.dummyOne.y
heatPumpDetailed.cycle.t_conIn.y
heatPumpDetailed.cycle.productPelCoP2.u1
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.controlError
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.controllerType
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.k
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.Ti
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.Td
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.yMax
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.yMin
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.wp
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.wd
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.Ni
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.Nd
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.initType
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.limitsAtInit
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.xi_start
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.xd_start
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.y_start
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.strict
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.unitTime
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addP.y
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addP.k1
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addP.k2
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.P.k
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.P.y
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.gainPID.k
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.gainPID.u
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.gainPID.y
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addPID.k1
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addPID.k2
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addPID.k3
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.limiter.uMax
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.limiter.uMin
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.limiter.strict
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.limiter.limitsAtInit
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.with_I
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.with_D
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.Dzero.k
heatPumpDetailed.onOff_in
heatPumpDetailed.heatLosses_con
heatPumpDetailed.R_loss
heatPumpDetailed.N_inInternal
heatPumpDetailed.T_ambInternal
heatPumpDetailed.dummyZero.y
heatPumpDetailed.heatConv.Q_flow
heatPumpDetailed.heatConv.dT
heatPumpDetailed.heatConv.port_a.T
heatPumpDetailed.heatConv.port_a.Q_flow
heatPumpDetailed.heatConv.port_b.Q_flow
heatPumpDetailed.heatConv.G
heatPumpDetailed.varTemp.port.T
heatPumpDetailed.varTemp.port.Q_flow
heatPumpDetailed.varTemp.T
heatPumpDetailed.T_conMax
heatPumpDetailed.gainMinusOne.k
heatPumpDetailed.evaporator.energyDynamics
heatPumpDetailed.evaporator.massDynamics
heatPumpDetailed.evaporator.substanceDynamics
heatPumpDetailed.evaporator.traceDynamics
heatPumpDetailed.evaporator.p_start
heatPumpDetailed.evaporator.T_start
heatPumpDetailed.evaporator.X_start[1]
heatPumpDetailed.evaporator.mSenFac
heatPumpDetailed.evaporator.initialize_p
heatPumpDetailed.evaporator.prescribedHeatFlowRate
heatPumpDetailed.evaporator.simplify_mWat_flow
heatPumpDetailed.evaporator.use_C_flow
heatPumpDetailed.evaporator.m_flow_nominal
heatPumpDetailed.evaporator.nPorts
heatPumpDetailed.evaporator.m_flow_small
heatPumpDetailed.evaporator.allowFlowReversal
heatPumpDetailed.evaporator.V
heatPumpDetailed.evaporator.m
heatPumpDetailed.evaporator.rho_start
heatPumpDetailed.evaporator.state_default.p
heatPumpDetailed.evaporator.state_default.T
heatPumpDetailed.evaporator.rho_default
heatPumpDetailed.evaporator.state_start.p
heatPumpDetailed.evaporator.state_start.T
heatPumpDetailed.evaporator.useSteadyStateTwoPort
heatPumpDetailed.hydRes_eva.allowFlowReversal
heatPumpDetailed.hydRes_eva.m_flow_nominal
heatPumpDetailed.hydRes_eva.m_flow_small
heatPumpDetailed.hydRes_eva.show_T
heatPumpDetailed.hydRes_eva.dp
heatPumpDetailed.hydRes_eva._m_flow_start
heatPumpDetailed.hydRes_eva._dp_start
heatPumpDetailed.hydRes_eva.from_dp
heatPumpDetailed.hydRes_eva.dp_nominal
heatPumpDetailed.hydRes_eva.homotopyInitialization
heatPumpDetailed.hydRes_eva.linearized
heatPumpDetailed.hydRes_eva.m_flow_turbulent
heatPumpDetailed.hydRes_eva.sta_default.p
heatPumpDetailed.hydRes_eva.sta_default.T
heatPumpDetailed.hydRes_eva.eta_default
heatPumpDetailed.hydRes_eva.m_flow_nominal_pos
heatPumpDetailed.hydRes_eva.dp_nominal_pos
heatPumpDetailed.hydRes_eva.deltaM
heatPumpDetailed.hydRes_eva.k
heatPumpDetailed.hydRes_eva.computeFlowResistance
heatPumpDetailed.condenser.energyDynamics
heatPumpDetailed.condenser.massDynamics
heatPumpDetailed.condenser.substanceDynamics
heatPumpDetailed.condenser.traceDynamics
heatPumpDetailed.condenser.p_start
heatPumpDetailed.condenser.T_start
heatPumpDetailed.condenser.X_start[1]
heatPumpDetailed.condenser.mSenFac
heatPumpDetailed.condenser.initialize_p
heatPumpDetailed.condenser.prescribedHeatFlowRate
heatPumpDetailed.condenser.simplify_mWat_flow
heatPumpDetailed.condenser.use_C_flow
heatPumpDetailed.condenser.m_flow_nominal
heatPumpDetailed.condenser.nPorts
heatPumpDetailed.condenser.m_flow_small
heatPumpDetailed.condenser.allowFlowReversal
heatPumpDetailed.condenser.V
heatPumpDetailed.condenser.m
heatPumpDetailed.condenser.rho_start
heatPumpDetailed.condenser.state_default.p
heatPumpDetailed.condenser.state_default.T
heatPumpDetailed.condenser.rho_default
heatPumpDetailed.condenser.state_start.p
heatPumpDetailed.condenser.state_start.T
heatPumpDetailed.condenser.useSteadyStateTwoPort
heatPumpDetailed.hydRes_con.allowFlowReversal
heatPumpDetailed.hydRes_con.m_flow_nominal
heatPumpDetailed.hydRes_con.m_flow_small
heatPumpDetailed.hydRes_con.show_T
heatPumpDetailed.hydRes_con.dp
heatPumpDetailed.hydRes_con._m_flow_start
heatPumpDetailed.hydRes_con._dp_start
heatPumpDetailed.hydRes_con.from_dp
heatPumpDetailed.hydRes_con.dp_nominal
heatPumpDetailed.hydRes_con.homotopyInitialization
heatPumpDetailed.hydRes_con.linearized
heatPumpDetailed.hydRes_con.m_flow_turbulent
heatPumpDetailed.hydRes_con.sta_default.p
heatPumpDetailed.hydRes_con.sta_default.T
heatPumpDetailed.hydRes_con.eta_default
heatPumpDetailed.hydRes_con.m_flow_nominal_pos
heatPumpDetailed.hydRes_con.dp_nominal_pos
heatPumpDetailed.hydRes_con.deltaM
heatPumpDetailed.hydRes_con.k
heatPumpDetailed.hydRes_con.computeFlowResistance
coldConsumerFlow.nPorts
coldConsumerFlow.medium.d
coldConsumerFlow.medium.X[1]
coldConsumerFlow.medium.R
coldConsumerFlow.medium.MM
coldConsumerFlow.medium.preferredMediumStates
coldConsumerFlow.medium.standardOrderComponents
coldConsumerFlow.medium.T_degC
coldConsumerFlow.medium.p_bar
coldConsumerFlow.ports[1].h_outflow
coldConsumerFlow.flowDirection
coldConsumerFlow.use_p_in
coldConsumerFlow.use_T_in
coldConsumerFlow.use_X_in
coldConsumerFlow.use_C_in
coldConsumerFlow.p
coldConsumerFlow.T
coldConsumerFlow.X[1]
coldConsumerFlow.X_in_internal[1]
coldConsumerReturn.nPorts
coldConsumerReturn.medium.d
coldConsumerReturn.medium.X[1]
coldConsumerReturn.medium.R
coldConsumerReturn.medium.MM
coldConsumerReturn.medium.preferredMediumStates
coldConsumerReturn.medium.standardOrderComponents
coldConsumerReturn.medium.T_degC
coldConsumerReturn.medium.p_bar
coldConsumerReturn.ports[1].h_outflow
coldConsumerReturn.flowDirection
coldConsumerReturn.use_p_in
coldConsumerReturn.use_T_in
coldConsumerReturn.use_X_in
coldConsumerReturn.use_C_in
coldConsumerReturn.p
coldConsumerReturn.T
coldConsumerReturn.X[1]
coldConsumerReturn.X_in_internal[1]
heatConsumerReturn.nPorts
heatConsumerReturn.medium.d
heatConsumerReturn.medium.X[1]
heatConsumerReturn.medium.R
heatConsumerReturn.medium.MM
heatConsumerReturn.medium.preferredMediumStates
heatConsumerReturn.medium.standardOrderComponents
heatConsumerReturn.medium.T_degC
heatConsumerReturn.medium.p_bar
heatConsumerReturn.ports[1].h_outflow
heatConsumerReturn.flowDirection
heatConsumerReturn.use_p_in
heatConsumerReturn.use_T_in
heatConsumerReturn.use_X_in
heatConsumerReturn.use_C_in
heatConsumerReturn.p
heatConsumerReturn.T
heatConsumerReturn.X[1]
heatConsumerReturn.X_in_internal[1]
heatConsumerFlow.nPorts
heatConsumerFlow.medium.d
heatConsumerFlow.medium.X[1]
heatConsumerFlow.medium.R
heatConsumerFlow.medium.MM
heatConsumerFlow.medium.preferredMediumStates
heatConsumerFlow.medium.standardOrderComponents
heatConsumerFlow.medium.T_degC
heatConsumerFlow.medium.p_bar
heatConsumerFlow.ports[1].h_outflow
heatConsumerFlow.flowDirection
heatConsumerFlow.use_p_in
heatConsumerFlow.use_T_in
heatConsumerFlow.use_X_in
heatConsumerFlow.use_C_in
heatConsumerFlow.p
heatConsumerFlow.T
heatConsumerFlow.X[1]
heatConsumerFlow.X_in_internal[1]
pumpGeothermalSource.energyDynamics
pumpGeothermalSource.massDynamics
pumpGeothermalSource.substanceDynamics
pumpGeothermalSource.traceDynamics
pumpGeothermalSource.p_start
pumpGeothermalSource.T_start
pumpGeothermalSource.X_start[1]
pumpGeothermalSource.mSenFac
pumpGeothermalSource.allowFlowReversal
pumpGeothermalSource.port_a.h_outflow
pumpGeothermalSource.port_b.p
pumpGeothermalSource.port_b.h_outflow
pumpGeothermalSource.m_flow_nominal
pumpGeothermalSource.m_flow_small
pumpGeothermalSource.show_T
pumpGeothermalSource.dp
pumpGeothermalSource._m_flow_start
pumpGeothermalSource._dp_start
pumpGeothermalSource.per.pressure.V_flow[1]
pumpGeothermalSource.per.pressure.V_flow[2]
pumpGeothermalSource.per.pressure.dp[1]
pumpGeothermalSource.per.pressure.dp[2]
pumpGeothermalSource.per.use_powerCharacteristic
pumpGeothermalSource.per.hydraulicEfficiency.V_flow[1]
pumpGeothermalSource.per.hydraulicEfficiency.eta[1]
pumpGeothermalSource.per.motorEfficiency.V_flow[1]
pumpGeothermalSource.per.motorEfficiency.eta[1]
pumpGeothermalSource.per.power.V_flow[1]
pumpGeothermalSource.per.power.P[1]
pumpGeothermalSource.per.motorCooledByFluid
pumpGeothermalSource.per.speed_nominal
pumpGeothermalSource.per.constantSpeed
pumpGeothermalSource.per.speeds[1]
pumpGeothermalSource.per.speed_rpm_nominal
pumpGeothermalSource.per.constantSpeed_rpm
pumpGeothermalSource.per.speeds_rpm[1]
pumpGeothermalSource.per.havePressureCurve
pumpGeothermalSource.inputType
pumpGeothermalSource.constInput
pumpGeothermalSource.stageInputs[1]
pumpGeothermalSource.computePowerUsingSimilarityLaws
pumpGeothermalSource.addPowerToMedium
pumpGeothermalSource.nominalValuesDefineDefaultPressureCurve
pumpGeothermalSource.tau
pumpGeothermalSource.use_inputFilter
pumpGeothermalSource.riseTime
pumpGeothermalSource.init
pumpGeothermalSource.y_start
pumpGeothermalSource.y_actual
pumpGeothermalSource.P
pumpGeothermalSource.heatPort.T
pumpGeothermalSource.heatPort.Q_flow
pumpGeothermalSource.VMachine_flow
pumpGeothermalSource.dpMachine
pumpGeothermalSource.eta
pumpGeothermalSource.etaHyd
pumpGeothermalSource.etaMot
pumpGeothermalSource._VMachine_flow
pumpGeothermalSource.preVar
pumpGeothermalSource.speedIsInput
pumpGeothermalSource.nOri
pumpGeothermalSource.haveVMax
pumpGeothermalSource.V_flow_max
pumpGeothermalSource.rho_default
pumpGeothermalSource.sta_start.p
pumpGeothermalSource.sta_start.T
pumpGeothermalSource.h_outflow_start
pumpGeothermalSource.vol.energyDynamics
pumpGeothermalSource.vol.massDynamics
pumpGeothermalSource.vol.substanceDynamics
pumpGeothermalSource.vol.traceDynamics
pumpGeothermalSource.vol.p_start
pumpGeothermalSource.vol.T_start
pumpGeothermalSource.vol.X_start[1]
pumpGeothermalSource.vol.mSenFac
pumpGeothermalSource.vol.initialize_p
pumpGeothermalSource.vol.prescribedHeatFlowRate
pumpGeothermalSource.vol.simplify_mWat_flow
pumpGeothermalSource.vol.use_C_flow
pumpGeothermalSource.vol.m_flow_nominal
pumpGeothermalSource.vol.nPorts
pumpGeothermalSource.vol.m_flow_small
pumpGeothermalSource.vol.allowFlowReversal
pumpGeothermalSource.vol.V
pumpGeothermalSource.vol.m
pumpGeothermalSource.vol.rho_start
pumpGeothermalSource.vol.state_default.p
pumpGeothermalSource.vol.state_default.T
pumpGeothermalSource.vol.rho_default
pumpGeothermalSource.vol.state_start.p
pumpGeothermalSource.vol.state_start.T
pumpGeothermalSource.vol.useSteadyStateTwoPort
pumpGeothermalSource.vol.preTem.port.Q_flow
pumpGeothermalSource.vol.heaFloSen.Q_flow
pumpGeothermalSource.vol.heaFloSen.port_a.Q_flow
pumpGeothermalSource.vol.heaFloSen.port_b.Q_flow
pumpGeothermalSource.vol.heatPort.Q_flow
pumpGeothermalSource.vol.tau
pumpGeothermalSource.vol.V_nominal
pumpGeothermalSource.filter.analogFilter
pumpGeothermalSource.filter.filterType
pumpGeothermalSource.filter.order
pumpGeothermalSource.filter.f_cut
pumpGeothermalSource.filter.gain
pumpGeothermalSource.filter.A_ripple
pumpGeothermalSource.filter.f_min
pumpGeothermalSource.filter.normalized
pumpGeothermalSource.filter.init
pumpGeothermalSource.filter.nx
pumpGeothermalSource.filter.x_start[1]
pumpGeothermalSource.filter.x_start[2]
pumpGeothermalSource.filter.y_start
pumpGeothermalSource.filter.u_nominal
pumpGeothermalSource.filter.x[1]
pumpGeothermalSource.filter.der(x[1])
pumpGeothermalSource.filter.x[2]
pumpGeothermalSource.filter.der(x[2])
pumpGeothermalSource.filter.ncr
pumpGeothermalSource.filter.nc0
pumpGeothermalSource.filter.na
pumpGeothermalSource.filter.nr
pumpGeothermalSource.filter.cr[1]
pumpGeothermalSource.filter.cr[2]
pumpGeothermalSource.filter.r[1]
pumpGeothermalSource.filter.r[2]
pumpGeothermalSource.filter.uu[1]
pumpGeothermalSource.preSou.allowFlowReversal
pumpGeothermalSource.preSou.dp_start
pumpGeothermalSource.preSou.m_flow_start
pumpGeothermalSource.preSou.m_flow_small
pumpGeothermalSource.preSou.show_T
pumpGeothermalSource.preSou.show_V_flow
pumpGeothermalSource.preSou.V_flow
pumpGeothermalSource.preSou.control_m_flow
pumpGeothermalSource.preSou.m_flow_internal
pumpGeothermalSource.rho_inlet.y
pumpGeothermalSource.senMasFlo.allowFlowReversal
pumpGeothermalSource.senMasFlo.m_flow_nominal
pumpGeothermalSource.senMasFlo.m_flow_small
pumpGeothermalSource.senRelPre.port_a.m_flow
pumpGeothermalSource.senRelPre.port_a.h_outflow
pumpGeothermalSource.senRelPre.port_b.m_flow
pumpGeothermalSource.senRelPre.port_b.h_outflow
pumpGeothermalSource.senRelPre.p_rel
pumpGeothermalSource.eff.per.pressure.V_flow[1]
pumpGeothermalSource.eff.per.pressure.V_flow[2]
pumpGeothermalSource.eff.per.pressure.dp[1]
pumpGeothermalSource.eff.per.pressure.dp[2]
pumpGeothermalSource.eff.per.use_powerCharacteristic
pumpGeothermalSource.eff.per.hydraulicEfficiency.V_flow[1]
pumpGeothermalSource.eff.per.hydraulicEfficiency.eta[1]
pumpGeothermalSource.eff.per.motorEfficiency.V_flow[1]
pumpGeothermalSource.eff.per.motorEfficiency.eta[1]
pumpGeothermalSource.eff.per.power.V_flow[1]
pumpGeothermalSource.eff.per.power.P[1]
pumpGeothermalSource.eff.per.motorCooledByFluid
pumpGeothermalSource.eff.per.speed_nominal
pumpGeothermalSource.eff.per.constantSpeed
pumpGeothermalSource.eff.per.speeds[1]
pumpGeothermalSource.eff.per.speed_rpm_nominal
pumpGeothermalSource.eff.per.constantSpeed_rpm
pumpGeothermalSource.eff.per.speeds_rpm[1]
pumpGeothermalSource.eff.per.havePressureCurve
pumpGeothermalSource.eff.preVar
pumpGeothermalSource.eff.computePowerUsingSimilarityLaws
pumpGeothermalSource.eff.V_flow_nominal
pumpGeothermalSource.eff.rho_default
pumpGeothermalSource.eff.haveVMax
pumpGeothermalSource.eff.V_flow_max
pumpGeothermalSource.eff.nOri
pumpGeothermalSource.eff.homotopyInitialization
pumpGeothermalSource.eff.y_out
pumpGeothermalSource.eff.rho
pumpGeothermalSource.eff.WFlo
pumpGeothermalSource.eff.r_N
pumpGeothermalSource.eff.r_V
pumpGeothermalSource.eff.preSpe
pumpGeothermalSource.eff.prePre
pumpGeothermalSource.eff.motDer[1]
pumpGeothermalSource.eff.hydDer[1]
pumpGeothermalSource.eff.dpMax
pumpGeothermalSource.eff.delta
pumpGeothermalSource.eff.kRes
pumpGeothermalSource.eff.curve
pumpGeothermalSource.eff.pCur1.n
pumpGeothermalSource.eff.pCur1.V_flow[1]
pumpGeothermalSource.eff.pCur1.V_flow[2]
pumpGeothermalSource.eff.pCur1.dp[1]
pumpGeothermalSource.eff.pCur1.dp[2]
pumpGeothermalSource.eff.pCur2.n
pumpGeothermalSource.eff.pCur2.V_flow[1]
pumpGeothermalSource.eff.pCur2.V_flow[2]
pumpGeothermalSource.eff.pCur2.V_flow[3]
pumpGeothermalSource.eff.pCur2.dp[1]
pumpGeothermalSource.eff.pCur2.dp[2]
pumpGeothermalSource.eff.pCur2.dp[3]
pumpGeothermalSource.eff.pCur3.n
pumpGeothermalSource.eff.pCur3.V_flow[1]
pumpGeothermalSource.eff.pCur3.V_flow[2]
pumpGeothermalSource.eff.pCur3.V_flow[3]
pumpGeothermalSource.eff.pCur3.V_flow[4]
pumpGeothermalSource.eff.pCur3.dp[1]
pumpGeothermalSource.eff.pCur3.dp[2]
pumpGeothermalSource.eff.pCur3.dp[3]
pumpGeothermalSource.eff.pCur3.dp[4]
pumpGeothermalSource.eff.preDer1[1]
pumpGeothermalSource.eff.preDer1[2]
pumpGeothermalSource.eff.preDer2[1]
pumpGeothermalSource.eff.preDer2[2]
pumpGeothermalSource.eff.preDer2[3]
pumpGeothermalSource.eff.preDer3[1]
pumpGeothermalSource.eff.preDer3[2]
pumpGeothermalSource.eff.preDer3[3]
pumpGeothermalSource.eff.preDer3[4]
pumpGeothermalSource.eff.powDer[1]
pumpGeothermalSource.eff.haveMinimumDecrease
pumpGeothermalSource.eff.haveDPMax
pumpGeothermalSource.dp_start
pumpGeothermalSource.dp_nominal
pumpGeothermalSource.constantHead
pumpGeothermalSource.heads[1]
pumpGeothermalSource.gain.k
resistanceGeothermalSource.allowFlowReversal
resistanceGeothermalSource.m_flow_nominal
resistanceGeothermalSource.m_flow_small
resistanceGeothermalSource.show_T
resistanceGeothermalSource.dp
resistanceGeothermalSource._m_flow_start
resistanceGeothermalSource._dp_start
resistanceGeothermalSource.from_dp
resistanceGeothermalSource.dp_nominal
resistanceGeothermalSource.homotopyInitialization
resistanceGeothermalSource.linearized
resistanceGeothermalSource.m_flow_turbulent
resistanceGeothermalSource.sta_default.p
resistanceGeothermalSource.sta_default.T
resistanceGeothermalSource.eta_default
resistanceGeothermalSource.m_flow_nominal_pos
resistanceGeothermalSource.dp_nominal_pos
resistanceGeothermalSource.deltaM
resistanceGeothermalSource.k
resistanceGeothermalSource.computeFlowResistance
pumpGeothermalSource1.energyDynamics
pumpGeothermalSource1.massDynamics
pumpGeothermalSource1.substanceDynamics
pumpGeothermalSource1.traceDynamics
pumpGeothermalSource1.p_start
pumpGeothermalSource1.T_start
pumpGeothermalSource1.X_start[1]
pumpGeothermalSource1.mSenFac
pumpGeothermalSource1.allowFlowReversal
pumpGeothermalSource1.port_b.p
pumpGeothermalSource1.port_b.h_outflow
pumpGeothermalSource1.m_flow_nominal
pumpGeothermalSource1.m_flow_small
pumpGeothermalSource1.show_T
pumpGeothermalSource1.dp
pumpGeothermalSource1._m_flow_start
pumpGeothermalSource1._dp_start
pumpGeothermalSource1.per.pressure.V_flow[1]
pumpGeothermalSource1.per.pressure.V_flow[2]
pumpGeothermalSource1.per.pressure.dp[1]
pumpGeothermalSource1.per.pressure.dp[2]
pumpGeothermalSource1.per.use_powerCharacteristic
pumpGeothermalSource1.per.hydraulicEfficiency.V_flow[1]
pumpGeothermalSource1.per.hydraulicEfficiency.eta[1]
pumpGeothermalSource1.per.motorEfficiency.V_flow[1]
pumpGeothermalSource1.per.motorEfficiency.eta[1]
pumpGeothermalSource1.per.power.V_flow[1]
pumpGeothermalSource1.per.power.P[1]
pumpGeothermalSource1.per.motorCooledByFluid
pumpGeothermalSource1.per.speed_nominal
pumpGeothermalSource1.per.constantSpeed
pumpGeothermalSource1.per.speeds[1]
pumpGeothermalSource1.per.speed_rpm_nominal
pumpGeothermalSource1.per.constantSpeed_rpm
pumpGeothermalSource1.per.speeds_rpm[1]
pumpGeothermalSource1.per.havePressureCurve
pumpGeothermalSource1.inputType
pumpGeothermalSource1.constInput
pumpGeothermalSource1.stageInputs[1]
pumpGeothermalSource1.computePowerUsingSimilarityLaws
pumpGeothermalSource1.addPowerToMedium
pumpGeothermalSource1.nominalValuesDefineDefaultPressureCurve
pumpGeothermalSource1.tau
pumpGeothermalSource1.use_inputFilter
pumpGeothermalSource1.riseTime
pumpGeothermalSource1.init
pumpGeothermalSource1.y_start
pumpGeothermalSource1.y_actual
pumpGeothermalSource1.P
pumpGeothermalSource1.heatPort.T
pumpGeothermalSource1.heatPort.Q_flow
pumpGeothermalSource1.VMachine_flow
pumpGeothermalSource1.dpMachine
pumpGeothermalSource1.eta
pumpGeothermalSource1.etaHyd
pumpGeothermalSource1.etaMot
pumpGeothermalSource1._VMachine_flow
pumpGeothermalSource1.preVar
pumpGeothermalSource1.speedIsInput
pumpGeothermalSource1.nOri
pumpGeothermalSource1.haveVMax
pumpGeothermalSource1.V_flow_max
pumpGeothermalSource1.rho_default
pumpGeothermalSource1.sta_start.p
pumpGeothermalSource1.sta_start.T
pumpGeothermalSource1.h_outflow_start
pumpGeothermalSource1.vol.energyDynamics
pumpGeothermalSource1.vol.massDynamics
pumpGeothermalSource1.vol.substanceDynamics
pumpGeothermalSource1.vol.traceDynamics
pumpGeothermalSource1.vol.p_start
pumpGeothermalSource1.vol.T_start
pumpGeothermalSource1.vol.X_start[1]
pumpGeothermalSource1.vol.mSenFac
pumpGeothermalSource1.vol.initialize_p
pumpGeothermalSource1.vol.prescribedHeatFlowRate
pumpGeothermalSource1.vol.simplify_mWat_flow
pumpGeothermalSource1.vol.use_C_flow
pumpGeothermalSource1.vol.m_flow_nominal
pumpGeothermalSource1.vol.nPorts
pumpGeothermalSource1.vol.m_flow_small
pumpGeothermalSource1.vol.allowFlowReversal
pumpGeothermalSource1.vol.V
pumpGeothermalSource1.vol.m
pumpGeothermalSource1.vol.rho_start
pumpGeothermalSource1.vol.state_default.p
pumpGeothermalSource1.vol.state_default.T
pumpGeothermalSource1.vol.rho_default
pumpGeothermalSource1.vol.state_start.p
pumpGeothermalSource1.vol.state_start.T
pumpGeothermalSource1.vol.useSteadyStateTwoPort
pumpGeothermalSource1.vol.preTem.port.Q_flow
pumpGeothermalSource1.vol.heaFloSen.Q_flow
pumpGeothermalSource1.vol.heaFloSen.port_a.Q_flow
pumpGeothermalSource1.vol.heaFloSen.port_b.Q_flow
pumpGeothermalSource1.vol.heatPort.Q_flow
pumpGeothermalSource1.vol.tau
pumpGeothermalSource1.vol.V_nominal
pumpGeothermalSource1.filter.analogFilter
pumpGeothermalSource1.filter.filterType
pumpGeothermalSource1.filter.order
pumpGeothermalSource1.filter.f_cut
pumpGeothermalSource1.filter.gain
pumpGeothermalSource1.filter.A_ripple
pumpGeothermalSource1.filter.f_min
pumpGeothermalSource1.filter.normalized
pumpGeothermalSource1.filter.init
pumpGeothermalSource1.filter.nx
pumpGeothermalSource1.filter.x_start[1]
pumpGeothermalSource1.filter.x_start[2]
pumpGeothermalSource1.filter.y_start
pumpGeothermalSource1.filter.u_nominal
pumpGeothermalSource1.filter.x[1]
pumpGeothermalSource1.filter.der(x[1])
pumpGeothermalSource1.filter.x[2]
pumpGeothermalSource1.filter.der(x[2])
pumpGeothermalSource1.filter.ncr
pumpGeothermalSource1.filter.nc0
pumpGeothermalSource1.filter.na
pumpGeothermalSource1.filter.nr
pumpGeothermalSource1.filter.cr[1]
pumpGeothermalSource1.filter.cr[2]
pumpGeothermalSource1.filter.r[1]
pumpGeothermalSource1.filter.r[2]
pumpGeothermalSource1.filter.uu[1]
pumpGeothermalSource1.preSou.allowFlowReversal
pumpGeothermalSource1.preSou.dp_start
pumpGeothermalSource1.preSou.m_flow_start
pumpGeothermalSource1.preSou.m_flow_small
pumpGeothermalSource1.preSou.show_T
pumpGeothermalSource1.preSou.show_V_flow
pumpGeothermalSource1.preSou.V_flow
pumpGeothermalSource1.preSou.control_m_flow
pumpGeothermalSource1.preSou.m_flow_internal
pumpGeothermalSource1.rho_inlet.y
pumpGeothermalSource1.senMasFlo.allowFlowReversal
pumpGeothermalSource1.senMasFlo.m_flow_nominal
pumpGeothermalSource1.senMasFlo.m_flow_small
pumpGeothermalSource1.senRelPre.port_a.m_flow
pumpGeothermalSource1.senRelPre.port_a.h_outflow
pumpGeothermalSource1.senRelPre.port_b.m_flow
pumpGeothermalSource1.senRelPre.port_b.h_outflow
pumpGeothermalSource1.senRelPre.p_rel
pumpGeothermalSource1.eff.per.pressure.V_flow[1]
pumpGeothermalSource1.eff.per.pressure.V_flow[2]
pumpGeothermalSource1.eff.per.pressure.dp[1]
pumpGeothermalSource1.eff.per.pressure.dp[2]
pumpGeothermalSource1.eff.per.use_powerCharacteristic
pumpGeothermalSource1.eff.per.hydraulicEfficiency.V_flow[1]
pumpGeothermalSource1.eff.per.hydraulicEfficiency.eta[1]
pumpGeothermalSource1.eff.per.motorEfficiency.V_flow[1]
pumpGeothermalSource1.eff.per.motorEfficiency.eta[1]
pumpGeothermalSource1.eff.per.power.V_flow[1]
pumpGeothermalSource1.eff.per.power.P[1]
pumpGeothermalSource1.eff.per.motorCooledByFluid
pumpGeothermalSource1.eff.per.speed_nominal
pumpGeothermalSource1.eff.per.constantSpeed
pumpGeothermalSource1.eff.per.speeds[1]
pumpGeothermalSource1.eff.per.speed_rpm_nominal
pumpGeothermalSource1.eff.per.constantSpeed_rpm
pumpGeothermalSource1.eff.per.speeds_rpm[1]
pumpGeothermalSource1.eff.per.havePressureCurve
pumpGeothermalSource1.eff.preVar
pumpGeothermalSource1.eff.computePowerUsingSimilarityLaws
pumpGeothermalSource1.eff.V_flow_nominal
pumpGeothermalSource1.eff.rho_default
pumpGeothermalSource1.eff.haveVMax
pumpGeothermalSource1.eff.V_flow_max
pumpGeothermalSource1.eff.nOri
pumpGeothermalSource1.eff.homotopyInitialization
pumpGeothermalSource1.eff.y_out
pumpGeothermalSource1.eff.rho
pumpGeothermalSource1.eff.WFlo
pumpGeothermalSource1.eff.r_N
pumpGeothermalSource1.eff.r_V
pumpGeothermalSource1.eff.preSpe
pumpGeothermalSource1.eff.prePre
pumpGeothermalSource1.eff.motDer[1]
pumpGeothermalSource1.eff.hydDer[1]
pumpGeothermalSource1.eff.dpMax
pumpGeothermalSource1.eff.delta
pumpGeothermalSource1.eff.kRes
pumpGeothermalSource1.eff.curve
pumpGeothermalSource1.eff.pCur1.n
pumpGeothermalSource1.eff.pCur1.V_flow[1]
pumpGeothermalSource1.eff.pCur1.V_flow[2]
pumpGeothermalSource1.eff.pCur1.dp[1]
pumpGeothermalSource1.eff.pCur1.dp[2]
pumpGeothermalSource1.eff.pCur2.n
pumpGeothermalSource1.eff.pCur2.V_flow[1]
pumpGeothermalSource1.eff.pCur2.V_flow[2]
pumpGeothermalSource1.eff.pCur2.V_flow[3]
pumpGeothermalSource1.eff.pCur2.dp[1]
pumpGeothermalSource1.eff.pCur2.dp[2]
pumpGeothermalSource1.eff.pCur2.dp[3]
pumpGeothermalSource1.eff.pCur3.n
pumpGeothermalSource1.eff.pCur3.V_flow[1]
pumpGeothermalSource1.eff.pCur3.V_flow[2]
pumpGeothermalSource1.eff.pCur3.V_flow[3]
pumpGeothermalSource1.eff.pCur3.V_flow[4]
pumpGeothermalSource1.eff.pCur3.dp[1]
pumpGeothermalSource1.eff.pCur3.dp[2]
pumpGeothermalSource1.eff.pCur3.dp[3]
pumpGeothermalSource1.eff.pCur3.dp[4]
pumpGeothermalSource1.eff.preDer1[1]
pumpGeothermalSource1.eff.preDer1[2]
pumpGeothermalSource1.eff.preDer2[1]
pumpGeothermalSource1.eff.preDer2[2]
pumpGeothermalSource1.eff.preDer2[3]
pumpGeothermalSource1.eff.preDer3[1]
pumpGeothermalSource1.eff.preDer3[2]
pumpGeothermalSource1.eff.preDer3[3]
pumpGeothermalSource1.eff.preDer3[4]
pumpGeothermalSource1.eff.powDer[1]
pumpGeothermalSource1.eff.haveMinimumDecrease
pumpGeothermalSource1.eff.haveDPMax
pumpGeothermalSource1.dp_start
pumpGeothermalSource1.dp_nominal
pumpGeothermalSource1.constantHead
pumpGeothermalSource1.heads[1]
pumpGeothermalSource1.gain.k
resistanceGeothermalSource1.allowFlowReversal
resistanceGeothermalSource1.m_flow_nominal
resistanceGeothermalSource1.m_flow_small
resistanceGeothermalSource1.show_T
resistanceGeothermalSource1.dp
resistanceGeothermalSource1._m_flow_start
resistanceGeothermalSource1._dp_start
resistanceGeothermalSource1.from_dp
resistanceGeothermalSource1.dp_nominal
resistanceGeothermalSource1.homotopyInitialization
resistanceGeothermalSource1.linearized
resistanceGeothermalSource1.m_flow_turbulent
resistanceGeothermalSource1.sta_default.p
resistanceGeothermalSource1.sta_default.T
resistanceGeothermalSource1.eta_default
resistanceGeothermalSource1.m_flow_nominal_pos
resistanceGeothermalSource1.dp_nominal_pos
resistanceGeothermalSource1.deltaM
resistanceGeothermalSource1.k
resistanceGeothermalSource1.computeFlowResistance
const.k
const1.k
booleanStep.startTime
booleanStep.startValue
TempH.port.m_flow
TempH.port.h_outflow
TempH.T
PID.u_m
PID.controlError
PID.controllerType
PID.k
PID.Ti
PID.Td
PID.yMax
PID.yMin
PID.wp
PID.wd
PID.Ni
PID.Nd
PID.initType
PID.limitsAtInit
PID.xi_start
PID.xd_start
PID.y_start
PID.strict
PID.unitTime
PID.addP.y
PID.addP.k1
PID.addP.k2
PID.P.k
PID.P.y
PID.gainPID.k
PID.gainPID.u
PID.gainPID.y
PID.addPID.k1
PID.addPID.k2
PID.addPID.k3
PID.limiter.uMax
PID.limiter.uMin
PID.limiter.strict
PID.limiter.limitsAtInit
PID.with_I
PID.with_D
PID.Dzero.k
fromKelvin.Celsius
TempC.port.m_flow
TempC.port.h_outflow
TempC.T
const3.k
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.I.k
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.I.initType
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.I.y_start
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.I.u
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.I.y
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.I.der(y)
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addI.k1
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addI.k2
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addI.k3
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addI.u3
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addSat.y
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addSat.k1
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addSat.k2
heatPumpDetailed.cycle.PIDmaxHeatFlowCon.gainTrack.k
heatPumpDetailed.evaporator.dynBal.energyDynamics
heatPumpDetailed.evaporator.dynBal.massDynamics
heatPumpDetailed.evaporator.dynBal.substanceDynamics
heatPumpDetailed.evaporator.dynBal.traceDynamics
heatPumpDetailed.evaporator.dynBal.p_start
heatPumpDetailed.evaporator.dynBal.T_start
heatPumpDetailed.evaporator.dynBal.X_start[1]
heatPumpDetailed.evaporator.dynBal.mSenFac
heatPumpDetailed.evaporator.dynBal.initialize_p
heatPumpDetailed.evaporator.dynBal.simplify_mWat_flow
heatPumpDetailed.evaporator.dynBal.nPorts
heatPumpDetailed.evaporator.dynBal.use_mWat_flow
heatPumpDetailed.evaporator.dynBal.use_C_flow
heatPumpDetailed.evaporator.dynBal.mOut
heatPumpDetailed.evaporator.dynBal.medium.T
heatPumpDetailed.evaporator.dynBal.medium.d
heatPumpDetailed.evaporator.dynBal.medium.X[1]
heatPumpDetailed.evaporator.dynBal.medium.R
heatPumpDetailed.evaporator.dynBal.medium.MM
heatPumpDetailed.evaporator.dynBal.medium.preferredMediumStates
heatPumpDetailed.evaporator.dynBal.medium.standardOrderComponents
heatPumpDetailed.evaporator.dynBal.medium.T_degC
heatPumpDetailed.evaporator.dynBal.medium.p_bar
heatPumpDetailed.evaporator.dynBal.U
heatPumpDetailed.evaporator.dynBal.der(U)
heatPumpDetailed.evaporator.dynBal.m
heatPumpDetailed.evaporator.dynBal.der(m)
heatPumpDetailed.evaporator.dynBal.mb_flow
heatPumpDetailed.evaporator.dynBal.Hb_flow
heatPumpDetailed.evaporator.dynBal.fluidVolume
heatPumpDetailed.evaporator.dynBal.CSen
heatPumpDetailed.evaporator.dynBal.ports_H_flow[1]
heatPumpDetailed.evaporator.dynBal.ports_H_flow[2]
heatPumpDetailed.evaporator.dynBal.cp_default
heatPumpDetailed.evaporator.dynBal.rho_start
heatPumpDetailed.evaporator.dynBal.computeCSen
heatPumpDetailed.evaporator.dynBal.state_default.p
heatPumpDetailed.evaporator.dynBal.state_default.T
heatPumpDetailed.evaporator.dynBal.rho_default
heatPumpDetailed.evaporator.dynBal.hStart
heatPumpDetailed.evaporator.dynBal.mWat_flow_internal
heatPumpDetailed.condenser.dynBal.energyDynamics
heatPumpDetailed.condenser.dynBal.massDynamics
heatPumpDetailed.condenser.dynBal.substanceDynamics
heatPumpDetailed.condenser.dynBal.traceDynamics
heatPumpDetailed.condenser.dynBal.p_start
heatPumpDetailed.condenser.dynBal.T_start
heatPumpDetailed.condenser.dynBal.X_start[1]
heatPumpDetailed.condenser.dynBal.mSenFac
heatPumpDetailed.condenser.dynBal.initialize_p
heatPumpDetailed.condenser.dynBal.simplify_mWat_flow
heatPumpDetailed.condenser.dynBal.nPorts
heatPumpDetailed.condenser.dynBal.use_mWat_flow
heatPumpDetailed.condenser.dynBal.use_C_flow
heatPumpDetailed.condenser.dynBal.mOut
heatPumpDetailed.condenser.dynBal.medium.T
heatPumpDetailed.condenser.dynBal.medium.d
heatPumpDetailed.condenser.dynBal.medium.X[1]
heatPumpDetailed.condenser.dynBal.medium.R
heatPumpDetailed.condenser.dynBal.medium.MM
heatPumpDetailed.condenser.dynBal.medium.preferredMediumStates
heatPumpDetailed.condenser.dynBal.medium.standardOrderComponents
heatPumpDetailed.condenser.dynBal.medium.T_degC
heatPumpDetailed.condenser.dynBal.medium.p_bar
heatPumpDetailed.condenser.dynBal.U
heatPumpDetailed.condenser.dynBal.der(U)
heatPumpDetailed.condenser.dynBal.m
heatPumpDetailed.condenser.dynBal.der(m)
heatPumpDetailed.condenser.dynBal.mb_flow
heatPumpDetailed.condenser.dynBal.Hb_flow
heatPumpDetailed.condenser.dynBal.fluidVolume
heatPumpDetailed.condenser.dynBal.CSen
heatPumpDetailed.condenser.dynBal.ports_H_flow[1]
heatPumpDetailed.condenser.dynBal.ports_H_flow[2]
heatPumpDetailed.condenser.dynBal.cp_default
heatPumpDetailed.condenser.dynBal.rho_start
heatPumpDetailed.condenser.dynBal.computeCSen
heatPumpDetailed.condenser.dynBal.state_default.p
heatPumpDetailed.condenser.dynBal.state_default.T
heatPumpDetailed.condenser.dynBal.rho_default
heatPumpDetailed.condenser.dynBal.hStart
heatPumpDetailed.condenser.dynBal.mWat_flow_internal
pumpGeothermalSource.vol.dynBal.energyDynamics
pumpGeothermalSource.vol.dynBal.massDynamics
pumpGeothermalSource.vol.dynBal.substanceDynamics
pumpGeothermalSource.vol.dynBal.traceDynamics
pumpGeothermalSource.vol.dynBal.p_start
pumpGeothermalSource.vol.dynBal.T_start
pumpGeothermalSource.vol.dynBal.X_start[1]
pumpGeothermalSource.vol.dynBal.mSenFac
pumpGeothermalSource.vol.dynBal.initialize_p
pumpGeothermalSource.vol.dynBal.simplify_mWat_flow
pumpGeothermalSource.vol.dynBal.nPorts
pumpGeothermalSource.vol.dynBal.use_mWat_flow
pumpGeothermalSource.vol.dynBal.use_C_flow
pumpGeothermalSource.vol.dynBal.Q_flow
pumpGeothermalSource.vol.dynBal.mOut
pumpGeothermalSource.vol.dynBal.medium.T
pumpGeothermalSource.vol.dynBal.medium.d
pumpGeothermalSource.vol.dynBal.medium.X[1]
pumpGeothermalSource.vol.dynBal.medium.R
pumpGeothermalSource.vol.dynBal.medium.MM
pumpGeothermalSource.vol.dynBal.medium.preferredMediumStates
pumpGeothermalSource.vol.dynBal.medium.standardOrderComponents
pumpGeothermalSource.vol.dynBal.medium.T_degC
pumpGeothermalSource.vol.dynBal.medium.p_bar
pumpGeothermalSource.vol.dynBal.U
pumpGeothermalSource.vol.dynBal.der(U)
pumpGeothermalSource.vol.dynBal.m
pumpGeothermalSource.vol.dynBal.der(m)
pumpGeothermalSource.vol.dynBal.mb_flow
pumpGeothermalSource.vol.dynBal.fluidVolume
pumpGeothermalSource.vol.dynBal.CSen
pumpGeothermalSource.vol.dynBal.ports_H_flow[1]
pumpGeothermalSource.vol.dynBal.ports_H_flow[2]
pumpGeothermalSource.vol.dynBal.cp_default
pumpGeothermalSource.vol.dynBal.rho_start
pumpGeothermalSource.vol.dynBal.computeCSen
pumpGeothermalSource.vol.dynBal.state_default.p
pumpGeothermalSource.vol.dynBal.state_default.T
pumpGeothermalSource.vol.dynBal.rho_default
pumpGeothermalSource.vol.dynBal.hStart
pumpGeothermalSource.vol.dynBal.mWat_flow_internal
pumpGeothermalSource1.vol.dynBal.energyDynamics
pumpGeothermalSource1.vol.dynBal.massDynamics
pumpGeothermalSource1.vol.dynBal.substanceDynamics
pumpGeothermalSource1.vol.dynBal.traceDynamics
pumpGeothermalSource1.vol.dynBal.p_start
pumpGeothermalSource1.vol.dynBal.T_start
pumpGeothermalSource1.vol.dynBal.X_start[1]
pumpGeothermalSource1.vol.dynBal.mSenFac
pumpGeothermalSource1.vol.dynBal.initialize_p
pumpGeothermalSource1.vol.dynBal.simplify_mWat_flow
pumpGeothermalSource1.vol.dynBal.nPorts
pumpGeothermalSource1.vol.dynBal.use_mWat_flow
pumpGeothermalSource1.vol.dynBal.use_C_flow
pumpGeothermalSource1.vol.dynBal.Q_flow
pumpGeothermalSource1.vol.dynBal.mOut
pumpGeothermalSource1.vol.dynBal.medium.T
pumpGeothermalSource1.vol.dynBal.medium.d
pumpGeothermalSource1.vol.dynBal.medium.X[1]
pumpGeothermalSource1.vol.dynBal.medium.R
pumpGeothermalSource1.vol.dynBal.medium.MM
pumpGeothermalSource1.vol.dynBal.medium.preferredMediumStates
pumpGeothermalSource1.vol.dynBal.medium.standardOrderComponents
pumpGeothermalSource1.vol.dynBal.medium.T_degC
pumpGeothermalSource1.vol.dynBal.medium.p_bar
pumpGeothermalSource1.vol.dynBal.U
pumpGeothermalSource1.vol.dynBal.der(U)
pumpGeothermalSource1.vol.dynBal.m
pumpGeothermalSource1.vol.dynBal.der(m)
pumpGeothermalSource1.vol.dynBal.mb_flow
pumpGeothermalSource1.vol.dynBal.fluidVolume
pumpGeothermalSource1.vol.dynBal.CSen
pumpGeothermalSource1.vol.dynBal.ports_H_flow[1]
pumpGeothermalSource1.vol.dynBal.ports_H_flow[2]
pumpGeothermalSource1.vol.dynBal.cp_default
pumpGeothermalSource1.vol.dynBal.rho_start
pumpGeothermalSource1.vol.dynBal.computeCSen
pumpGeothermalSource1.vol.dynBal.state_default.p
pumpGeothermalSource1.vol.dynBal.state_default.T
pumpGeothermalSource1.vol.dynBal.rho_default
pumpGeothermalSource1.vol.dynBal.hStart
pumpGeothermalSource1.vol.dynBal.mWat_flow_internal
PID.I.k
PID.I.initType
PID.I.y_start
PID.I.u
PID.I.y
PID.I.der(y)
PID.addI.k1
PID.addI.k2
PID.addI.k3
PID.addI.u3
PID.addSat.y
PID.addSat.k1
PID.addSat.k2
PID.gainTrack.k

double initialValue(1292,6)
  0       0                       0                       0                
  6   257   # heatPumpDetailed.HPctrlType
  0       1                       0                       0                
  6   258   # heatPumpDetailed.capCalcType
  0       0                       0                       0                
  6   256   # heatPumpDetailed.dp_conNominal
  0       0                       0                       0                
  6   256   # heatPumpDetailed.dp_evaNominal
  0       1                       0                       0                
  6   256   # heatPumpDetailed.volume_eva
  0       1                       0                       0                
  6   256   # heatPumpDetailed.volume_con
 -1       0                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[1, 1]
 -1      -7                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[1, 2]
 -1       2                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[1, 3]
 -1       7                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[1, 4]
 -1      10                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[1, 5]
 -1      15                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[1, 6]
 -1      20                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[1, 7]
 -1      35                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[2, 1]
 -1    6300                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[2, 2]
 -1    8000                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[2, 3]
 -1    9400                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[2, 4]
 -1   10300                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[2, 5]
 -1   11850                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[2, 6]
 -1   13190                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[2, 7]
 -1      45                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[3, 1]
 -1    6167                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[3, 2]
 -1    7733                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[3, 3]
 -1    9000                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[3, 4]
 -1    9750                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[3, 5]
 -1   11017                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[3, 6]
 -1   11730                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[3, 7]
 -1      50                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[4, 1]
 -1    6100                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[4, 2]
 -1    7600                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[4, 3]
 -1    8800                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[4, 4]
 -1    9475                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[4, 5]
 -1   10600                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[4, 6]
 -1   11000                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableQdot_con[4, 7]
 -1       0                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[1, 1]
 -1      -7                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[1, 2]
 -1       2                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[1, 3]
 -1       7                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[1, 4]
 -1      10                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[1, 5]
 -1      15                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[1, 6]
 -1      20                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[1, 7]
 -1      35                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[2, 1]
 -1    2625                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[2, 2]
 -1    2424                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[2, 3]
 -1    2410                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[2, 4]
 -1    2395                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[2, 5]
 -1    2347                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[2, 6]
 -1    2322                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[2, 7]
 -1      45                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[3, 1]
 -1    3136                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[3, 2]
 -1    3053                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[3, 3]
 -1    3000                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[3, 4]
 -1    2970                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[3, 5]
 -1    2912                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[3, 6]
 -1    2889                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[3, 7]
 -1      50                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[4, 1]
 -1    3486                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[4, 2]
 -1    3535                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[4, 3]
 -1    3451                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[4, 4]
 -1    3414                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[4, 5]
 -1    3365                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[4, 6]
 -1    3385                       0                       0                
  1   280   # heatPumpDetailed.dataTable.tableP_ele[4, 7]
 -1 4.4976076555023925E-001       0                       0                
  1   280   # heatPumpDetailed.dataTable.mFlow_conNom
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.dataTable.mFlow_evaNom
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_startEva
  0 2.9814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_startCon
  0    4200                       0                       0                
  6   256   # heatPumpDetailed.N_max
  0    1500                       0                       0                
  6   256   # heatPumpDetailed.N_min
 -1    3600                       0                       0                
  1   280   # heatPumpDetailed.N_nom
  0       0                       0                       0                
  6   257   # heatPumpDetailed.P_eleOutput
  0       0                       0                       0                
  6   257   # heatPumpDetailed.CoP_output
 -1       0                       0                       0                
  1   281   # heatPumpDetailed.PT1_cycle
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.timeConstantCycle
  0       1                       0                       0                
  6   256   # heatPumpDetailed.eta_ele
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.factorScale
 -1       0                       0                       0                
  1   280   # heatPumpDetailed.P_eleAdd
  0       0                       0                       0                
  6   257   # heatPumpDetailed.CorrFlowCo
  0 5.0000000000000000E-001       0                       0                
  6   256   # heatPumpDetailed.mFlow_conNominal
  0       0                       0                       0                
  6   257   # heatPumpDetailed.CorrFlowEv
  0 5.0000000000000000E-001       0                       0                
  6   256   # heatPumpDetailed.mFlow_evaNominal
  0 -5.0000000000000000E-001 -100000                  100000                
  6   420   # heatPumpDetailed.port_evaOut.m_flow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # heatPumpDetailed.port_evaOut.h_outflow
  0       1                       0                       0                
  6   257   # heatPumpDetailed.T_evaIn.allowFlowReversal
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_evaIn.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_evaIn.m_flow_small
  0       1                       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default[1]
  0       1                       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_evaIn.tau
  0       3                       1                       4                
  6   258   # heatPumpDetailed.T_evaIn.initType
  0       1                       0                       0                
  6  1280   # heatPumpDetailed.T_evaIn.k
  0       1                       0                       0                
  6  1281   # heatPumpDetailed.T_evaIn.dynamic
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.T_evaIn.mNor_flow
  0       1                       0                       0                
  6  1280   # heatPumpDetailed.T_evaIn.tauInv
 -1 2.8814999999999998E+002       0                 1.0000000000000000E+100
  2   272   # heatPumpDetailed.T_evaIn.T
  0       0                       0                       0                
  3   256   # heatPumpDetailed.T_evaIn.der(T)
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_evaIn.T_start
  0       0                       0                       0                
  6   257   # heatPumpDetailed.T_evaIn.transferHeat
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.T_evaIn.TAmb
 -1    1200                       1                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.T_evaIn.tauHeaTra
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.T_evaIn.tauHeaTraInv
  0 2.8814999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.T_evaIn.TMed
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.T_evaIn.T_a_inflow
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.T_evaIn.T_b_inflow
  0       1                       0                       0                
  6   257   # heatPumpDetailed.T_conIn.allowFlowReversal
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_conIn.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_conIn.m_flow_small
  0       1                       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_conIn.tau
  0       3                       1                       4                
  6   258   # heatPumpDetailed.T_conIn.initType
  0       1                       0                       0                
  6  1280   # heatPumpDetailed.T_conIn.k
  0       1                       0                       0                
  6  1281   # heatPumpDetailed.T_conIn.dynamic
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.T_conIn.mNor_flow
  0       1                       0                       0                
  6  1280   # heatPumpDetailed.T_conIn.tauInv
 -1 2.9814999999999998E+002       0                 1.0000000000000000E+100
  2   272   # heatPumpDetailed.T_conIn.T
  0       0                       0                       0                
  3   256   # heatPumpDetailed.T_conIn.der(T)
  0 2.9814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_conIn.T_start
  0       0                       0                       0                
  6   257   # heatPumpDetailed.T_conIn.transferHeat
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.T_conIn.TAmb
 -1    1200                       1                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.T_conIn.tauHeaTra
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.T_conIn.tauHeaTraInv
  0 2.9814999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.T_conIn.TMed
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.T_conIn.T_a_inflow
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.T_conIn.T_b_inflow
  0       0                 -100000                  100000                
  6   420   # heatPumpDetailed.port_conIn.m_flow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # heatPumpDetailed.port_conIn.h_outflow
  0       1                       0                       0                
  6   257   # heatPumpDetailed.T_conOut.allowFlowReversal
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_conOut.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_conOut.m_flow_small
  0       1                       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_conOut.tau
  0       3                       1                       4                
  6   258   # heatPumpDetailed.T_conOut.initType
  0       1                       0                       0                
  6  1280   # heatPumpDetailed.T_conOut.k
  0       1                       0                       0                
  6  1281   # heatPumpDetailed.T_conOut.dynamic
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.T_conOut.mNor_flow
  0       1                       0                       0                
  6  1280   # heatPumpDetailed.T_conOut.tauInv
 -1 2.9814999999999998E+002       0                 1.0000000000000000E+100
  2   272   # heatPumpDetailed.T_conOut.T
  0       0                       0                       0                
  3   256   # heatPumpDetailed.T_conOut.der(T)
  0 2.9814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_conOut.T_start
  0       0                       0                       0                
  6   257   # heatPumpDetailed.T_conOut.transferHeat
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.T_conOut.TAmb
 -1    1200                       1                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.T_conOut.tauHeaTra
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.T_conOut.tauHeaTraInv
  0 2.9814999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.T_conOut.TMed
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.T_conOut.T_a_inflow
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.T_conOut.T_b_inflow
  0       1                       0                       0                
  6   257   # heatPumpDetailed.T_evaOut.allowFlowReversal
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_evaOut.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_evaOut.m_flow_small
  0       1                       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_evaOut.tau
  0       3                       1                       4                
  6   258   # heatPumpDetailed.T_evaOut.initType
  0       1                       0                       0                
  6  1280   # heatPumpDetailed.T_evaOut.k
  0       1                       0                       0                
  6  1281   # heatPumpDetailed.T_evaOut.dynamic
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.T_evaOut.mNor_flow
  0       1                       0                       0                
  6  1280   # heatPumpDetailed.T_evaOut.tauInv
 -1 2.8814999999999998E+002       0                 1.0000000000000000E+100
  2   272   # heatPumpDetailed.T_evaOut.T
  0       0                       0                       0                
  3   256   # heatPumpDetailed.T_evaOut.der(T)
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.T_evaOut.T_start
  0       0                       0                       0                
  6   257   # heatPumpDetailed.T_evaOut.transferHeat
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.T_evaOut.TAmb
 -1    1200                       1                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.T_evaOut.tauHeaTra
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.T_evaOut.tauHeaTraInv
  0 2.8814999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.T_evaOut.TMed
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.T_evaOut.T_a_inflow
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.T_evaOut.T_b_inflow
  0       1                       0                       0                
  6   257   # heatPumpDetailed.mFlow_con.allowFlowReversal
  0       0                       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.mFlow_con.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.mFlow_con.m_flow_small
  0       1                       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default_Unique7[1]
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.heatFlowRate_con.T_ref
 -1       0                       0                       0                
  1   280   # heatPumpDetailed.heatFlowRate_con.alpha
  0       0                       0                       0                
  6   256   # heatPumpDetailed.heatFlowRate_con.Q_flow
  0 2.9814999999999998E+002       1                   10000                
  6   260   # heatPumpDetailed.heatFlowRate_con.port.T
  0       0                       0                       0                
  6   388   # heatPumpDetailed.heatFlowRate_con.port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.heatFlowRate_eva.T_ref
 -1       0                       0                       0                
  1   280   # heatPumpDetailed.heatFlowRate_eva.alpha
  0       0                       0                       0                
  6   256   # heatPumpDetailed.heatFlowRate_eva.Q_flow
  0 2.8814999999999998E+002       1                   10000                
  6   260   # heatPumpDetailed.heatFlowRate_eva.port.T
  0       0                       0                       0                
  6   388   # heatPumpDetailed.heatFlowRate_eva.port.Q_flow
 -1       1                       1                       5                
  1   282   # heatPumpDetailed.smoothness
  0       1                       0                       0                
  6   257   # heatPumpDetailed.mFlow_eva.allowFlowReversal
  0       0                       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.mFlow_eva.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.mFlow_eva.m_flow_small
  0       0                       0                       0                
  6   257   # heatPumpDetailed.cycle.HPctrlType
  0       1                       0                       0                
  6   258   # heatPumpDetailed.cycle.capCalcType
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 1]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 2]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 3]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 4]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 5]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 6]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[1, 7]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 1]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 2]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 3]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 4]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 5]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 6]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[2, 7]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 1]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 2]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 3]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 4]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 5]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 6]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[3, 7]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 1]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 2]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 3]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 4]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 5]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 6]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableQdot_con[4, 7]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[1, 1]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[1, 2]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[1, 3]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[1, 4]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[1, 5]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[1, 6]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[1, 7]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[2, 1]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[2, 2]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[2, 3]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[2, 4]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[2, 5]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[2, 6]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[2, 7]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[3, 1]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[3, 2]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[3, 3]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[3, 4]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[3, 5]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[3, 6]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[3, 7]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[4, 1]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[4, 2]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[4, 3]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[4, 4]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[4, 5]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[4, 6]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.tableP_ele[4, 7]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.mFlow_conNom
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dataTable.mFlow_evaNom
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[1, 1]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[1, 2]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[1, 3]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[1, 4]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[1, 5]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[1, 6]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[1, 7]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[2, 1]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[2, 2]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[2, 3]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[2, 4]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[2, 5]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[2, 6]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[2, 7]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[3, 1]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[3, 2]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[3, 3]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[3, 4]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[3, 5]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[3, 6]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[3, 7]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[4, 1]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[4, 2]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[4, 3]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[4, 4]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[4, 5]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[4, 6]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableQdot_con[4, 7]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[1, 1]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[1, 2]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[1, 3]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[1, 4]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[1, 5]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[1, 6]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[1, 7]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[2, 1]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[2, 2]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[2, 3]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[2, 4]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[2, 5]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[2, 6]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[2, 7]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[3, 1]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[3, 2]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[3, 3]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[3, 4]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[3, 5]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[3, 6]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[3, 7]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[4, 1]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[4, 2]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[4, 3]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[4, 4]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[4, 5]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[4, 6]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.tableP_ele[4, 7]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.cycle.T_conMax
  0    4200                       0                       0                
  6   256   # heatPumpDetailed.cycle.N_max
  0    1500                       0                       0                
  6   256   # heatPumpDetailed.cycle.N_min
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.N_nom
  0       1                       0                       0                
  6   257   # heatPumpDetailed.cycle.PT1_cycle
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.timeConstantCycle
  0       1                       0                       0                
  6   256   # heatPumpDetailed.cycle.eta_ele
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.factorScale
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.P_eleAdd
  0       0                       0                       0                
  6   257   # heatPumpDetailed.cycle.CorrFlowCo
  0 5.0000000000000000E-001       0                       0                
  6   256   # heatPumpDetailed.cycle.mFlow_conNominal
  0       0                       0                       0                
  6   257   # heatPumpDetailed.cycle.CorrFlowEv
  0 5.0000000000000000E-001       0                       0                
  6   256   # heatPumpDetailed.cycle.mFlow_evaNominal
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.P_ele
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.P_eleChar
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.Qdot_eva
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.Qdot_conChar
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.CoP
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.CoP_corr
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.N
  0       1                       0                       0                
  6   256   # heatPumpDetailed.cycle.factorCoP_icing
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.Char[1]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.Char[2]
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.P_eleOut
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.firstOrder_inInternal
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.Qdot_conTableInternal
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.cycle.P_eleTableInternal
  0 5.0000000000000000E-001       0                       0                
  6  1280   # heatPumpDetailed.cycle.mFlow_conNom
  0 5.0000000000000000E-001       0                       0                
  6  1280   # heatPumpDetailed.cycle.mFlow_evaNom
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.cycle.firstOrder.k
  0       1                       0                       0                
  6   256   # heatPumpDetailed.cycle.firstOrder.T
  0       1                       1                       4                
  6   258   # heatPumpDetailed.cycle.firstOrder.initType
 -1       0                       0                       0                
  1   280   # heatPumpDetailed.cycle.firstOrder.y_start
 -1       0                       0                       0                
  2   272   # heatPumpDetailed.cycle.firstOrder.y
  0       0                       0                       0                
  3   256   # heatPumpDetailed.cycle.firstOrder.der(y)
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.t_Ev_in.y
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.t_Co_out.y
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.dummyZero.y
  0       1                       1                       5                
  6   258   # heatPumpDetailed.cycle.smoothness
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.realP_eleAdd.amplitude
 -1       0                       0                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.cycle.realP_eleAdd.rising
  0       0                       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.cycle.realP_eleAdd.falling
 -1       0                       0                       0                
  1   280   # heatPumpDetailed.cycle.realP_eleAdd.offset
  0       0                       0                       0                
  6   321   # heatPumpDetailed.cycle.realP_eleAdd.u
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.realP_eleAdd.y
  0       0                       0                       0                
  6  1344   # heatPumpDetailed.cycle.realP_eleAdd.endValue
  0       0                       0                       0                
  6  1344   # heatPumpDetailed.cycle.realP_eleAdd.rate
  0       0                       0                       0                
  6  1344   # heatPumpDetailed.cycle.realP_eleAdd.T
 -1       0                       0                       0                
  1   280   # heatPumpDetailed.cycle.greaterZero.threshold
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.cycle.add.k1
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.cycle.add.k2
  0       1                       0                       0                
  6   256   # heatPumpDetailed.cycle.dummyOne.y
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.t_conIn.y
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.productPelCoP2.u1
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.controlError
  0       2                       1                       4                
  6   258   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.controllerType
 -1       1                       0                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.k
 -1       1                 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.Ti
 -1 1.0000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.Td
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.yMax
 -1       0                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.yMin
 -1       1                       0                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.wp
 -1       0                       0                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.wd
 -1 9.0000000000000002E-001 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.Ni
 -1      10                 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.Nd
  0       5                       1                       5                
  6   258   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.initType
  0       1                       0                       0                
  6   257   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.limitsAtInit
 -1       0                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.xi_start
 -1       0                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.xd_start
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.y_start
  0       0                       0                       0                
  6   257   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.strict
  0       1                       0                       0                
  6   768   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.unitTime
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addP.y
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addP.k1
 -1      -1                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addP.k2
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.P.k
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.P.y
  0       1                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.gainPID.k
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.gainPID.u
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.gainPID.y
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addPID.k1
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addPID.k2
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addPID.k3
  0       1                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.limiter.uMax
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.limiter.uMin
  0       0                       0                       0                
  6   257   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.limiter.strict
  0       1                       0                       0                
  6   257   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.limiter.limitsAtInit
  0       1                       0                       0                
  6   769   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.with_I
  0       0                       0                       0                
  6   769   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.with_D
 -1       0                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.Dzero.k
  0       0                       0                       0                
  6   321   # heatPumpDetailed.onOff_in
  0       0                       0                       0                
  6   257   # heatPumpDetailed.heatLosses_con
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.R_loss
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.N_inInternal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.T_ambInternal
  0       0                       0                       0                
  6   256   # heatPumpDetailed.dummyZero.y
  0       0                       0                       0                
  6   256   # heatPumpDetailed.heatConv.Q_flow
  0 -2.8814999999999998E+002 -1.0000000000000000E+100       0                
  6   256   # heatPumpDetailed.heatConv.dT
  0       0                       0                 1.0000000000000000E+100
  6   260   # heatPumpDetailed.heatConv.port_a.T
  0       0                       0                       0                
  6   388   # heatPumpDetailed.heatConv.port_a.Q_flow
  0       0                       0                       0                
  6   388   # heatPumpDetailed.heatConv.port_b.Q_flow
  0       0                       0                       0                
  6   256   # heatPumpDetailed.heatConv.G
  0       0                       0                 1.0000000000000000E+100
  6   260   # heatPumpDetailed.varTemp.port.T
  0       0                       0                       0                
  6   388   # heatPumpDetailed.varTemp.port.Q_flow
  0       0                       0                       0                
  6   256   # heatPumpDetailed.varTemp.T
 -1 3.3814999999999998E+002       0                 1.0000000000000000E+100
  1   280   # heatPumpDetailed.T_conMax
 -1      -1                       0                       0                
  1   280   # heatPumpDetailed.gainMinusOne.k
  0       1                       1                       4                
  6   258   # heatPumpDetailed.evaporator.energyDynamics
  0       1                       1                       4                
  6   258   # heatPumpDetailed.evaporator.massDynamics
  0       1                       1                       4                
  6   258   # heatPumpDetailed.evaporator.substanceDynamics
  0       1                       1                       4                
  6   258   # heatPumpDetailed.evaporator.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # heatPumpDetailed.evaporator.p_start
  0 2.8814999999999998E+002       1                   10000                
  6   256   # heatPumpDetailed.evaporator.T_start
 -1       1                       0                       1                
  1   280   # heatPumpDetailed.evaporator.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.evaporator.mSenFac
  0       0                       0                       0                
  6   769   # heatPumpDetailed.evaporator.initialize_p
  0       0                       0                       0                
  6   257   # heatPumpDetailed.evaporator.prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # heatPumpDetailed.evaporator.simplify_mWat_flow
  0       0                       0                       0                
  6   257   # heatPumpDetailed.evaporator.use_C_flow
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.evaporator.m_flow_nominal
  0       2                       0                       0                
  6   258   # heatPumpDetailed.evaporator.nPorts
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.evaporator.m_flow_small
  0       1                       0                       0                
  6   257   # heatPumpDetailed.evaporator.allowFlowReversal
  0       1                       0                       0                
  6   256   # heatPumpDetailed.evaporator.V
  0 9.9558600000000001E+002       0                       0                
  6   256   # heatPumpDetailed.evaporator.m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.evaporator.rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # heatPumpDetailed.evaporator.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.evaporator.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.evaporator.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # heatPumpDetailed.evaporator.state_start.p
  0 2.8814999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.evaporator.state_start.T
  0       0                       0                       0                
  6  1281   # heatPumpDetailed.evaporator.useSteadyStateTwoPort
  0       1                       0                       0                
  6   257   # heatPumpDetailed.hydRes_eva.allowFlowReversal
  0 5.0000000000000000E-001       0                       0                
  6   256   # heatPumpDetailed.hydRes_eva.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.hydRes_eva.m_flow_small
  0       0                       0                       0                
  6   257   # heatPumpDetailed.hydRes_eva.show_T
  0       0                       0                       0                
  6   256   # heatPumpDetailed.hydRes_eva.dp
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.hydRes_eva._m_flow_start
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.hydRes_eva._dp_start
  0       0                       0                       0                
  6   257   # heatPumpDetailed.hydRes_eva.from_dp
  0       0                       0                       0                
  6   256   # heatPumpDetailed.hydRes_eva.dp_nominal
  0       1                       0                       0                
  6   257   # heatPumpDetailed.hydRes_eva.homotopyInitialization
  0       0                       0                       0                
  6   257   # heatPumpDetailed.hydRes_eva.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.hydRes_eva.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # heatPumpDetailed.hydRes_eva.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # heatPumpDetailed.hydRes_eva.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.hydRes_eva.eta_default
  0 5.0000000000000000E-001       0                       0                
  6  1280   # heatPumpDetailed.hydRes_eva.m_flow_nominal_pos
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.hydRes_eva.dp_nominal_pos
  0 2.9999999999999999E-001 1.0000000000000000E-002 1.0000000000000000E+100
  6   256   # heatPumpDetailed.hydRes_eva.deltaM
  0       0                       0                       0                
  6   256   # heatPumpDetailed.hydRes_eva.k
  0       0                       0                       0                
  6  1281   # heatPumpDetailed.hydRes_eva.computeFlowResistance
  0       1                       1                       4                
  6   258   # heatPumpDetailed.condenser.energyDynamics
  0       1                       1                       4                
  6   258   # heatPumpDetailed.condenser.massDynamics
  0       1                       1                       4                
  6   258   # heatPumpDetailed.condenser.substanceDynamics
  0       1                       1                       4                
  6   258   # heatPumpDetailed.condenser.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # heatPumpDetailed.condenser.p_start
  0 2.9814999999999998E+002       1                   10000                
  6   256   # heatPumpDetailed.condenser.T_start
 -1       1                       0                       1                
  1   280   # heatPumpDetailed.condenser.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.condenser.mSenFac
  0       0                       0                       0                
  6   769   # heatPumpDetailed.condenser.initialize_p
  0       0                       0                       0                
  6   257   # heatPumpDetailed.condenser.prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # heatPumpDetailed.condenser.simplify_mWat_flow
  0       0                       0                       0                
  6   257   # heatPumpDetailed.condenser.use_C_flow
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.condenser.m_flow_nominal
  0       2                       0                       0                
  6   258   # heatPumpDetailed.condenser.nPorts
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.condenser.m_flow_small
  0       1                       0                       0                
  6   257   # heatPumpDetailed.condenser.allowFlowReversal
  0       1                       0                       0                
  6   256   # heatPumpDetailed.condenser.V
  0 9.9558600000000001E+002       0                       0                
  6   256   # heatPumpDetailed.condenser.m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.condenser.rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # heatPumpDetailed.condenser.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.condenser.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.condenser.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # heatPumpDetailed.condenser.state_start.p
  0 2.9814999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.condenser.state_start.T
  0       0                       0                       0                
  6  1281   # heatPumpDetailed.condenser.useSteadyStateTwoPort
  0       1                       0                       0                
  6   257   # heatPumpDetailed.hydRes_con.allowFlowReversal
  0 5.0000000000000000E-001       0                       0                
  6   256   # heatPumpDetailed.hydRes_con.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.hydRes_con.m_flow_small
  0       0                       0                       0                
  6   257   # heatPumpDetailed.hydRes_con.show_T
  0       0                       0                       0                
  6   256   # heatPumpDetailed.hydRes_con.dp
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.hydRes_con._m_flow_start
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.hydRes_con._dp_start
  0       0                       0                       0                
  6   257   # heatPumpDetailed.hydRes_con.from_dp
  0       0                       0                       0                
  6   256   # heatPumpDetailed.hydRes_con.dp_nominal
  0       1                       0                       0                
  6   257   # heatPumpDetailed.hydRes_con.homotopyInitialization
  0       0                       0                       0                
  6   257   # heatPumpDetailed.hydRes_con.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # heatPumpDetailed.hydRes_con.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # heatPumpDetailed.hydRes_con.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # heatPumpDetailed.hydRes_con.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.hydRes_con.eta_default
  0 5.0000000000000000E-001       0                       0                
  6  1280   # heatPumpDetailed.hydRes_con.m_flow_nominal_pos
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.hydRes_con.dp_nominal_pos
  0 2.9999999999999999E-001 1.0000000000000000E-002 1.0000000000000000E+100
  6   256   # heatPumpDetailed.hydRes_con.deltaM
  0       0                       0                       0                
  6   256   # heatPumpDetailed.hydRes_con.k
  0       0                       0                       0                
  6  1281   # heatPumpDetailed.hydRes_con.computeFlowResistance
  0       1                       0                       0                
  6   258   # coldConsumerFlow.nPorts
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6   256   # coldConsumerFlow.medium.d
  0       1                       0                       1                
  6   256   # coldConsumerFlow.medium.X[1]
  0       0                       0                       0                
  6   256   # coldConsumerFlow.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6   256   # coldConsumerFlow.medium.MM
  0       0                       0                       0                
  6   257   # coldConsumerFlow.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # coldConsumerFlow.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # coldConsumerFlow.medium.T_degC
  0       0                       0                       0                
  6   256   # coldConsumerFlow.medium.p_bar
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # coldConsumerFlow.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # coldConsumerFlow.flowDirection
  0       0                       0                       0                
  6   769   # coldConsumerFlow.use_p_in
  0       0                       0                       0                
  6   769   # coldConsumerFlow.use_T_in
  0       0                       0                       0                
  6   769   # coldConsumerFlow.use_X_in
  0       0                       0                       0                
  6   769   # coldConsumerFlow.use_C_in
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # coldConsumerFlow.p
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # coldConsumerFlow.T
 -1       1                       0                       1                
  1   280   # coldConsumerFlow.X[1]
  0       0                       0                       0                
  6  1280   # coldConsumerFlow.X_in_internal[1]
  0       1                       0                       0                
  6   258   # coldConsumerReturn.nPorts
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6   256   # coldConsumerReturn.medium.d
  0       1                       0                       1                
  6   256   # coldConsumerReturn.medium.X[1]
  0       0                       0                       0                
  6   256   # coldConsumerReturn.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6   256   # coldConsumerReturn.medium.MM
  0       0                       0                       0                
  6   257   # coldConsumerReturn.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # coldConsumerReturn.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # coldConsumerReturn.medium.T_degC
  0       0                       0                       0                
  6   256   # coldConsumerReturn.medium.p_bar
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # coldConsumerReturn.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # coldConsumerReturn.flowDirection
  0       0                       0                       0                
  6   769   # coldConsumerReturn.use_p_in
  0       0                       0                       0                
  6   769   # coldConsumerReturn.use_T_in
  0       0                       0                       0                
  6   769   # coldConsumerReturn.use_X_in
  0       0                       0                       0                
  6   769   # coldConsumerReturn.use_C_in
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # coldConsumerReturn.p
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # coldConsumerReturn.T
 -1       1                       0                       1                
  1   280   # coldConsumerReturn.X[1]
  0       0                       0                       0                
  6  1280   # coldConsumerReturn.X_in_internal[1]
  0       1                       0                       0                
  6   258   # heatConsumerReturn.nPorts
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6   256   # heatConsumerReturn.medium.d
  0       1                       0                       1                
  6   256   # heatConsumerReturn.medium.X[1]
  0       0                       0                       0                
  6   256   # heatConsumerReturn.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6   256   # heatConsumerReturn.medium.MM
  0       0                       0                       0                
  6   257   # heatConsumerReturn.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # heatConsumerReturn.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # heatConsumerReturn.medium.T_degC
  0       0                       0                       0                
  6   256   # heatConsumerReturn.medium.p_bar
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # heatConsumerReturn.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # heatConsumerReturn.flowDirection
  0       0                       0                       0                
  6   769   # heatConsumerReturn.use_p_in
  0       0                       0                       0                
  6   769   # heatConsumerReturn.use_T_in
  0       0                       0                       0                
  6   769   # heatConsumerReturn.use_X_in
  0       0                       0                       0                
  6   769   # heatConsumerReturn.use_C_in
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # heatConsumerReturn.p
 -1 3.0414999999999998E+002       1                   10000                
  1   280   # heatConsumerReturn.T
 -1       1                       0                       1                
  1   280   # heatConsumerReturn.X[1]
  0       0                       0                       0                
  6  1280   # heatConsumerReturn.X_in_internal[1]
  0       1                       0                       0                
  6   258   # heatConsumerFlow.nPorts
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6   256   # heatConsumerFlow.medium.d
  0       1                       0                       1                
  6   256   # heatConsumerFlow.medium.X[1]
  0       0                       0                       0                
  6   256   # heatConsumerFlow.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6   256   # heatConsumerFlow.medium.MM
  0       0                       0                       0                
  6   257   # heatConsumerFlow.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # heatConsumerFlow.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # heatConsumerFlow.medium.T_degC
  0       0                       0                       0                
  6   256   # heatConsumerFlow.medium.p_bar
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # heatConsumerFlow.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # heatConsumerFlow.flowDirection
  0       0                       0                       0                
  6   769   # heatConsumerFlow.use_p_in
  0       0                       0                       0                
  6   769   # heatConsumerFlow.use_T_in
  0       0                       0                       0                
  6   769   # heatConsumerFlow.use_X_in
  0       0                       0                       0                
  6   769   # heatConsumerFlow.use_C_in
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # heatConsumerFlow.p
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # heatConsumerFlow.T
 -1       1                       0                       1                
  1   280   # heatConsumerFlow.X[1]
  0       0                       0                       0                
  6  1280   # heatConsumerFlow.X_in_internal[1]
  0       1                       1                       4                
  6   258   # pumpGeothermalSource.energyDynamics
  0       1                       1                       4                
  6   258   # pumpGeothermalSource.massDynamics
  0       1                       1                       4                
  6   258   # pumpGeothermalSource.substanceDynamics
  0       1                       1                       4                
  6   258   # pumpGeothermalSource.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # pumpGeothermalSource.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # pumpGeothermalSource.T_start
 -1       1                       0                       1                
  1   280   # pumpGeothermalSource.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource.mSenFac
  0       1                       0                       0                
  6   257   # pumpGeothermalSource.allowFlowReversal
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pumpGeothermalSource.port_a.h_outflow
  0       0                       0                 1.0000000000000000E+008
  6   260   # pumpGeothermalSource.port_b.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pumpGeothermalSource.port_b.h_outflow
  0       3                       0                       0                
  6   256   # pumpGeothermalSource.m_flow_nominal
  0 3.0000000000000003E-004       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource.m_flow_small
  0       0                       0                       0                
  6   257   # pumpGeothermalSource.show_T
  0       0                       0                       0                
  6   256   # pumpGeothermalSource.dp
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource._m_flow_start
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource._dp_start
  0       0                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource.per.pressure.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource.per.pressure.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource.per.pressure.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource.per.pressure.dp[2]
 -1       0                       0                       0                
  1   281   # pumpGeothermalSource.per.use_powerCharacteristic
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pumpGeothermalSource.per.hydraulicEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # pumpGeothermalSource.per.hydraulicEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pumpGeothermalSource.per.motorEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # pumpGeothermalSource.per.motorEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pumpGeothermalSource.per.power.V_flow[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pumpGeothermalSource.per.power.P[1]
 -1       1                       0                       0                
  1   281   # pumpGeothermalSource.per.motorCooledByFluid
 -1       1                       0                 1.0000000000000000E+100
  1   280   # pumpGeothermalSource.per.speed_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource.per.constantSpeed
  0       0                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource.per.speeds[1]
 -1    1500                       0                       0                
  1   280   # pumpGeothermalSource.per.speed_rpm_nominal
  0       0                       0                       0                
  6   256   # pumpGeothermalSource.per.constantSpeed_rpm
  0       0                       0                       0                
  6   256   # pumpGeothermalSource.per.speeds_rpm[1]
  0       0                       0                       0                
  6   257   # pumpGeothermalSource.per.havePressureCurve
  0       3                       1                       3                
  6   258   # pumpGeothermalSource.inputType
  0   10000                       0                       0                
  6   256   # pumpGeothermalSource.constInput
  0   10000                       0                       0                
  6   256   # pumpGeothermalSource.stageInputs[1]
  0       0                       0                       0                
  6   257   # pumpGeothermalSource.computePowerUsingSimilarityLaws
  0       0                       0                       0                
  6   257   # pumpGeothermalSource.addPowerToMedium
 -1       0                       0                       0                
  1   281   # pumpGeothermalSource.nominalValuesDefineDefaultPressureCurve
  0       1                       0                       0                
  6   256   # pumpGeothermalSource.tau
  0       1                       0                       0                
  6   257   # pumpGeothermalSource.use_inputFilter
 -1      30                       0                       0                
  1   280   # pumpGeothermalSource.riseTime
  0       4                       1                       4                
  6   258   # pumpGeothermalSource.init
 -1       0                       0                       1                
  1   280   # pumpGeothermalSource.y_start
  0       1                       0                       0                
  6   256   # pumpGeothermalSource.y_actual
  0       0                       0                       0                
  6   256   # pumpGeothermalSource.P
  0     300                       1                   10000                
  6   260   # pumpGeothermalSource.heatPort.T
  0       0                       0                       0                
  6   388   # pumpGeothermalSource.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # pumpGeothermalSource.VMachine_flow
  0       0                       0                       0                
  6   256   # pumpGeothermalSource.dpMachine
  0       0                       0                       0                
  6   256   # pumpGeothermalSource.eta
  0       0                       0                       0                
  6   256   # pumpGeothermalSource.etaHyd
  0       0                       0                       0                
  6   256   # pumpGeothermalSource.etaMot
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource._VMachine_flow
  0       3                       1                       3                
  6  1282   # pumpGeothermalSource.preVar
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.speedIsInput
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource.nOri
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.haveVMax
  0 3.0133007093309867E-003       0                       0                
  6  1280   # pumpGeothermalSource.V_flow_max
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource.sta_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pumpGeothermalSource.sta_start.T
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.h_outflow_start
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource.vol.energyDynamics
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource.vol.massDynamics
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource.vol.substanceDynamics
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource.vol.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource.vol.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pumpGeothermalSource.vol.T_start
  0       0                       0                       1                
  6  1280   # pumpGeothermalSource.vol.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.vol.mSenFac
  0       0                       0                       0                
  6   769   # pumpGeothermalSource.vol.initialize_p
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.vol.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.vol.simplify_mWat_flow
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.vol.use_C_flow
  0       3                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.vol.m_flow_nominal
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource.vol.nPorts
  0 3.0000000000000003E-004       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.vol.m_flow_small
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.vol.allowFlowReversal
  0 3.0133007093309867E-003       0                       0                
  6  1280   # pumpGeothermalSource.vol.V
  0       3                       0                       0                
  6  1280   # pumpGeothermalSource.vol.m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.vol.rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource.vol.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pumpGeothermalSource.vol.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.vol.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource.vol.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pumpGeothermalSource.vol.state_start.T
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.vol.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1412   # pumpGeothermalSource.vol.preTem.port.Q_flow
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.vol.heaFloSen.Q_flow
  0       0                       0                       0                
  6  1412   # pumpGeothermalSource.vol.heaFloSen.port_a.Q_flow
  0       0                       0                       0                
  6  1412   # pumpGeothermalSource.vol.heaFloSen.port_b.Q_flow
  0       0                       0                       0                
  6  1412   # pumpGeothermalSource.vol.heatPort.Q_flow
  0       1                       0                       0                
  6  1280   # pumpGeothermalSource.vol.tau
  0 3.0133007093309867E-003       0                       0                
  6  1280   # pumpGeothermalSource.vol.V_nominal
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource.filter.analogFilter
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # pumpGeothermalSource.filter.order
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.filter.f_cut
 -1       1                       0                       0                
  1  1304   # pumpGeothermalSource.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # pumpGeothermalSource.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # pumpGeothermalSource.filter.f_min
 -1       1                       0                       0                
  1  1305   # pumpGeothermalSource.filter.normalized
  0       4                       1                       4                
  6  1282   # pumpGeothermalSource.filter.init
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource.filter.nx
 -1       0                       0                       0                
  1  1304   # pumpGeothermalSource.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # pumpGeothermalSource.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.filter.y_start
  0   10000                       0                       0                
  6  1280   # pumpGeothermalSource.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # pumpGeothermalSource.filter.x[1]
  0       0                       0                       0                
  3  1280   # pumpGeothermalSource.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # pumpGeothermalSource.filter.x[2]
  0       0                       0                       0                
  3  1280   # pumpGeothermalSource.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource.filter.ncr
  0       0                       0                       0                
  6  1282   # pumpGeothermalSource.filter.nc0
  0       0                       0                       0                
  6  1282   # pumpGeothermalSource.filter.na
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource.filter.nr
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.filter.cr[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.filter.cr[2]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.filter.r[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.filter.r[2]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.filter.uu[1]
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.preSou.allowFlowReversal
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.preSou.dp_start
 -1       0                 -100000                  100000                
  1  1304   # pumpGeothermalSource.preSou.m_flow_start
  0 3.0000000000000003E-004 -100000                  100000                
  6  1280   # pumpGeothermalSource.preSou.m_flow_small
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.preSou.show_T
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.preSou.show_V_flow
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.preSou.V_flow
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.preSou.control_m_flow
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.preSou.m_flow_internal
  0 9.9558600000000001E+002       0                       0                
  6  1280   # pumpGeothermalSource.rho_inlet.y
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.senMasFlo.allowFlowReversal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.senMasFlo.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.senMasFlo.m_flow_small
  0       0                       0                  100000                
  6  1412   # pumpGeothermalSource.senRelPre.port_a.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # pumpGeothermalSource.senRelPre.port_a.h_outflow
  0       0                       0                  100000                
  6  1412   # pumpGeothermalSource.senRelPre.port_b.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # pumpGeothermalSource.senRelPre.port_b.h_outflow
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.senRelPre.p_rel
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.per.pressure.V_flow[1]
  0 6.0266014186619735E-003       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.per.pressure.V_flow[2]
  0   20000                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.per.pressure.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.per.pressure.dp[2]
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.eff.per.use_powerCharacteristic
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.per.hydraulicEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # pumpGeothermalSource.eff.per.hydraulicEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.per.motorEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # pumpGeothermalSource.eff.per.motorEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.per.power.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.per.power.P[1]
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.eff.per.motorCooledByFluid
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.per.speed_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.per.constantSpeed
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.per.speeds[1]
 -1    1500                       0                       0                
  1  1304   # pumpGeothermalSource.eff.per.speed_rpm_nominal
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.per.constantSpeed_rpm
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.per.speeds_rpm[1]
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.eff.per.havePressureCurve
  0       3                       1                       3                
  6  1282   # pumpGeothermalSource.eff.preVar
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.eff.computePowerUsingSimilarityLaws
  0 6.0266014186619735E-003       0                       0                
  6  1280   # pumpGeothermalSource.eff.V_flow_nominal
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.rho_default
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.eff.haveVMax
  0 3.0133007093309867E-003       0                       0                
  6  1280   # pumpGeothermalSource.eff.V_flow_max
  0       2                       1                 1.0000000000000000E+100
  6  1282   # pumpGeothermalSource.eff.nOri
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.eff.homotopyInitialization
  0       1                       0                       0                
  6  1280   # pumpGeothermalSource.eff.y_out
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.rho
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.WFlo
  0       1                       0                       0                
  6  1280   # pumpGeothermalSource.eff.r_N
  0 3.0133007093309867E-003       0                       0                
  6  1280   # pumpGeothermalSource.eff.r_V
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.eff.preSpe
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.eff.prePre
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.motDer[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.hydDer[1]
  0   20000                       0                       0                
  6  1280   # pumpGeothermalSource.eff.dpMax
  0 5.0000000000000003E-002       0                       0                
  6  1280   # pumpGeothermalSource.eff.delta
  0 1.6593100000000004E+003       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.kRes
  0       1                       0                       0                
  6  1282   # pumpGeothermalSource.eff.curve
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource.eff.pCur1.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur1.V_flow[1]
  0 6.0266014186619735E-003       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur1.V_flow[2]
  0   20000                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur1.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur1.dp[2]
  0       3                       0                       0                
  6  1282   # pumpGeothermalSource.eff.pCur2.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur2.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur2.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur2.V_flow[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur2.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur2.dp[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur2.dp[3]
  0       4                       0                       0                
  6  1282   # pumpGeothermalSource.eff.pCur3.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur3.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur3.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur3.V_flow[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur3.V_flow[4]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur3.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur3.dp[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur3.dp[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.eff.pCur3.dp[4]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.preDer1[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.preDer1[2]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.preDer2[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.preDer2[2]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.preDer2[3]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.preDer3[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.preDer3[2]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.preDer3[3]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.preDer3[4]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.eff.powDer[1]
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.eff.haveMinimumDecrease
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.eff.haveDPMax
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pumpGeothermalSource.dp_start
  0   10000                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource.dp_nominal
  0   10000                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource.constantHead
  0   10000                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource.heads[1]
  0      -1                       0                       0                
  6  1280   # pumpGeothermalSource.gain.k
  0       1                       0                       0                
  6   257   # resistanceGeothermalSource.allowFlowReversal
  0 5.0000000000000000E-001       0                       0                
  6   256   # resistanceGeothermalSource.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6   256   # resistanceGeothermalSource.m_flow_small
  0       0                       0                       0                
  6   257   # resistanceGeothermalSource.show_T
  0       0                       0                       0                
  6   256   # resistanceGeothermalSource.dp
  0       0                       0                       0                
  6  1280   # resistanceGeothermalSource._m_flow_start
  0       0                       0                       0                
  6  1280   # resistanceGeothermalSource._dp_start
  0       0                       0                       0                
  6   257   # resistanceGeothermalSource.from_dp
  0   15000                       0                       0                
  6   256   # resistanceGeothermalSource.dp_nominal
  0       1                       0                       0                
  6   257   # resistanceGeothermalSource.homotopyInitialization
  0       0                       0                       0                
  6   257   # resistanceGeothermalSource.linearized
  0 1.4999999999999999E-001       0                 1.0000000000000000E+100
  6   256   # resistanceGeothermalSource.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # resistanceGeothermalSource.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # resistanceGeothermalSource.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # resistanceGeothermalSource.eta_default
  0 5.0000000000000000E-001       0                       0                
  6  1280   # resistanceGeothermalSource.m_flow_nominal_pos
  0   15000                       0                       0                
  6  1280   # resistanceGeothermalSource.dp_nominal_pos
  0 2.9999999999999999E-001 1.0000000000000000E-002 1.0000000000000000E+100
  6   256   # resistanceGeothermalSource.deltaM
  0 4.0824829046386298E-003       0                       0                
  6   256   # resistanceGeothermalSource.k
  0       1                       0                       0                
  6  1281   # resistanceGeothermalSource.computeFlowResistance
  0       1                       1                       4                
  6   258   # pumpGeothermalSource1.energyDynamics
  0       1                       1                       4                
  6   258   # pumpGeothermalSource1.massDynamics
  0       1                       1                       4                
  6   258   # pumpGeothermalSource1.substanceDynamics
  0       1                       1                       4                
  6   258   # pumpGeothermalSource1.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # pumpGeothermalSource1.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # pumpGeothermalSource1.T_start
 -1       1                       0                       1                
  1   280   # pumpGeothermalSource1.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource1.mSenFac
  0       1                       0                       0                
  6   257   # pumpGeothermalSource1.allowFlowReversal
  0       0                       0                 1.0000000000000000E+008
  6   260   # pumpGeothermalSource1.port_b.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pumpGeothermalSource1.port_b.h_outflow
  0       1                       0                       0                
  6   256   # pumpGeothermalSource1.m_flow_nominal
  0 1.0000000000000000E-004       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource1.m_flow_small
  0       0                       0                       0                
  6   257   # pumpGeothermalSource1.show_T
  0       0                       0                       0                
  6   256   # pumpGeothermalSource1.dp
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1._m_flow_start
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1._dp_start
  0       0                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource1.per.pressure.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource1.per.pressure.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource1.per.pressure.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource1.per.pressure.dp[2]
 -1       0                       0                       0                
  1   281   # pumpGeothermalSource1.per.use_powerCharacteristic
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pumpGeothermalSource1.per.hydraulicEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # pumpGeothermalSource1.per.hydraulicEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pumpGeothermalSource1.per.motorEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # pumpGeothermalSource1.per.motorEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pumpGeothermalSource1.per.power.V_flow[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pumpGeothermalSource1.per.power.P[1]
 -1       1                       0                       0                
  1   281   # pumpGeothermalSource1.per.motorCooledByFluid
 -1       1                       0                 1.0000000000000000E+100
  1   280   # pumpGeothermalSource1.per.speed_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource1.per.constantSpeed
  0       0                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource1.per.speeds[1]
 -1    1500                       0                       0                
  1   280   # pumpGeothermalSource1.per.speed_rpm_nominal
  0       0                       0                       0                
  6   256   # pumpGeothermalSource1.per.constantSpeed_rpm
  0       0                       0                       0                
  6   256   # pumpGeothermalSource1.per.speeds_rpm[1]
  0       0                       0                       0                
  6   257   # pumpGeothermalSource1.per.havePressureCurve
  0       3                       1                       3                
  6   258   # pumpGeothermalSource1.inputType
  0   10000                       0                       0                
  6   256   # pumpGeothermalSource1.constInput
  0   10000                       0                       0                
  6   256   # pumpGeothermalSource1.stageInputs[1]
  0       0                       0                       0                
  6   257   # pumpGeothermalSource1.computePowerUsingSimilarityLaws
  0       0                       0                       0                
  6   257   # pumpGeothermalSource1.addPowerToMedium
 -1       0                       0                       0                
  1   281   # pumpGeothermalSource1.nominalValuesDefineDefaultPressureCurve
  0       1                       0                       0                
  6   256   # pumpGeothermalSource1.tau
  0       1                       0                       0                
  6   257   # pumpGeothermalSource1.use_inputFilter
 -1      30                       0                       0                
  1   280   # pumpGeothermalSource1.riseTime
  0       4                       1                       4                
  6   258   # pumpGeothermalSource1.init
 -1       0                       0                       1                
  1   280   # pumpGeothermalSource1.y_start
  0       1                       0                       0                
  6   256   # pumpGeothermalSource1.y_actual
  0       0                       0                       0                
  6   256   # pumpGeothermalSource1.P
  0     300                       1                   10000                
  6   260   # pumpGeothermalSource1.heatPort.T
  0       0                       0                       0                
  6   388   # pumpGeothermalSource1.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # pumpGeothermalSource1.VMachine_flow
  0       0                       0                       0                
  6   256   # pumpGeothermalSource1.dpMachine
  0       0                       0                       0                
  6   256   # pumpGeothermalSource1.eta
  0       0                       0                       0                
  6   256   # pumpGeothermalSource1.etaHyd
  0       0                       0                       0                
  6   256   # pumpGeothermalSource1.etaMot
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1._VMachine_flow
  0       3                       1                       3                
  6  1282   # pumpGeothermalSource1.preVar
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.speedIsInput
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource1.nOri
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.haveVMax
  0 1.0044335697769957E-003       0                       0                
  6  1280   # pumpGeothermalSource1.V_flow_max
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource1.sta_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pumpGeothermalSource1.sta_start.T
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.h_outflow_start
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource1.vol.energyDynamics
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource1.vol.massDynamics
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource1.vol.substanceDynamics
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource1.vol.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource1.vol.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pumpGeothermalSource1.vol.T_start
  0       0                       0                       1                
  6  1280   # pumpGeothermalSource1.vol.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.vol.mSenFac
  0       0                       0                       0                
  6   769   # pumpGeothermalSource1.vol.initialize_p
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.vol.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.vol.simplify_mWat_flow
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.vol.use_C_flow
  0       1                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.vol.m_flow_nominal
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource1.vol.nPorts
  0 1.0000000000000000E-004       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.vol.m_flow_small
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.vol.allowFlowReversal
  0 1.0044335697769957E-003       0                       0                
  6  1280   # pumpGeothermalSource1.vol.V
  0       1                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.vol.rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource1.vol.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pumpGeothermalSource1.vol.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.vol.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource1.vol.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pumpGeothermalSource1.vol.state_start.T
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.vol.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1412   # pumpGeothermalSource1.vol.preTem.port.Q_flow
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.heaFloSen.Q_flow
  0       0                       0                       0                
  6  1412   # pumpGeothermalSource1.vol.heaFloSen.port_a.Q_flow
  0       0                       0                       0                
  6  1412   # pumpGeothermalSource1.vol.heaFloSen.port_b.Q_flow
  0       0                       0                       0                
  6  1412   # pumpGeothermalSource1.vol.heatPort.Q_flow
  0       1                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.tau
  0 1.0044335697769957E-003       0                       0                
  6  1280   # pumpGeothermalSource1.vol.V_nominal
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource1.filter.analogFilter
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource1.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # pumpGeothermalSource1.filter.order
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.filter.f_cut
 -1       1                       0                       0                
  1  1304   # pumpGeothermalSource1.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # pumpGeothermalSource1.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # pumpGeothermalSource1.filter.f_min
 -1       1                       0                       0                
  1  1305   # pumpGeothermalSource1.filter.normalized
  0       4                       1                       4                
  6  1282   # pumpGeothermalSource1.filter.init
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource1.filter.nx
 -1       0                       0                       0                
  1  1304   # pumpGeothermalSource1.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # pumpGeothermalSource1.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.filter.y_start
  0   10000                       0                       0                
  6  1280   # pumpGeothermalSource1.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # pumpGeothermalSource1.filter.x[1]
  0       0                       0                       0                
  3  1280   # pumpGeothermalSource1.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # pumpGeothermalSource1.filter.x[2]
  0       0                       0                       0                
  3  1280   # pumpGeothermalSource1.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource1.filter.ncr
  0       0                       0                       0                
  6  1282   # pumpGeothermalSource1.filter.nc0
  0       0                       0                       0                
  6  1282   # pumpGeothermalSource1.filter.na
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource1.filter.nr
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.filter.cr[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.filter.cr[2]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.filter.r[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.filter.r[2]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.filter.uu[1]
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.preSou.allowFlowReversal
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.preSou.dp_start
 -1       0                 -100000                  100000                
  1  1304   # pumpGeothermalSource1.preSou.m_flow_start
  0 1.0000000000000000E-004 -100000                  100000                
  6  1280   # pumpGeothermalSource1.preSou.m_flow_small
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.preSou.show_T
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.preSou.show_V_flow
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.preSou.V_flow
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.preSou.control_m_flow
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.preSou.m_flow_internal
  0 9.9558600000000001E+002       0                       0                
  6  1280   # pumpGeothermalSource1.rho_inlet.y
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.senMasFlo.allowFlowReversal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.senMasFlo.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.senMasFlo.m_flow_small
  0       0                       0                  100000                
  6  1412   # pumpGeothermalSource1.senRelPre.port_a.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # pumpGeothermalSource1.senRelPre.port_a.h_outflow
  0       0                       0                  100000                
  6  1412   # pumpGeothermalSource1.senRelPre.port_b.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # pumpGeothermalSource1.senRelPre.port_b.h_outflow
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.senRelPre.p_rel
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.per.pressure.V_flow[1]
  0 2.0088671395539913E-003       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.per.pressure.V_flow[2]
  0   20000                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.per.pressure.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.per.pressure.dp[2]
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.eff.per.use_powerCharacteristic
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.per.hydraulicEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # pumpGeothermalSource1.eff.per.hydraulicEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.per.motorEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # pumpGeothermalSource1.eff.per.motorEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.per.power.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.per.power.P[1]
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.eff.per.motorCooledByFluid
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.per.speed_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.per.constantSpeed
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.per.speeds[1]
 -1    1500                       0                       0                
  1  1304   # pumpGeothermalSource1.eff.per.speed_rpm_nominal
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.per.constantSpeed_rpm
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.per.speeds_rpm[1]
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.eff.per.havePressureCurve
  0       3                       1                       3                
  6  1282   # pumpGeothermalSource1.eff.preVar
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.eff.computePowerUsingSimilarityLaws
  0 2.0088671395539913E-003       0                       0                
  6  1280   # pumpGeothermalSource1.eff.V_flow_nominal
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.rho_default
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.eff.haveVMax
  0 1.0044335697769957E-003       0                       0                
  6  1280   # pumpGeothermalSource1.eff.V_flow_max
  0       2                       1                 1.0000000000000000E+100
  6  1282   # pumpGeothermalSource1.eff.nOri
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.eff.homotopyInitialization
  0       1                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.y_out
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.rho
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.WFlo
  0       1                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.r_N
  0 1.0044335697769957E-003       0                       0                
  6  1280   # pumpGeothermalSource1.eff.r_V
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.eff.preSpe
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.eff.prePre
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.motDer[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.hydDer[1]
  0   20000                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.dpMax
  0 5.0000000000000003E-002       0                       0                
  6  1280   # pumpGeothermalSource1.eff.delta
  0 4.9779300000000012E+003       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.kRes
  0       1                       0                       0                
  6  1282   # pumpGeothermalSource1.eff.curve
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource1.eff.pCur1.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur1.V_flow[1]
  0 2.0088671395539913E-003       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur1.V_flow[2]
  0   20000                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur1.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur1.dp[2]
  0       3                       0                       0                
  6  1282   # pumpGeothermalSource1.eff.pCur2.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur2.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur2.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur2.V_flow[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur2.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur2.dp[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur2.dp[3]
  0       4                       0                       0                
  6  1282   # pumpGeothermalSource1.eff.pCur3.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur3.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur3.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur3.V_flow[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur3.V_flow[4]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur3.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur3.dp[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur3.dp[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.eff.pCur3.dp[4]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.preDer1[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.preDer1[2]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.preDer2[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.preDer2[2]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.preDer2[3]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.preDer3[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.preDer3[2]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.preDer3[3]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.preDer3[4]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.eff.powDer[1]
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.eff.haveMinimumDecrease
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.eff.haveDPMax
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pumpGeothermalSource1.dp_start
  0   10000                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource1.dp_nominal
  0   10000                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource1.constantHead
  0   10000                       0                 1.0000000000000000E+100
  6   256   # pumpGeothermalSource1.heads[1]
  0      -1                       0                       0                
  6  1280   # pumpGeothermalSource1.gain.k
  0       1                       0                       0                
  6   257   # resistanceGeothermalSource1.allowFlowReversal
  0 5.0000000000000000E-001       0                       0                
  6   256   # resistanceGeothermalSource1.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6   256   # resistanceGeothermalSource1.m_flow_small
  0       0                       0                       0                
  6   257   # resistanceGeothermalSource1.show_T
  0       0                       0                       0                
  6   256   # resistanceGeothermalSource1.dp
  0       0                       0                       0                
  6  1280   # resistanceGeothermalSource1._m_flow_start
  0       0                       0                       0                
  6  1280   # resistanceGeothermalSource1._dp_start
  0       0                       0                       0                
  6   257   # resistanceGeothermalSource1.from_dp
  0   15000                       0                       0                
  6   256   # resistanceGeothermalSource1.dp_nominal
  0       1                       0                       0                
  6   257   # resistanceGeothermalSource1.homotopyInitialization
  0       0                       0                       0                
  6   257   # resistanceGeothermalSource1.linearized
  0 1.4999999999999999E-001       0                 1.0000000000000000E+100
  6   256   # resistanceGeothermalSource1.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # resistanceGeothermalSource1.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # resistanceGeothermalSource1.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # resistanceGeothermalSource1.eta_default
  0 5.0000000000000000E-001       0                       0                
  6  1280   # resistanceGeothermalSource1.m_flow_nominal_pos
  0   15000                       0                       0                
  6  1280   # resistanceGeothermalSource1.dp_nominal_pos
  0 2.9999999999999999E-001 1.0000000000000000E-002 1.0000000000000000E+100
  6   256   # resistanceGeothermalSource1.deltaM
  0 4.0824829046386298E-003       0                       0                
  6   256   # resistanceGeothermalSource1.k
  0       1                       0                       0                
  6  1281   # resistanceGeothermalSource1.computeFlowResistance
 -1  100000                       0                       0                
  1   280   # const.k
 -1  100000                       0                       0                
  1   280   # const1.k
 -1      50                       0                       0                
  1   280   # booleanStep.startTime
 -1       0                       0                       0                
  1   281   # booleanStep.startValue
  0       0                       0                       0                
  6   388   # TempH.port.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # TempH.port.h_outflow
  0       0                       0                 1.0000000000000000E+100
  6   256   # TempH.T
  0       0                       0                       0                
  6   256   # PID.u_m
  0       0                       0                       0                
  6   256   # PID.controlError
  0       2                       1                       4                
  6   258   # PID.controllerType
 -1       2                       0                 1.0000000000000000E+100
  1   280   # PID.k
 -1       2                 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # PID.Ti
 -1      10                       0                 1.0000000000000000E+100
  1   280   # PID.Td
  0       1                       0                       0                
  6   256   # PID.yMax
 -1       0                       0                       0                
  1   280   # PID.yMin
 -1       1                       0                 1.0000000000000000E+100
  1   280   # PID.wp
 -1       0                       0                 1.0000000000000000E+100
  1   280   # PID.wd
 -1 9.0000000000000002E-001 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # PID.Ni
 -1      10                 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # PID.Nd
  0       5                       1                       5                
  6   258   # PID.initType
  0       1                       0                       0                
  6   257   # PID.limitsAtInit
 -1       0                       0                       0                
  1   280   # PID.xi_start
 -1       0                       0                       0                
  1   280   # PID.xd_start
 -1       0                       0                       0                
  1   280   # PID.y_start
  0       0                       0                       0                
  6   257   # PID.strict
  0       1                       0                       0                
  6   768   # PID.unitTime
  0       0                       0                       0                
  6   256   # PID.addP.y
  0       0                       0                       0                
  6   256   # PID.addP.k1
 -1      -1                       0                       0                
  1   280   # PID.addP.k2
 -1       1                       0                       0                
  1   280   # PID.P.k
  0       0                       0                       0                
  6   256   # PID.P.y
  0       1                       0                       0                
  6   256   # PID.gainPID.k
  0       0                       0                       0                
  6   256   # PID.gainPID.u
  0       0                       0                       0                
  6   256   # PID.gainPID.y
 -1       1                       0                       0                
  1   280   # PID.addPID.k1
 -1       1                       0                       0                
  1   280   # PID.addPID.k2
 -1       1                       0                       0                
  1   280   # PID.addPID.k3
  0       1                       0                       0                
  6   256   # PID.limiter.uMax
  0       0                       0                       0                
  6   256   # PID.limiter.uMin
  0       0                       0                       0                
  6   257   # PID.limiter.strict
  0       1                       0                       0                
  6   257   # PID.limiter.limitsAtInit
  0       1                       0                       0                
  6   769   # PID.with_I
  0       0                       0                       0                
  6   769   # PID.with_D
 -1       0                       0                       0                
  1   280   # PID.Dzero.k
  0       0                       0                       0                
  6   256   # fromKelvin.Celsius
  0       0                       0                       0                
  6   388   # TempC.port.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # TempC.port.h_outflow
  0       0                       0                 1.0000000000000000E+100
  6   256   # TempC.T
 -1       6                       0                       0                
  1   280   # const3.k
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.I.k
  0       3                       1                       4                
  6   258   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.I.initType
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.I.y_start
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.I.u
 -1       0                       0                       0                
  2   272   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.I.y
  0       0                       0                       0                
  3   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.I.der(y)
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addI.k1
 -1      -1                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addI.k2
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addI.k3
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addI.u3
  0       0                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addSat.y
 -1       1                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addSat.k1
 -1      -1                       0                       0                
  1   280   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.addSat.k2
  0       1                       0                       0                
  6   256   # heatPumpDetailed.cycle.PIDmaxHeatFlowCon.gainTrack.k
  0       1                       1                       4                
  6  1282   # heatPumpDetailed.evaporator.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # heatPumpDetailed.evaporator.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # heatPumpDetailed.evaporator.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # heatPumpDetailed.evaporator.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # heatPumpDetailed.evaporator.dynBal.p_start
  0 2.8814999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.evaporator.dynBal.T_start
  0       0                       0                       1                
  6  1280   # heatPumpDetailed.evaporator.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.evaporator.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # heatPumpDetailed.evaporator.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # heatPumpDetailed.evaporator.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # heatPumpDetailed.evaporator.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # heatPumpDetailed.evaporator.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # heatPumpDetailed.evaporator.dynBal.use_C_flow
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.evaporator.dynBal.mOut
  0 2.8814999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.evaporator.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.evaporator.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # heatPumpDetailed.evaporator.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.evaporator.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.evaporator.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # heatPumpDetailed.evaporator.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # heatPumpDetailed.evaporator.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.evaporator.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.evaporator.dynBal.medium.p_bar
 -1 6.2482977359999999E+007       0                       0                
  2  1304   # heatPumpDetailed.evaporator.dynBal.U
  0       0                       0                       0                
  3  1280   # heatPumpDetailed.evaporator.dynBal.der(U)
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.evaporator.dynBal.m
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.evaporator.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.evaporator.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.evaporator.dynBal.Hb_flow
  0       1                       0                       0                
  6  1280   # heatPumpDetailed.evaporator.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.evaporator.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # heatPumpDetailed.evaporator.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # heatPumpDetailed.evaporator.dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # heatPumpDetailed.evaporator.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.evaporator.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # heatPumpDetailed.evaporator.dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # heatPumpDetailed.evaporator.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.evaporator.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.evaporator.dynBal.rho_default
  0   62760                       0                       0                
  6  1280   # heatPumpDetailed.evaporator.dynBal.hStart
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.evaporator.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # heatPumpDetailed.condenser.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # heatPumpDetailed.condenser.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # heatPumpDetailed.condenser.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # heatPumpDetailed.condenser.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # heatPumpDetailed.condenser.dynBal.p_start
  0 2.9814999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.condenser.dynBal.T_start
  0       0                       0                       1                
  6  1280   # heatPumpDetailed.condenser.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.condenser.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # heatPumpDetailed.condenser.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # heatPumpDetailed.condenser.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # heatPumpDetailed.condenser.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # heatPumpDetailed.condenser.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # heatPumpDetailed.condenser.dynBal.use_C_flow
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.condenser.dynBal.mOut
  0 2.9814999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.condenser.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.condenser.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # heatPumpDetailed.condenser.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.condenser.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.condenser.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # heatPumpDetailed.condenser.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # heatPumpDetailed.condenser.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.condenser.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.condenser.dynBal.medium.p_bar
 -1 1.0413829559999999E+008       0                       0                
  2  1304   # heatPumpDetailed.condenser.dynBal.U
  0       0                       0                       0                
  3  1280   # heatPumpDetailed.condenser.dynBal.der(U)
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.condenser.dynBal.m
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.condenser.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.condenser.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.condenser.dynBal.Hb_flow
  0       1                       0                       0                
  6  1280   # heatPumpDetailed.condenser.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.condenser.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # heatPumpDetailed.condenser.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # heatPumpDetailed.condenser.dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # heatPumpDetailed.condenser.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.condenser.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # heatPumpDetailed.condenser.dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # heatPumpDetailed.condenser.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # heatPumpDetailed.condenser.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # heatPumpDetailed.condenser.dynBal.rho_default
  0 1.0460000000000000E+005       0                       0                
  6  1280   # heatPumpDetailed.condenser.dynBal.hStart
  0       0                       0                       0                
  6  1280   # heatPumpDetailed.condenser.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource.vol.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource.vol.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource.vol.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource.vol.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource.vol.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pumpGeothermalSource.vol.dynBal.T_start
  0       0                       0                       1                
  6  1280   # pumpGeothermalSource.vol.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.vol.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pumpGeothermalSource.vol.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.vol.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource.vol.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.vol.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.vol.dynBal.use_C_flow
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.vol.dynBal.Q_flow
  0       3                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.vol.dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pumpGeothermalSource.vol.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.vol.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pumpGeothermalSource.vol.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.vol.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.vol.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.vol.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource.vol.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.vol.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.vol.dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pumpGeothermalSource.vol.dynBal.U
  0       0                       0                       0                
  3  1280   # pumpGeothermalSource.vol.dynBal.der(U)
  0       3                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.vol.dynBal.m
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.vol.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.vol.dynBal.mb_flow
  0 3.0133007093309867E-003       0                       0                
  6  1280   # pumpGeothermalSource.vol.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.vol.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource.vol.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource.vol.dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pumpGeothermalSource.vol.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.vol.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource.vol.dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource.vol.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pumpGeothermalSource.vol.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource.vol.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.vol.dynBal.hStart
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource.vol.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource1.vol.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource1.vol.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource1.vol.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pumpGeothermalSource1.vol.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource1.vol.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pumpGeothermalSource1.vol.dynBal.T_start
  0       0                       0                       1                
  6  1280   # pumpGeothermalSource1.vol.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.vol.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pumpGeothermalSource1.vol.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.vol.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pumpGeothermalSource1.vol.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.vol.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.vol.dynBal.use_C_flow
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.dynBal.Q_flow
  0       1                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.vol.dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pumpGeothermalSource1.vol.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.vol.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pumpGeothermalSource1.vol.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.vol.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.vol.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pumpGeothermalSource1.vol.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.dynBal.medium.p_bar
 -1       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  2  1296   # pumpGeothermalSource1.vol.dynBal.U
  0       0                       0                       0                
  3  1280   # pumpGeothermalSource1.vol.dynBal.der(U)
  0       1                       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.vol.dynBal.m
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.dynBal.mb_flow
  0 1.0044335697769957E-003       0                       0                
  6  1280   # pumpGeothermalSource1.vol.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource1.vol.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource1.vol.dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.vol.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pumpGeothermalSource1.vol.dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pumpGeothermalSource1.vol.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pumpGeothermalSource1.vol.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pumpGeothermalSource1.vol.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.dynBal.hStart
  0       0                       0                       0                
  6  1280   # pumpGeothermalSource1.vol.dynBal.mWat_flow_internal
  0       0                       0                       0                
  6   256   # PID.I.k
  0       3                       1                       4                
  6   258   # PID.I.initType
  0       0                       0                       0                
  6   256   # PID.I.y_start
  0       0                       0                       0                
  6   256   # PID.I.u
 -1       0                       0                       0                
  2   272   # PID.I.y
  0       0                       0                       0                
  3   256   # PID.I.der(y)
 -1       1                       0                       0                
  1   280   # PID.addI.k1
 -1      -1                       0                       0                
  1   280   # PID.addI.k2
 -1       1                       0                       0                
  1   280   # PID.addI.k3
  0       0                       0                       0                
  6   256   # PID.addI.u3
  0       0                       0                       0                
  6   256   # PID.addSat.y
 -1       1                       0                       0                
  1   280   # PID.addSat.k1
 -1      -1                       0                       0                
  1   280   # PID.addSat.k2
  0       1                       0                       0                
  6   256   # PID.gainTrack.k


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(1292,215)
Capacity control type [:#(type=Boolean)]
Type of capacity calculation [:#(type=Integer)]
Pressure loss at nominal mass flow in condenser [Pa|bar]
Pressure loss at nominal mass flow in evaporator [Pa|bar]
External medium volume in heat exchanger [m3]
External medium volume in heat exchanger [m3]
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
nominal mass flow rate in condenser [kg/s]
nominal mass flow rate in evaporator [kg/s]
initial evaporator temperature [K|degC]
initial condenser temperature [K|degC]
Maximum speed of compressor in 1/min (only used if used in polynom)
Minimum speed of compressor in 1/min (only used if used in polynom)
Nominal speed of compressor in 1/min (only used if used in polynom)
Electric power consumption [:#(type=Boolean)]
CoP [:#(type=Boolean)]
First Order model for capacity [:#(type=Boolean)]
Time constant for first order model [s]
assumption of P_tech/P_el (for calculation of Evaporator load) [1]
scaling factor (Attention: not physically correct) [1]
additional electric power when heat pump is on (not influenced through scaling factor) [W]
Correction of mass flow different from nominal flow in condenser (polynomials: make sure mass flow rate is not corrected in polynomials) [:#(type=Boolean)]
Nominal mass flow rate in condenser (only with polynomials, as already given in data tables) [kg/s]
Correction of mass flow different from nominal flow in evaporator (polynomials: make sure mass flow rate is not corrected in polynomials) [:#(type=Boolean)]
Nominal mass flow rate in evaporator (only for polynomials, as already given in data tables) [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Default value for mass fractions of medium (for initialization) [kg/kg]
Time constant at nominal flow rate (use tau=0 for steady-state sensor, but see user guide for potential problems) [s]
Type of initialization (InitialState and InitialOutput are identical) [:#(type=Modelica.Blocks.Types.Init)]
Gain to take flow rate into account for sensor time constant [1]
Flag, true if the sensor is a dynamic sensor [:#(type=Boolean)]
Normalized mass flow rate [1]
Inverse of tau [s-1]
Temperature of the passing fluid [K|degC]
der(Temperature of the passing fluid) [K/s]
Initial or guess value of output (= state) [K|degC]
if true, temperature T converges towards TAmb when no flow [:#(type=Boolean)]
Fixed ambient temperature for heat transfer [K|degC]
Time constant for heat transfer, default 20 minutes [s]
Dummy parameter to avoid division by tauLoss [1/s]
Medium temperature to which the sensor is exposed [K|degC]
Temperature of inflowing fluid at port_a [K|degC]
Temperature of inflowing fluid at port_b, or T_a_inflow if uni-directional flow [K|degC]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Time constant at nominal flow rate (use tau=0 for steady-state sensor, but see user guide for potential problems) [s]
Type of initialization (InitialState and InitialOutput are identical) [:#(type=Modelica.Blocks.Types.Init)]
Gain to take flow rate into account for sensor time constant [1]
Flag, true if the sensor is a dynamic sensor [:#(type=Boolean)]
Normalized mass flow rate [1]
Inverse of tau [s-1]
Temperature of the passing fluid [K|degC]
der(Temperature of the passing fluid) [K/s]
Initial or guess value of output (= state) [K|degC]
if true, temperature T converges towards TAmb when no flow [:#(type=Boolean)]
Fixed ambient temperature for heat transfer [K|degC]
Time constant for heat transfer, default 20 minutes [s]
Dummy parameter to avoid division by tauLoss [1/s]
Medium temperature to which the sensor is exposed [K|degC]
Temperature of inflowing fluid at port_a [K|degC]
Temperature of inflowing fluid at port_b, or T_a_inflow if uni-directional flow [K|degC]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Time constant at nominal flow rate (use tau=0 for steady-state sensor, but see user guide for potential problems) [s]
Type of initialization (InitialState and InitialOutput are identical) [:#(type=Modelica.Blocks.Types.Init)]
Gain to take flow rate into account for sensor time constant [1]
Flag, true if the sensor is a dynamic sensor [:#(type=Boolean)]
Normalized mass flow rate [1]
Inverse of tau [s-1]
Temperature of the passing fluid [K|degC]
der(Temperature of the passing fluid) [K/s]
Initial or guess value of output (= state) [K|degC]
if true, temperature T converges towards TAmb when no flow [:#(type=Boolean)]
Fixed ambient temperature for heat transfer [K|degC]
Time constant for heat transfer, default 20 minutes [s]
Dummy parameter to avoid division by tauLoss [1/s]
Medium temperature to which the sensor is exposed [K|degC]
Temperature of inflowing fluid at port_a [K|degC]
Temperature of inflowing fluid at port_b, or T_a_inflow if uni-directional flow [K|degC]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Time constant at nominal flow rate (use tau=0 for steady-state sensor, but see user guide for potential problems) [s]
Type of initialization (InitialState and InitialOutput are identical) [:#(type=Modelica.Blocks.Types.Init)]
Gain to take flow rate into account for sensor time constant [1]
Flag, true if the sensor is a dynamic sensor [:#(type=Boolean)]
Normalized mass flow rate [1]
Inverse of tau [s-1]
Temperature of the passing fluid [K|degC]
der(Temperature of the passing fluid) [K/s]
Initial or guess value of output (= state) [K|degC]
if true, temperature T converges towards TAmb when no flow [:#(type=Boolean)]
Fixed ambient temperature for heat transfer [K|degC]
Time constant for heat transfer, default 20 minutes [s]
Dummy parameter to avoid division by tauLoss [1/s]
Medium temperature to which the sensor is exposed [K|degC]
Temperature of inflowing fluid at port_a [K|degC]
Temperature of inflowing fluid at port_b, or T_a_inflow if uni-directional flow [K|degC]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Default value for mass fractions of medium (for initialization) [kg/kg]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Capacity control type [:#(type=Boolean)]
Type of capacity calculation [:#(type=Integer)]
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Heating power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
Electrical power lookup table
nominal mass flow rate in condenser [kg/s]
nominal mass flow rate in evaporator [kg/s]
























































Maximum condenser outlet temperature [K|degC]
Maximum speed of compressor in 1/min (only used if used in polynom)
Minimum speed of compressor in 1/min (only used if used in polynom)
Nominal speed of compressor in 1/min (only used if used in polynom)
First Order model for capacity [:#(type=Boolean)]
Time constant for first order model [s]
assumption of P_tech/P_el (for calculation of Evaporator load) [1]
scaling factor (Attention: not physically correct) [1]
additional electric power when heat pump is on (not influenced through scaling factor) [W]
Correction of mass flow different from nominal flow in condenser (use only if not included in polynom) [:#(type=Boolean)]
Nominal mass flow rate in condenser [kg/s]
Correction of mass flow different from nominal flow in evaporator  (use only if not included in polynom) [:#(type=Boolean)]
Nominal mass flow rate in evaporator [kg/s]
[W]
[W]
[W]
[W]







Needed to connect to conditional model
Needed to connect to conditional model
Needed to connect to conditional model
[kg/s]
[kg/s]
Gain [1]
Time Constant [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state) [W]
Connector of Real output signal [W]
der(Connector of Real output signal) [W/s]
Connector of Real output signal containing input signal u in another unit [degC]
Connector of Real output signal containing input signal u in another unit [degC]
Value of Real output
smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Amplitude of trapezoid [W]
Rising duration of trapezoid [s]
Falling duration of trapezoid [s]
Offset of output signal [W]
Connector of Boolean input signal [:#(type=Boolean)]
Connector of Real output signal [W]
Value of y at time of recent edge [W]
Current rising/falling rate [W/s]
Predicted time of output reaching endValue [s]
Comparison with respect to threshold
Gain of upper input
Gain of lower input
Value of Real output
Connector of Real output signal containing input signal u in another unit [degC]
Connector of Real input signal 1 [1]
Control error (set point - measurement) [K]
Type of controller [:#(type=Modelica.Blocks.Types.SimpleController)]
Gain of controller [1]
Time constant of Integrator block [s]
Time constant of Derivative block [s]
Upper limit of output
Lower limit of output
Set-point weight for Proportional block (0..1)
Set-point weight for Derivative block (0..1)
Ni*Ti is time constant of anti-windup compensation
The higher Nd, the more ideal the derivative block
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.InitPID)]
= false, if limits are ignored during initialization [:#(type=Boolean)]
Initial or guess value value for integrator output (= integrator state)
Initial or guess value for state of derivative block
Initial value of output
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
[s]
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Input signal connector
Output signal connector
Gain of upper input
Gain of middle input
Gain of lower input
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Constant output value
[:#(type=Boolean)]
Consider heat losses of condenser to ambient [:#(type=Boolean)]
Thermal conductance of heat loss to ambient [W/K]
Needed to connect to conditional connector
Needed to connect to conditional connector [K]
Value of Real output [K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Constant thermal conductance of material [W/K]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
[K]
Maximum condenser outlet temperature [K|degC]
Gain value multiplied with input signal [1]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|K]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume [1]
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs [1]
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|K]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume [1]
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs [1]
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the pressure from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [kg/kg]
Number of ports [:#(type=Integer)]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the pressure from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [kg/kg]
Number of ports [:#(type=Integer)]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the pressure from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [kg/kg]
Number of ports [:#(type=Integer)]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the pressure from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [kg/kg]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Use power data instead of motor efficiency [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Nominal rotational speed for flow characteristic [1]
Normalized speed set point, used if inputType = AixLib.Fluid.Types.InputType.Constant [1]
Vector of normalized speed set points, used if inputType = AixLib.Fluid.Types.InputType.Stages [1]
Nominal rotational speed for flow characteristic [rev/min]
Speed set point, used if inputType = AixLib.Fluid.Types.InputType.Constant [rev/min]
Vector of speed set points, used if inputType = AixLib.Fluid.Types.InputType.Stages [rev/min]
= true, if default record values are being used [:#(type=Boolean)]
Control input type [:#(type=AixLib.Fluid.Types.InputType)]
Constant input set point [Pa]
Vector of input set points corresponding to stages [Pa]
= true, compute power exactly, using similarity laws. Otherwise approximate. [:#(type=Boolean)]
Set to false to avoid any power (=heat and flow work) being added to medium (may give simpler equations) [:#(type=Boolean)]
Set to true to avoid warning if m_flow_nominal and dp_nominal are used to construct the default pressure curve [:#(type=Boolean)]
Time constant of fluid volume for nominal flow, used if energy or mass balance is dynamic [s]
= true, if speed is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of the speed) [s]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of speed [1]
Actual normalised pump speed that is used for computations [1]
Electrical power consumed [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Volume flow rate [m3/s]
Pressure difference [Pa|Pa]
Global efficiency [1]
Hydraulic efficiency [1]
Motor efficiency [1]
Start value for VMachine_flow, used to avoid a warning if not specified [m3/s]
Type of prescribed variable [:#(type=AixLib.Fluid.Movers.BaseClasses.Types.PrescribedVariable)]
Parameter that is true if speed is the controlled variables [:#(type=Boolean)]
Number of data points for pressure curve [:#(type=Integer)]
Flag, true if user specified data that contain V_flow_max [:#(type=Boolean)]
Maximum volume flow rate, used for smoothing [m3/s]
Default medium density [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Start value for outflowing enthalpy [J/kg]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume [1]
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow from port_a to port_b as output signal [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Time constant at nominal flow [s]
Volume of delay element [m3]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output [Pa]
Nominal value of input (used for scaling the states) [Pa]
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Guess value of dp = port_a.p - port_b.p [Pa|Pa]
Guess value of m_flow = port_a.m_flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if temperatures at port_a and port_b are computed [:#(type=Boolean)]
= true, if volume flow rate at inflowing port is computed [:#(type=Boolean)]
Volume flow rate at inflowing port (positive when flow from port_a to port_b) [m3/s]
= false to control dp instead of m_flow [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Value of Real output [kg/m3]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Relative pressure of port_a minus port_b [Pa|Pa]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Use power data instead of motor efficiency [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Nominal rotational speed for flow characteristic [1]
Normalized speed set point, used if inputType = AixLib.Fluid.Types.InputType.Constant [1]
Vector of normalized speed set points, used if inputType = AixLib.Fluid.Types.InputType.Stages [1]
Nominal rotational speed for flow characteristic [rev/min]
Speed set point, used if inputType = AixLib.Fluid.Types.InputType.Constant [rev/min]
Vector of speed set points, used if inputType = AixLib.Fluid.Types.InputType.Stages [rev/min]
= true, if default record values are being used [:#(type=Boolean)]
Type of prescribed variable [:#(type=AixLib.Fluid.Movers.BaseClasses.Types.PrescribedVariable)]
= true, compute power exactly, using similarity laws. Otherwise approximate. [:#(type=Boolean)]
Nominal volume flow rate, used for homotopy [m3/s]
Fluid density at medium default state [kg/m3|g/cm3]
Flag, true if user specified data that contain V_flow_max [:#(type=Boolean)]
Maximum volume flow rate, used for smoothing [m3/s]
Number of data points for pressure curve [:#(type=Integer)]
= true, use homotopy method [:#(type=Boolean)]
Mover speed (prescribed or computed) [1]
Medium density [kg/m3]
Flow work [W]
Ratio N_actual/N_nominal [1]
Ratio V_flow/V_flow_max [1]
True if speed is a prescribed variable of this block [:#(type=Boolean)]
True if pressure head is a prescribed variable of this block [:#(type=Boolean)]
Coefficients for polynomial of motor efficiency vs. volume flow rate
Coefficients for polynomial of hydraulic efficiency vs. volume flow rate
Maximum head [Pa|Pa]
Small value used to for regularization and to approximate an internal flow resistance of the fan [1]
Coefficient for internal pressure drop of fan or pump [kg/(s.m4)]
Flag, used to pick the right representatio of the fan or pump pressure curve [:#(type=Integer)]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Coefficients for polynomial of power vs. flow rate
Flag used for reporting [:#(type=Boolean)]
Flag, true if user specified data that contain dpMax [:#(type=Boolean)]
Initial value of pressure raise [Pa|Pa]
Nominal pressure raise, used to normalized the filter if use_inputFilter=true,        to set default values of constantHead and heads, and        and for default pressure curve if not specified in record per [Pa|Pa]
Constant pump head, used when inputType=Constant [Pa|Pa]
Vector of head set points, used when inputType=Stages [Pa|Pa]
Gain value multiplied with input signal [1]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs [1]
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Use power data instead of motor efficiency [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Nominal rotational speed for flow characteristic [1]
Normalized speed set point, used if inputType = AixLib.Fluid.Types.InputType.Constant [1]
Vector of normalized speed set points, used if inputType = AixLib.Fluid.Types.InputType.Stages [1]
Nominal rotational speed for flow characteristic [rev/min]
Speed set point, used if inputType = AixLib.Fluid.Types.InputType.Constant [rev/min]
Vector of speed set points, used if inputType = AixLib.Fluid.Types.InputType.Stages [rev/min]
= true, if default record values are being used [:#(type=Boolean)]
Control input type [:#(type=AixLib.Fluid.Types.InputType)]
Constant input set point [Pa]
Vector of input set points corresponding to stages [Pa]
= true, compute power exactly, using similarity laws. Otherwise approximate. [:#(type=Boolean)]
Set to false to avoid any power (=heat and flow work) being added to medium (may give simpler equations) [:#(type=Boolean)]
Set to true to avoid warning if m_flow_nominal and dp_nominal are used to construct the default pressure curve [:#(type=Boolean)]
Time constant of fluid volume for nominal flow, used if energy or mass balance is dynamic [s]
= true, if speed is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of the speed) [s]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of speed [1]
Actual normalised pump speed that is used for computations [1]
Electrical power consumed [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Volume flow rate [m3/s]
Pressure difference [Pa|Pa]
Global efficiency [1]
Hydraulic efficiency [1]
Motor efficiency [1]
Start value for VMachine_flow, used to avoid a warning if not specified [m3/s]
Type of prescribed variable [:#(type=AixLib.Fluid.Movers.BaseClasses.Types.PrescribedVariable)]
Parameter that is true if speed is the controlled variables [:#(type=Boolean)]
Number of data points for pressure curve [:#(type=Integer)]
Flag, true if user specified data that contain V_flow_max [:#(type=Boolean)]
Maximum volume flow rate, used for smoothing [m3/s]
Default medium density [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Start value for outflowing enthalpy [J/kg]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume [1]
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow from port_a to port_b as output signal [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Time constant at nominal flow [s]
Volume of delay element [m3]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output [Pa]
Nominal value of input (used for scaling the states) [Pa]
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Guess value of dp = port_a.p - port_b.p [Pa|Pa]
Guess value of m_flow = port_a.m_flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if temperatures at port_a and port_b are computed [:#(type=Boolean)]
= true, if volume flow rate at inflowing port is computed [:#(type=Boolean)]
Volume flow rate at inflowing port (positive when flow from port_a to port_b) [m3/s]
= false to control dp instead of m_flow [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Value of Real output [kg/m3]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Relative pressure of port_a minus port_b [Pa|Pa]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Use power data instead of motor efficiency [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Nominal rotational speed for flow characteristic [1]
Normalized speed set point, used if inputType = AixLib.Fluid.Types.InputType.Constant [1]
Vector of normalized speed set points, used if inputType = AixLib.Fluid.Types.InputType.Stages [1]
Nominal rotational speed for flow characteristic [rev/min]
Speed set point, used if inputType = AixLib.Fluid.Types.InputType.Constant [rev/min]
Vector of speed set points, used if inputType = AixLib.Fluid.Types.InputType.Stages [rev/min]
= true, if default record values are being used [:#(type=Boolean)]
Type of prescribed variable [:#(type=AixLib.Fluid.Movers.BaseClasses.Types.PrescribedVariable)]
= true, compute power exactly, using similarity laws. Otherwise approximate. [:#(type=Boolean)]
Nominal volume flow rate, used for homotopy [m3/s]
Fluid density at medium default state [kg/m3|g/cm3]
Flag, true if user specified data that contain V_flow_max [:#(type=Boolean)]
Maximum volume flow rate, used for smoothing [m3/s]
Number of data points for pressure curve [:#(type=Integer)]
= true, use homotopy method [:#(type=Boolean)]
Mover speed (prescribed or computed) [1]
Medium density [kg/m3]
Flow work [W]
Ratio N_actual/N_nominal [1]
Ratio V_flow/V_flow_max [1]
True if speed is a prescribed variable of this block [:#(type=Boolean)]
True if pressure head is a prescribed variable of this block [:#(type=Boolean)]
Coefficients for polynomial of motor efficiency vs. volume flow rate
Coefficients for polynomial of hydraulic efficiency vs. volume flow rate
Maximum head [Pa|Pa]
Small value used to for regularization and to approximate an internal flow resistance of the fan [1]
Coefficient for internal pressure drop of fan or pump [kg/(s.m4)]
Flag, used to pick the right representatio of the fan or pump pressure curve [:#(type=Integer)]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Coefficients for polynomial of power vs. flow rate
Flag used for reporting [:#(type=Boolean)]
Flag, true if user specified data that contain dpMax [:#(type=Boolean)]
Initial value of pressure raise [Pa|Pa]
Nominal pressure raise, used to normalized the filter if use_inputFilter=true,        to set default values of constantHead and heads, and        and for default pressure curve if not specified in record per [Pa|Pa]
Constant pump head, used when inputType=Constant [Pa|Pa]
Vector of head set points, used when inputType=Stages [Pa|Pa]
Gain value multiplied with input signal [1]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs [1]
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Constant output value [Pa]
Constant output value [Pa]
Time instant of step start [s]
Output before startTime [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Temperature in port medium [K|degC]
Connector of measurement input signal [degC]
Control error (set point - measurement) [degC]
Type of controller [:#(type=Modelica.Blocks.Types.SimpleController)]
Gain of controller [1]
Time constant of Integrator block [s]
Time constant of Derivative block [s]
Upper limit of output
Lower limit of output
Set-point weight for Proportional block (0..1)
Set-point weight for Derivative block (0..1)
Ni*Ti is time constant of anti-windup compensation
The higher Nd, the more ideal the derivative block
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.InitPID)]
= false, if limits are ignored during initialization [:#(type=Boolean)]
Initial or guess value value for integrator output (= integrator state)
Initial or guess value for state of derivative block
Initial value of output
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
[s]
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Input signal connector
Output signal connector
Gain of upper input
Gain of middle input
Gain of lower input
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Constant output value
[degC]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Temperature in port medium [K|degC]
Constant output value [degC]
Integrator gain [1]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Connector of Real input signal
Connector of Real output signal
der(Connector of Real output signal)
Gain of upper input
Gain of middle input
Gain of lower input
Connector 3 of Real input signals
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume [1]
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume [1]
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume [1]
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Sensible plus latent heat flow rate transferred into the medium [W]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume [1]
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Sensible plus latent heat flow rate transferred into the medium [W]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Integrator gain [1]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Connector of Real input signal
Connector of Real output signal
der(Connector of Real output signal)
Gain of upper input
Gain of middle input
Gain of lower input
Connector 3 of Real input signals
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]

